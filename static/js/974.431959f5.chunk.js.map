{"version":3,"file":"static/js/974.431959f5.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/configs/manifest.config.ts","app/configs/sol.config.ts","app/configs/index.ts","shared/dataloader/constant.ts","shared/dataloader/request.ts","shared/dataloader/cache.ts","shared/dataloader/index.ts","shared/util.ts","app/shared/hooks/useMintCgk.ts","app/shared/hooks/useTokenProvider.ts","app/shared/components/mint/mintAvatar.tsx","app/shared/components/mint/mintSymbol.tsx","app/page/banner/index.tsx","app/page/farmingDetails/newFarm/stepAddFarm.tsx","shared/antd/numericInput.tsx","app/helper/index.ts","app/page/farmingDetails/newFarm/confirmAddFarm.tsx","app/constants/farms.ts","app/page/farmingDetails/newFarm/accountCard.tsx","app/page/farmingDetails/newFarm/searchAccount.tsx","app/page/farmingDetails/newFarm/mintSelection.tsx","app/hooks/useMintSelection.ts","app/page/farmingDetails/newFarm/index.tsx","app/page/farmingDetails/content.tsx","app/hooks/useDebt.ts","app/hooks/useAccountStake.ts","helpers/calculateReward.ts","app/constants/errors.ts","shared/devTools.ts","app/model/farms.controller.ts","app/model/debts.controller.ts","app/model/main.controller.ts","app/model/index.ts","helpers/validateHarvest.tsx","app/page/farmingDetails/stakeAndUnstake/unstake.tsx","app/configs/farmstat.config.ts","app/page/farmingDetails/stakeAndUnstake/stake.tsx","app/shared/hooks/useMintDecimals.ts","app/page/farmingDetails/management/seed.tsx","app/page/farmingDetails/management/unseed.tsx","app/page/farmingDetails/management/freezeOrThaw.tsx","app/page/farmingDetails/management/close.tsx","app/page/farmingDetails/management/index.tsx","app/hooks/useBudget.ts","app/hooks/useReward.ts","app/hooks/useMintUsd.ts","app/hooks/useFarmLiquidity.ts","app/hooks/useFarmRoi.ts","app/page/farmingDetails/ItemFarming.tsx","app/hooks/useFarmPool.ts","app/hooks/useSearchFarm.ts","app/page/farmingDetails/listFarming.tsx","app/hooks/useFarmList.ts","app/page/farmingDetails/sentreFarms.tsx","app/page/farmingDetails/stakedFarm.tsx","app/page/farmingDetails/yourFamrs.tsx","app/page/farmingDetails/index.tsx","app/components/watcher/debtWatcher.tsx","app/components/watcher/farmWatcher.tsx","app/components/watcher/index.tsx","app/page/index.tsx","app/widget/searchBar.tsx","app/widget/farmCard.tsx","app/widget/stakedFarms/index.tsx","app/widget/yourFamrs/index.tsx","app/widget/index.tsx","app/bootstrap.app.tsx","shared/runtime.ts","shared/storage.ts","../node_modules/@senswap/react-lazyload/lib/index.js","../node_modules/@senswap/react-lazyload/lib/utils/debounce.js","../node_modules/@senswap/react-lazyload/lib/utils/event.js","../node_modules/@senswap/react-lazyload/lib/utils/scrollParent.js","../node_modules/@senswap/react-lazyload/lib/utils/throttle.js","../node_modules/copy-to-clipboard/index.js","../node_modules/react-fast-compare/index.js","../node_modules/toggle-selection/index.js"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n  senhub: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n  senhub: process.env.REACT_APP_SENHUB,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from 'shared/runtime'\nimport { Farming } from '@senswap/sen-js'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  spltAddress: string\n  splataAddress: string\n  farmingAddress: string\n  senAddress: string\n  farming: Farming\n  senOwner: string[]\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: 'https://api.devnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    farmingAddress: 'CpEsjrLhBkcuApn5uEE2tZCwxyCQKmT6S4YgT9zuLW2J',\n    get farming() {\n      return new Farming(\n        this.farmingAddress,\n        this.spltAddress,\n        this.splataAddress,\n        this.node,\n      )\n    },\n    senOwner: ['GJLqpmDxxrV9xruee2vFvEoTho7VVQHRtuHH8nfoAE54'],\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: 'https://api.testnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    farmingAddress: 'CpEsjrLhBkcuApn5uEE2tZCwxyCQKmT6S4YgT9zuLW2J',\n    get farming() {\n      return new Farming(\n        this.farmingAddress,\n        this.spltAddress,\n        this.splataAddress,\n        this.node,\n      )\n    },\n    senOwner: ['GJLqpmDxxrV9xruee2vFvEoTho7VVQHRtuHH8nfoAE54'],\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: 'https://api.mainnet-beta.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    farmingAddress: 'DTvdh6Q13SfYxMoWyibBUmQAUqd2pDPSpjdku5a9NLSF',\n    get farming() {\n      return new Farming(\n        this.farmingAddress,\n        this.spltAddress,\n        this.splataAddress,\n        this.node,\n      )\n    },\n    senOwner: ['Cs6jYywHTAgdvjxn8xG4VkJJH8DXXy7zbtatzMUWoCMG'],\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Open newtab\n * @param href - string\n * @returns\n */\nexport const openNewTab = (href: string) => {\n  return window.open(href, '_blank')\n}\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useMint } from 'senhub/providers'\nimport { fetchCGK } from 'shared/util'\n\nconst DEFAULT_DATA = {\n  address: '',\n  icon: '',\n  name: 'TOKEN',\n  price: 0,\n  priceChange: 0,\n  rank: 0,\n  symbol: 'TOKEN',\n  totalVolume: 0,\n}\n\nconst useMintCgk = (mintAddress: string): CgkData => {\n  const [cgkData, setCgkData] = useState<CgkData>(DEFAULT_DATA)\n  const { tokenProvider } = useMint()\n\n  const fetchCgkData = useCallback(async () => {\n    try {\n      const token = await tokenProvider.findByAddress(mintAddress)\n      const ticket = token?.extensions?.coingeckoId\n      const cgkData = await fetchCGK(ticket)\n      return setCgkData(cgkData)\n    } catch (error) {\n      return setCgkData(DEFAULT_DATA)\n    }\n  }, [mintAddress, tokenProvider])\n\n  useEffect(() => {\n    fetchCgkData()\n  }, [fetchCgkData])\n\n  return cgkData\n}\nexport default useMintCgk\n","import { useCallback, useEffect, useState } from 'react'\nimport { TokenInfo } from '@solana/spl-token-registry'\n\nimport { useMint, usePool } from 'senhub/providers'\n\nconst useTokenProvider = (mintAddress: string) => {\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n  const [tokenInfo, setTokenInfo] = useState<(TokenInfo | undefined)[]>([])\n\n  const fetchTokenInfo = useCallback(async () => {\n    // Normal mint\n    const token = await tokenProvider.findByAddress(mintAddress)\n    if (token) return setTokenInfo([token])\n    // LP mint\n    const poolData = Object.values(pools).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (!poolData) return setTokenInfo([undefined])\n    const { mint_a, mint_b } = poolData\n    const tokenA = await tokenProvider.findByAddress(mint_a)\n    const tokenB = await tokenProvider.findByAddress(mint_b)\n    return setTokenInfo([tokenA, tokenB])\n  }, [mintAddress, pools, tokenProvider])\n\n  useEffect(() => {\n    fetchTokenInfo()\n  }, [fetchTokenInfo])\n\n  return tokenInfo\n}\n\nexport default useTokenProvider\n","import { ReactNode, useMemo } from 'react'\nimport { TokenInfo } from '@solana/spl-token-registry'\n\nimport { Avatar } from 'antd'\n\nimport useTokenProvider from '../../hooks/useTokenProvider'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  isReserve = false,\n}: {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  isReserve?: boolean\n}) => {\n  const tokens = useTokenProvider(mintAddress)\n  const convertToken = useMemo(() => {\n    const cloneToken: TokenInfo[] = JSON.parse(JSON.stringify(tokens))\n    if (!isReserve) return cloneToken\n    return cloneToken.reverse()\n  }, [isReserve, tokens])\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }}>\n      {convertToken.map((token, i) => (\n        <Avatar\n          key={token?.address || i}\n          src={token?.logoURI}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useMemo } from 'react'\n\nimport useTokenProvider from 'app/shared/hooks/useTokenProvider'\n\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  isReverse = false,\n}: {\n  mintAddress: string\n  separator?: string\n  isReverse?: boolean\n}) => {\n  const tokens = useTokenProvider(mintAddress)\n\n  const symbols = useMemo(() => {\n    const symbols = tokens.map((token) => {\n      const shortenAddr = `${mintAddress?.substr(0, 3)}...`\n      if (!token) return shortenAddr\n      return token.symbol\n    })\n    if (isReverse) symbols.reverse()\n\n    return symbols.join(separator)\n  }, [isReverse, mintAddress, separator, tokens])\n  return <span>{symbols}</span>\n}\n\nexport default MintSymbol\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Card, Col, Divider, Row, Space, Typography } from 'antd'\nimport { useUI } from 'senhub/providers'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport useMintCgk from 'app/shared/hooks/useMintCgk'\nimport { numeric } from 'shared/util'\nimport { MintSymbol } from 'app/shared/components/mint'\nimport { AppState } from 'app/model'\n\nconst {\n  sol: { senAddress },\n} = configs\n\nconst Banner = () => {\n  const {\n    ui: { width },\n  } = useUI()\n  const farms = useSelector((state: AppState) => state.farms)\n  const senCgk = useMintCgk(senAddress)\n\n  const desktop = width > 768\n  const xsSpan = !desktop ? 24 : undefined\n  const rowSpacing = desktop ? 32 : 16\n  const spaceSize = desktop ? 8 : 4\n  const spaceDirection = desktop ? 'vertical' : 'horizontal'\n  const iconName = desktop ? 'pause-outline' : 'reorder-two-outline'\n\n  const positiveFarms = useMemo(() => {\n    let count = 0\n    for (const addr in farms) {\n      if (farms[addr].total_shares) count++\n    }\n    return count\n  }, [farms])\n\n  return (\n    <Card\n      bordered={false}\n      className={`${desktop ? '' : 'banner-farming-mobile '}banner-farming`}\n    >\n      <Row gutter={[12, rowSpacing]}>\n        <Col span={24}>\n          <Typography.Title level={4} style={{ color: '#212433' }}>\n            Sen Farming\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[12, 12]}>\n            {/* coming soon */}\n            {/* <Col span={xsSpan}>\n              <Space direction=\"vertical\" size={spaceSize}>\n                <Typography.Text style={{ color: '#212433' }}>\n                  Total TVL all Farms\n                </Typography.Text>\n                <Typography.Title level={2} style={{ color: '#F9575E' }}>\n                  $2,096,977,588\n                </Typography.Title>\n              </Space>\n            </Col>\n            {desktop && (\n              <Col>\n                <Divider type=\"vertical\" style={{ height: '100%' }} />\n              </Col>\n            )} */}\n            <Col span={xsSpan}>\n              <Space direction=\"vertical\" size={spaceSize}>\n                <Typography.Text style={{ color: '#212433' }}>\n                  Positive Farms\n                </Typography.Text>\n                <Typography.Title level={2} style={{ color: '#F9575E' }}>\n                  {positiveFarms}\n                </Typography.Title>\n              </Space>\n            </Col>\n            {desktop && (\n              <Col>\n                <Divider type=\"vertical\" style={{ height: '100%' }} />\n              </Col>\n            )}\n            <Col span={xsSpan}>\n              <Space direction={spaceDirection} size={0} align=\"center\">\n                <Typography.Title level={4} style={{ color: '#212433' }}>\n                  1 <MintSymbol mintAddress={senAddress} />\n                </Typography.Title>\n                <IonIcon style={{ color: '#212433' }} name={iconName} />\n                <Typography.Title level={4} style={{ color: '#F9575E' }}>\n                  ${numeric(senCgk.price).format('0,0.[00]')}\n                </Typography.Title>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Banner\n","import { ReactNode, useState } from 'react'\n\nimport { Col, Row, Space, Typography, Checkbox, Button } from 'antd'\n\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox'\n\nimport { NewFarmStep } from 'app/constants/farms'\n\nconst Step = ({\n  title = '',\n  description,\n  checked = false,\n  onChange = () => {},\n}: {\n  title?: string\n  description?: ReactNode\n  checked?: boolean\n  onChange?: (checked: CheckboxChangeEvent) => void\n}) => {\n  return (\n    <Space direction=\"vertical\">\n      <Checkbox checked={checked} onChange={onChange}>\n        <Typography.Title level={5}>{title}</Typography.Title>\n      </Checkbox>\n      <Typography.Text>{description}</Typography.Text>\n    </Space>\n  )\n}\n\nconst Description = () => {\n  return (\n    <Space direction=\"vertical\" size={6}>\n      <Typography.Text>\n        The Sentre team will try to respond within a week:\n      </Typography.Text>\n      <Space direction=\"vertical\" size={6} className=\"list-type-items\">\n        <Typography.Text>\n          Community Farm qualifiers will be asked to provide the address of the\n          wallet which you’ll use for bidding SEN in the auction.\n        </Typography.Text>\n        <Typography.Text>\n          Core Farm/Pool qualifiers will receive directions separately.\n        </Typography.Text>\n      </Space>\n    </Space>\n  )\n}\n\nconst StepAddFarm = ({\n  setFarmCreatingStep = () => {},\n}: {\n  setFarmCreatingStep?: (farmStep: NewFarmStep) => void\n}) => {\n  const [stepOne, setStepOne] = useState(false)\n  const [stepTwo, setStepTwo] = useState(false)\n  const [stepThree, setStepThree] = useState(false)\n\n  const disabled = !stepOne || !stepTwo || !stepThree\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>New farm</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]} justify=\"center\">\n          <Col span={24}>\n            <Step\n              title=\"Step1: Submit application\"\n              description={\n                <Typography.Text>\n                  Project can submit an application to sponsor a yield farm and\n                  pool on Sentre via Application Form\n                </Typography.Text>\n              }\n              checked={stepOne}\n              onChange={(e) => setStepOne(e.target.checked)}\n            />\n          </Col>\n          <Col span={24}>\n            <Step\n              title=\"Step2: Await whitelisting\"\n              description={<Description />}\n              checked={stepTwo}\n              onChange={(e) => setStepTwo(e.target.checked)}\n            />\n          </Col>\n          <Col span={24}>\n            <Step\n              title=\"Step3: During the auction\"\n              description=\"During the auction period, if you connect your project’s whitelisted wallet to the Auction page, you’ll see a “Place Bid” button during when is live.\n            You can then commit SEN to bid during the auction, completing against other project for one of the available farms.\"\n              checked={stepThree}\n              onChange={(e) => setStepThree(e.target.checked)}\n            />\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              onClick={() => setFarmCreatingStep('FARM_CREATING_CONFIRMATION')}\n              disabled={disabled}\n            >\n              Next\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default StepAddFarm\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      onBlur = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n    // Handle cursor\n    innerRef?.current?.setSelectionRange(cursor, cursor)\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onBlur={(e) => {\n            onBlur(e)\n            const value = Number(e.target.value)\n            if (e.target.value) onAmount(value ? value.toString() : '')\n          }}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { explorer } from 'shared/util'\n\nexport const notifySuccess = (content: string, txId: string) => {\n  return window.notify({\n    type: 'success',\n    description: `${content} successfully. Click to view details.`,\n    onClick: () => window.open(explorer(txId), '_blank'),\n  })\n}\n\nexport const notifyError = (er: any) => {\n  return window.notify({\n    type: 'error',\n    description: er.message,\n  })\n}\n","import { useState } from 'react'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { account, utils } from '@senswap/sen-js'\nimport { useWallet } from 'senhub/providers'\nimport { FARM_DECIMAL } from 'app/constants/farms'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\n\nconst ConfirmAddFarm = ({\n  mintAddress,\n  onClose = () => {},\n  setVisibleInputTokenModal = () => {},\n}: {\n  mintAddress: string\n  onClose?: () => void\n  setVisibleInputTokenModal?: (visibled: boolean) => void\n}) => {\n  const {\n    sol: { senAddress, farming },\n  } = configs\n\n  const [value, setValue] = useState('')\n  const [duration, setDuration] = useState('')\n  const [loading, setLoading] = useState(false)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const newFarm = async () => {\n    if (!account.isAddress(mintAddress))\n      return notifyError({\n        message: `Invalid mint address: ${mintAddress}`,\n      })\n    setLoading(true)\n    const { wallet } = window.sentre\n    if (!wallet) return\n    const reward = utils.decimalize(value, FARM_DECIMAL)\n    const period = BigInt(Number(duration) * 86400)\n\n    try {\n      const { txId } = await farming.initializeFarm(\n        reward,\n        period,\n        walletAddress,\n        mintAddress,\n        senAddress,\n        wallet,\n      )\n      onClose()\n      return notifySuccess('Create a new farm', txId)\n    } catch (er: any) {\n      return notifyError({ message: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }\n\n  const disabled = !value || !duration || !account.isAddress(mintAddress)\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>New farm</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Card bodyStyle={{ padding: 16 }} bordered={false}>\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Typography.Title type=\"secondary\" level={5}>\n                Input token type\n              </Typography.Title>\n              <Space onClick={() => setVisibleInputTokenModal(true)}>\n                <MintAvatar mintAddress={mintAddress} />\n                <MintSymbol mintAddress={mintAddress} />\n              </Space>\n            </Col>\n            <Col span={12}>\n              <Typography.Title type=\"secondary\" level={5}>\n                Output token type\n              </Typography.Title>\n              <Space>\n                <MintAvatar mintAddress={senAddress} />\n                <MintSymbol mintAddress={senAddress} />\n              </Space>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[0, 0]}>\n          <Col span={24}>\n            <Typography.Text\n              type=\"secondary\"\n              style={{ marginLeft: 12, fontSize: 12 }}\n            >\n              Reward\n            </Typography.Text>\n          </Col>\n          <Col span={24}>\n            <NumericInput\n              size=\"large\"\n              placeholder=\"0\"\n              value={value}\n              onValue={setValue}\n              prefix={<Typography.Text>SNTR</Typography.Text>}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[0, 0]}>\n          <Col span={24}>\n            <Typography.Text style={{ marginLeft: 12, fontSize: 12 }}>\n              Number of days\n            </Typography.Text>\n          </Col>\n          <Col span={24}>\n            <NumericInput\n              size=\"large\"\n              placeholder=\"0\"\n              value={duration}\n              onValue={setDuration}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          onClick={newFarm}\n          disabled={disabled}\n          block\n          loading={loading}\n        >\n          Confirm\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConfirmAddFarm\n","export const FARM_DECIMAL = 9\nexport type NewFarmStep = 'POLICY_AGREEMENT' | 'FARM_CREATING_CONFIRMATION'\n","import { useMemo } from 'react'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar } from 'app/shared/components/mint'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { useAccount } from 'senhub/providers'\nimport { explorer, openNewTab } from 'shared/util'\n\nconst AccountCard = ({\n  accountAddress,\n  onClick = () => {},\n}: {\n  accountAddress: string\n  onClick: (mintAddress: string) => void\n}) => {\n  const {\n    accounts: {\n      [accountAddress]: { mint: mintAddress },\n    },\n  } = useAccount()\n\n  const shortenAddress = useMemo(() => {\n    const size = 4\n    const prefix = accountAddress.substring(0, size)\n    const suffix = accountAddress.substring(\n      accountAddress.length - size,\n      accountAddress.length,\n    )\n    return prefix + ' ... ' + suffix\n  }, [accountAddress])\n\n  return (\n    <Card\n      onClick={() => onClick(mintAddress)}\n      className=\"account-card\"\n      bodyStyle={{ padding: 12 }}\n      bordered={false}\n    >\n      <Row gutter={[8, 8]} wrap={false} align=\"middle\">\n        <Col flex=\"auto\">\n          <Space direction=\"vertical\" size={0}>\n            <MintAvatar mintAddress={mintAddress} />\n            <Space>\n              <Space size={4}>\n                <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                  Account Address:\n                </Typography.Text>\n                <Typography.Text>{shortenAddress}</Typography.Text>\n              </Space>\n              <Button\n                type=\"text\"\n                size=\"small\"\n                onClick={(e: React.MouseEvent) => {\n                  e.stopPropagation()\n                  openNewTab(explorer(accountAddress))\n                }}\n                icon={<IonIcon name=\"open-outline\" />}\n              />\n            </Space>\n          </Space>\n        </Col>\n        <Col>\n          <Button type=\"text\" icon={<IonIcon name=\"arrow-forward-outline\" />} />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default AccountCard\n","import { useEffect, useState } from 'react'\n\nimport { Button, Card, Input } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst SearchAccount = ({\n  onChange,\n}: {\n  onChange: (mintAddresses: string[] | undefined) => void\n}) => {\n  const [keyword, setKeyword] = useState('')\n\n  useEffect(() => {\n    if (!keyword) return\n    const search = [keyword]\n    return onChange(search)\n  }, [keyword, onChange])\n\n  return (\n    <Card className=\"account-card\" bodyStyle={{ padding: 6 }} bordered={false}>\n      <Input\n        placeholder=\"Search\"\n        value={keyword}\n        size=\"small\"\n        bordered={false}\n        prefix={\n          <Button\n            type=\"text\"\n            style={{ marginLeft: -7 }}\n            size=\"small\"\n            onClick={keyword ? () => setKeyword('') : () => {}}\n            icon={\n              <IonIcon name={keyword ? 'close-outline' : 'search-outline'} />\n            }\n          />\n        }\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setKeyword(e.target.value)\n        }\n      />\n    </Card>\n  )\n}\n\nexport default SearchAccount\n","import { Col, Row, Typography } from 'antd'\nimport LazyLoad from '@senswap/react-lazyload'\nimport AccountCard from './accountCard'\nimport SearchAccount from './searchAccount'\n\nimport { useMintSelection } from 'app/hooks/useMintSelection'\n\nconst MintSelection = ({\n  onChange,\n  onHideInputTokenModal = () => {},\n}: {\n  onChange: (value: string) => void\n  onHideInputTokenModal?: (visible: boolean) => void\n}) => {\n  const { searchedResult, accountAddresses, onSearch } = useMintSelection()\n\n  const onClick = (mintAddress: string) => {\n    onHideInputTokenModal(false)\n    return onChange(mintAddress)\n  }\n\n  return (\n    <Row gutter={[16, 16]} style={{ height: 400, overflow: 'auto' }}>\n      <Col span={24}>\n        <Typography.Title level={4}>Select token type</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <SearchAccount onChange={onSearch} />\n      </Col>\n      {(searchedResult || accountAddresses).map((accountAddress, i) => (\n        <Col span={24} key={accountAddress + i}>\n          <LazyLoad height={72} overflow>\n            <AccountCard accountAddress={accountAddress} onClick={onClick} />\n          </LazyLoad>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default MintSelection\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { useAccount } from 'senhub/providers'\n\nexport const useMintSelection = () => {\n  const [searchedResult, setSearchedResult] = useState<string[]>()\n  const { accounts } = useAccount()\n\n  const accountAddresses = useMemo(() => Object.keys(accounts), [accounts])\n  const onSearch = useCallback(\n    (mintAddresses: string[] | undefined) => {\n      if (!mintAddresses) return setSearchedResult(undefined)\n      let searchedAccountAddresses = accountAddresses.filter(\n        (accountAddress) => {\n          const { mint } = accounts[accountAddress]\n          return mintAddresses.includes(mint)\n        },\n      )\n      return setSearchedResult(searchedAccountAddresses)\n    },\n    [accountAddresses, accounts],\n  )\n\n  return {\n    searchedResult,\n    accountAddresses,\n    onSearch,\n  }\n}\n","import { useState } from 'react'\n\nimport { Button, Col, Modal, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StepAddFarm from './stepAddFarm'\nimport ConfirmAddFarm from './confirmAddFarm'\nimport MintSelection from './mintSelection'\n\nimport { NewFarmStep } from 'app/constants/farms'\nimport { SizeType } from 'antd/lib/config-provider/SizeContext'\n\nconst NewFarm = ({ size = 'small' }: { size?: SizeType }) => {\n  const [visible, setVisible] = useState(false)\n  const [stepNewFarm, setStepNewFarm] =\n    useState<NewFarmStep>('POLICY_AGREEMENT')\n  const [mintAddress, setMintAddress] = useState('')\n  const [visibleInputTokenModal, setVisibleInputTokenModal] = useState(false)\n\n  const onClose = () => {\n    setVisible(false)\n    setStepNewFarm('POLICY_AGREEMENT')\n    setMintAddress('')\n  }\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Button onClick={() => setVisible(true)} size={size}>\n          New farm\n        </Button>\n      </Col>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={false}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        {stepNewFarm === 'POLICY_AGREEMENT' && (\n          <StepAddFarm setFarmCreatingStep={setStepNewFarm} />\n        )}\n        {stepNewFarm === 'FARM_CREATING_CONFIRMATION' && (\n          <ConfirmAddFarm\n            mintAddress={mintAddress}\n            onClose={onClose}\n            setVisibleInputTokenModal={setVisibleInputTokenModal}\n          />\n        )}\n      </Modal>\n      <Modal\n        visible={visibleInputTokenModal}\n        onCancel={() => setVisibleInputTokenModal(false)}\n        footer={false}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        <MintSelection\n          onChange={(value: string) => {\n            setMintAddress(value)\n          }}\n          onHideInputTokenModal={setVisibleInputTokenModal}\n        />\n      </Modal>\n    </Row>\n  )\n}\n\nexport default NewFarm\n","import { Button, Space, Tooltip, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst Content = ({\n  label = '',\n  tooltip,\n  value = '',\n  mintAddress,\n}: {\n  label?: string\n  tooltip?: string\n  value?: string\n  mintAddress?: string\n}) => {\n  return (\n    <Space direction=\"vertical\" size={4}>\n      <Space size={4}>\n        <Space size={4}>\n          {mintAddress && <MintAvatar mintAddress={mintAddress} />}\n          <Typography.Text type=\"secondary\">{label}</Typography.Text>\n        </Space>\n        {tooltip && (\n          <Tooltip title={tooltip}>\n            <Button\n              type=\"text\"\n              shape=\"circle\"\n              size=\"small\"\n              icon={<IonIcon name=\"alert-circle-outline\" />}\n            />\n          </Tooltip>\n        )}\n      </Space>\n      <Space>\n        <Typography.Title level={5}>{value}</Typography.Title>\n        {mintAddress && <MintSymbol mintAddress={mintAddress} />}\n      </Space>\n    </Space>\n  )\n}\n\nexport default Content\n","import { useSelector } from 'react-redux'\nimport { useCallback, useEffect, useState } from 'react'\nimport { account, DebtData } from '@senswap/sen-js'\n\nimport { useWallet } from 'senhub/providers'\n\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\n\nconst {\n  sol: { farming },\n} = configs\n\nexport const useDebt = (\n  farmAddress: string,\n): { address: string; data: DebtData } => {\n  const { wallet } = useWallet()\n  const [debtAddress, setDebtAddress] = useState('')\n  const debtData: DebtData = useSelector(\n    (state: AppState) => state.debts[debtAddress],\n  )\n\n  const fetchDebtAddress = useCallback(async () => {\n    if (!account.isAddress(farmAddress)) return\n    const debtAddr = await farming.deriveDebtAddress(\n      wallet.address,\n      farmAddress,\n    )\n    setDebtAddress(debtAddr)\n  }, [farmAddress, wallet.address])\n\n  useEffect(() => {\n    fetchDebtAddress()\n  }, [fetchDebtAddress])\n\n  return { address: debtAddress, data: debtData }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport isEqual from 'react-fast-compare'\nimport { AccountData } from '@senswap/sen-js'\n\nimport { useAccount, useWallet } from 'senhub/providers'\n\nimport { AppState } from 'app/model'\n\nexport const useAccountStake = (\n  farmAddress: string,\n): { address: string; data: AccountData } | undefined => {\n  const { accounts } = useAccount()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const [accountStake, setAccountStake] =\n    useState<{ address: string; data: AccountData }>()\n\n  const findAccountStake = useCallback(async () => {\n    const mintStake = farmData?.mint_stake\n    if (!mintStake) return setAccountStake(undefined)\n    const { splt } = window.sentre\n    let accountAddr = await splt.deriveAssociatedAddress(\n      walletAddress,\n      farmData.mint_stake,\n    )\n    const newAccountData = accounts[accountAddr]\n    if (isEqual(newAccountData, accountStake?.data)) return\n    return setAccountStake({ address: accountAddr, data: newAccountData })\n  }, [accountStake?.data, accounts, farmData.mint_stake, walletAddress])\n\n  useEffect(() => {\n    findAccountStake()\n  }, [findAccountStake])\n\n  return accountStake\n}\n","import { FarmData, utils, DebtData } from '@senswap/sen-js'\n\nconst calculateReward = (debt: DebtData, farm: FarmData): number => {\n  if (debt === null || Object.keys(debt).length === 0) return 0\n  if (farm === null || Object.keys(farm).length === 0) return 0\n  if (!farm.total_shares) return 0\n\n  const shares = debt.shares\n  const compensation = farm.compensation\n  const delay =\n    (global.BigInt(Math.floor(Date.now() / 1000)) - farm.genesis_timestamp) /\n    farm.period\n  const precision = global.BigInt(10 ** 18)\n  const rewardsPerShare = (precision * farm.reward) / farm.total_shares\n  const newDebt =\n    ((rewardsPerShare * delay + compensation) * shares) / precision\n  const yieldFarm = utils.undecimalize(newDebt - debt.debt, 9)\n  return Number(yieldFarm)\n}\n\nexport default calculateReward\n","export const FARMING_ERRORS = {\n  HARVEST_NOT_ENOUGH_BALANCE:\n    \"The treasury doesn't have enough balance for the claim.\",\n  WALLET_ADDRESS_INVALID: 'Invalid wallet address.',\n  INVALID_FARM_ADDRESS: 'Invalid farm address.',\n  DEBT_ADDRESS_INVALID: 'Invalid debt address.',\n  GET_DEBT_DATA: 'Cannot fetch data of debts',\n}\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, FarmData } from '@senswap/sen-js'\n\nimport config from '../configs'\n\nconst {\n  sol: { farming, senAddress },\n} = config\n\nexport type State = Record<string, FarmData>\n\nconst NAME = 'farms'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getFarms = createAsyncThunk<State, void, { state: any }>(\n  `${NAME}/getFarms`,\n  async (_, { getState }) => {\n    const { farms } = getState()\n    if (Object.keys(farms).length) return farms\n    // Get all farm\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await farming.connection.getProgramAccounts(farming.farmingProgramId, {\n        filters: [\n          { dataSize: 209 },\n          { memcmp: { bytes: senAddress, offset: 97 } },\n        ],\n      })\n    let bulk: State = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = farming.parseFarmData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getFarm = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getFarm`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid farm address')\n  const {\n    farms: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const raw = await farming.getFarmData(address)\n  return { [address]: raw }\n})\n\nexport const upsetFarm = createAsyncThunk<\n  State,\n  { address: string; data: FarmData },\n  { state: any }\n>(`${NAME}/upsetFarm`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid farm address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getFarms.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getFarm.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetFarm.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { PublicKey, AccountInfo } from '@solana/web3.js'\nimport { account, DebtData } from '@senswap/sen-js'\n\nimport config from 'app/configs'\n\nconst {\n  sol: { farming },\n} = config\n\n/**\n * Store constructor\n */\n\nexport type State = Record<string, DebtData>\n\nconst NAME = 'debts'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getDebts = createAsyncThunk(\n  `${NAME}/getDebts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await farming.connection.getProgramAccounts(farming.farmingProgramId, {\n        filters: [{ dataSize: 89 }, { memcmp: { bytes: owner, offset: 32 } }],\n      })\n    let bulk: State = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = farming.parseDebtData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getDebt = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getDebt`, async ({ address }, { getState }) => {\n  const {\n    debts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const debtData = await farming.getDebtData(address)\n  return { [address]: debtData }\n})\n\nexport const upsetDebt = createAsyncThunk<\n  State,\n  { address: string; data: DebtData },\n  { state: any }\n>(`${NAME}/upsetDebt`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteDebt = createAsyncThunk(\n  `${NAME}/deleteDebt`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getDebts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getDebt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetDebt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteDebt.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Store constructor\n */\n\nexport type State = {\n  search: string\n}\n\nconst NAME = 'main'\nconst initialState: State = {\n  search: '',\n}\n\n/**\n * Actions\n */\n\nexport const setSearch = createAsyncThunk<\n  State,\n  { search: string },\n  { state: any }\n>(`${NAME}/setSearch`, async ({ search }, { getState }) => {\n  return { search }\n})\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setSearch.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport farms from 'app/model/farms.controller'\nimport debts from 'app/model/debts.controller'\nimport main from 'app/model/main.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('myapp'),\n  reducer: {\n    farms,\n    debts,\n    main,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { account, utils } from '@senswap/sen-js'\n\nimport calculateReward from './calculateReward'\n\nimport { FARMING_ERRORS } from 'app/constants/errors'\nimport store from 'app/model/index'\nimport configs from 'app/configs'\n\nconst {\n  sol: { farming },\n} = configs\nexport class HarvestValidator {\n  private async checkSeedBalance(farmAddress: string) {\n    const { splt, wallet } = window.sentre\n    if (!wallet) throw new Error('Please connect wallet first!')\n\n    const farmData = store.getState().farms[farmAddress]\n\n    const walletAddress = await wallet.getAddress()\n    if (!account.isAddress(walletAddress))\n      throw new Error(FARMING_ERRORS.WALLET_ADDRESS_INVALID)\n\n    const debtAddress = await farming.deriveDebtAddress(\n      walletAddress,\n      farmAddress,\n    )\n    if (!account.isAddress(debtAddress))\n      throw new Error(FARMING_ERRORS.DEBT_ADDRESS_INVALID)\n\n    const debtData = store.getState().debts[debtAddress]\n    if (!debtData) throw new Error(FARMING_ERRORS.GET_DEBT_DATA)\n\n    const reward = calculateReward(debtData, farmData)\n    const { treasury_reward, treasury_stake, total_shares } = farmData\n    let { amount: rewardBalance } = await splt.getAccountData(treasury_reward)\n\n    if (treasury_reward === treasury_stake)\n      rewardBalance = rewardBalance - total_shares\n    const numRewardBalance = Number(utils.undecimalize(rewardBalance, 9))\n\n    if (numRewardBalance < reward)\n      throw new Error(FARMING_ERRORS.HARVEST_NOT_ENOUGH_BALANCE)\n  }\n\n  async validate(farmAddress: string) {\n    if (!account.isAddress(farmAddress))\n      throw new Error(FARMING_ERRORS.INVALID_FARM_ADDRESS)\n    return await this.checkSeedBalance(farmAddress)\n  }\n}\n","import { useCallback, useState } from 'react'\nimport { utils } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useWallet } from 'senhub/providers'\nimport { numeric } from 'shared/util'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { useAccountStake } from 'app/hooks/useAccountStake'\nimport configs from 'app/configs'\nimport { LPT_DECIMALS } from 'app/configs/farmstat.config'\nimport { HarvestValidator } from 'helpers/validateHarvest'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst Unstake = ({\n  farmAddress,\n  onClose,\n}: {\n  farmAddress: string\n  onClose: (visible: boolean) => void\n}) => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const { data: debtData } = useDebt(farmAddress)\n  const accountStake = useAccountStake(farmAddress)\n  const [amount, setAmount] = useState()\n  const [disable, setDisable] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleUnstake = async () => {\n    setIsLoading(true)\n    try {\n      const { splt, wallet } = window.sentre\n      if (!wallet) throw Error('Please connect wallet first')\n      if (!amount || !accountStake) return\n      const ammount = utils.decimalize(amount, LPT_DECIMALS)\n      const senWallet = await splt.deriveAssociatedAddress(\n        walletAddress,\n        senAddress,\n      )\n\n      // Validate farming seed balance\n      const harvestValidator = new HarvestValidator()\n      await harvestValidator.validate(farmAddress)\n      const { txId } = await farming.unstake(\n        ammount,\n        accountStake.address,\n        senWallet,\n        farmAddress,\n        wallet,\n      )\n      onClose(false)\n      return notifySuccess('Unstaked', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onAmount = useCallback(async (val) => {\n    await setAmount(val)\n    if (!val) return await setDisable(true)\n    return await setDisable(false)\n  }, [])\n\n  const stakedValue = utils.undecimalize(debtData?.shares, LPT_DECIMALS)\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"start\">\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\">\n            The pending reward will be automatically harvested when you unstake.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Card bodyStyle={{ padding: 12 }} style={{ boxShadow: 'none' }}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <Row>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">Amount</Typography.Text>\n              </Col>\n              <Col>\n                <Space size={6}>\n                  <Typography.Text type=\"secondary\">Available:</Typography.Text>\n                  <Typography.Text>\n                    {numeric(stakedValue).format('0,0.[00]')}\n                  </Typography.Text>\n                  <Typography.Text type=\"secondary\">LPT</Typography.Text>\n                </Space>\n              </Col>\n            </Row>\n            <NumericInput\n              placeholder={'0'}\n              value={amount}\n              onValue={onAmount}\n              bordered={false}\n              size=\"large\"\n              style={{ padding: 0 }}\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  onClick={() => onAmount(stakedValue)}\n                >\n                  MAX\n                </Button>\n              }\n              max={stakedValue}\n            />\n          </Space>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"remove-outline\" />}\n          onClick={handleUnstake}\n          block\n          disabled={disable}\n          loading={isLoading}\n        >\n          Unstake\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Unstake\n","export const LPT_DECIMALS = 9\n","import { useCallback, useState } from 'react'\nimport { utils } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useAccount, useWallet } from 'senhub/providers'\nimport { numeric } from 'shared/util'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { useAccountStake } from 'app/hooks/useAccountStake'\nimport configs from 'app/configs'\nimport { LPT_DECIMALS } from 'app/configs/farmstat.config'\nimport { HarvestValidator } from 'helpers/validateHarvest'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst Stake = ({\n  farmAddress,\n  onClose,\n}: {\n  farmAddress: string\n  onClose: (visible: boolean) => void\n}) => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const { accounts } = useAccount()\n  const { data: debtData } = useDebt(farmAddress)\n  const accountStake = useAccountStake(farmAddress)\n  const [amount, setAmount] = useState()\n  const [disable, setDisable] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleStake = async () => {\n    setIsLoading(true)\n    try {\n      const { splt, wallet } = window.sentre\n      if (!wallet) throw Error('Please connect wallet first')\n      if (!amount || !accountStake) return\n\n      const senWalletAddr = await splt.deriveAssociatedAddress(\n        walletAddress,\n        senAddress,\n      )\n      if (debtData?.shares === undefined)\n        await farming.initializeAccounts(farmAddress, walletAddress, wallet)\n      if (!accounts[senWalletAddr])\n        await splt.initializeAccount(senAddress, walletAddress, wallet)\n\n      // Validate farming seed balance\n      const harvestValidator = new HarvestValidator()\n      await harvestValidator.validate(farmAddress)\n\n      const { txId } = await farming.stake(\n        utils.decimalize(amount, LPT_DECIMALS),\n        accountStake.address,\n        senWalletAddr,\n        farmAddress,\n        wallet,\n      )\n      onClose(false)\n      return notifySuccess('Staked', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onAmount = useCallback(async (val) => {\n    await setAmount(val)\n    if (!val) return await setDisable(true)\n    return await setDisable(false)\n  }, [])\n\n  const available = utils.undecimalize(\n    BigInt(accountStake?.data.amount || 0),\n    LPT_DECIMALS,\n  )\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"start\">\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\">\n            The pending reward will be automatically harvested when you stake\n            more.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Card bodyStyle={{ padding: 12 }} style={{ boxShadow: 'none' }}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <Row>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">Amount</Typography.Text>\n              </Col>\n              <Col>\n                <Space size={6}>\n                  <Typography.Text type=\"secondary\">Available:</Typography.Text>\n                  <Typography.Text>\n                    {numeric(available).format('0,0.[00]')}\n                  </Typography.Text>\n                  <Typography.Text type=\"secondary\">LPT</Typography.Text>\n                </Space>\n              </Col>\n            </Row>\n            <NumericInput\n              placeholder={'0'}\n              value={amount}\n              onValue={onAmount}\n              bordered={false}\n              size=\"large\"\n              style={{ padding: 0 }}\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -15 }}\n                  onClick={() => onAmount(available)}\n                >\n                  MAX\n                </Button>\n              }\n              max={available}\n            />\n          </Space>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"add-outline\" />}\n          onClick={handleStake}\n          block\n          disabled={disable}\n          loading={isLoading}\n        >\n          Stake\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Stake\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useMint } from 'senhub/providers'\n\nconst useMintDecimals = (mintAddress: string): number => {\n  const [decimals, setDecimals] = useState(0)\n  const { tokenProvider, getMint } = useMint()\n\n  const fetchTokenDecimals = useCallback(async () => {\n    if (!mintAddress) return setDecimals(0)\n    // Find in token provider\n    const token = await tokenProvider.findByAddress(mintAddress)\n    if (token) return setDecimals(token.decimals)\n    // Find on blockchain (slow than token provider)\n    try {\n      const mint = await getMint({ address: mintAddress })\n      return setDecimals(mint[mintAddress].decimals)\n    } catch (error) {}\n    return setDecimals(0)\n  }, [getMint, mintAddress, tokenProvider])\n\n  useEffect(() => {\n    fetchTokenDecimals()\n  }, [fetchTokenDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { numeric } from 'shared/util'\nimport { useAccount, useWallet } from 'senhub/providers'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport useMintDecimals from 'app/shared/hooks/useMintDecimals'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst Seed = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const { accounts } = useAccount()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const farms = useSelector((state: AppState) => state.farms)\n  const [value, setValue] = useState('')\n  const [balance, setBalance] = useState('0')\n  const [loading, setLoading] = useState(false)\n\n  const { mint_reward } = farms?.[farmAddress] || {}\n  const decimal = useMintDecimals(mint_reward)\n\n  useEffect(() => {\n    ;(async () => {\n      if (decimal === 0) return\n      try {\n        const { splt } = window.sentre\n        const srcAddress = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mint_reward,\n        )\n        const { amount } = accounts[srcAddress] || {}\n        if (!amount) return setBalance('0')\n        return setBalance(utils.undecimalize(amount, decimal))\n      } catch (er) {\n        setBalance('0')\n      }\n    })()\n  }, [walletAddress, accounts, mint_reward, decimal])\n\n  const seed = async () => {\n    setLoading(true)\n    const { wallet, splt } = window.sentre\n    if (!wallet) return\n    const srcAddress = await splt.deriveAssociatedAddress(\n      walletAddress,\n      senAddress,\n    )\n    const amount = utils.decimalize(value, 9)\n    try {\n      const { txId } = await farming.seed(\n        amount,\n        farmAddress,\n        srcAddress,\n        wallet,\n      )\n      onChange(txId)\n      return notifySuccess('Seed', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 8 }}\n        >\n          <Row gutter={[0, 0]}>\n            <Col span={24}>\n              <Row\n                gutter={[0, 0]}\n                wrap={false}\n                style={{ margin: `6px 12px 0px 12px`, fontSize: 12 }}\n              >\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">Amount</Typography.Text>\n                </Col>\n                <Col>\n                  <Space size={6}>\n                    <Typography.Text type=\"secondary\">\n                      Available:\n                    </Typography.Text>\n                    <Typography.Text>\n                      {numeric(balance).format('0,0.[00]')}\n                    </Typography.Text>\n                    <Typography.Text type=\"secondary\">SNTR</Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <NumericInput\n                placeholder=\"0\"\n                value={value}\n                onValue={setValue}\n                suffix={\n                  <Button\n                    type=\"text\"\n                    onClick={() => setValue(balance)}\n                    size=\"small\"\n                    style={{ marginRight: -7 }}\n                  >\n                    MAX\n                  </Button>\n                }\n                bordered={false}\n                max={balance}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"add-outline\" />}\n          onClick={seed}\n          block\n          disabled={!value}\n          loading={loading}\n        >\n          Seed\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Seed\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\n\nimport { Row, Col, Card, Typography, Space, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport NumericInput from 'shared/antd/numericInput'\nimport { numeric } from 'shared/util'\nimport { useWallet } from 'senhub/providers'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport useMintDecimals from 'app/shared/hooks/useMintDecimals'\nimport useMintCgk from 'app/shared/hooks/useMintCgk'\n\nconst {\n  sol: { farming },\n} = configs\n\nconst Unseed = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const farms = useSelector((state: AppState) => state.farms)\n  const [value, setValue] = useState('')\n  const [balance, setBalance] = useState('0')\n  const [loading, setLoading] = useState(false)\n  const { treasury_reward, mint_reward } = farms[farmAddress] || {}\n  const decimal = useMintDecimals(mint_reward)\n  const { symbol } = useMintCgk(mint_reward)\n\n  useEffect(() => {\n    ;(async () => {\n      if (decimal === 0) return\n      try {\n        const { splt } = window.sentre\n        const { amount } = await splt.getAccountData(treasury_reward)\n        if (!amount) return setBalance('0')\n        return setBalance(utils.undecimalize(amount, decimal))\n      } catch (er) {\n        setBalance('0')\n      }\n    })()\n  }, [decimal, treasury_reward])\n\n  const unseed = async () => {\n    setLoading(true)\n    const { wallet, splt } = window.sentre\n    if (!wallet) return\n    const dstAddress = await splt.deriveAssociatedAddress(\n      walletAddress,\n      mint_reward,\n    )\n    const amount = utils.decimalize(value, decimal)\n    try {\n      const { txId } = await farming.unseed(\n        amount,\n        farmAddress,\n        dstAddress,\n        wallet,\n      )\n      onChange(txId)\n      return notifySuccess('Unseed', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 8 }}\n        >\n          <Row gutter={[0, 0]}>\n            <Col span={24}>\n              <Row\n                gutter={[0, 0]}\n                wrap={false}\n                style={{ margin: `6px 12px 0px 12px`, fontSize: 12 }}\n              >\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">Amount</Typography.Text>\n                </Col>\n                <Col>\n                  <Space size={6}>\n                    <Typography.Text type=\"secondary\">\n                      Available:\n                    </Typography.Text>\n                    <Typography.Text>\n                      {numeric(balance).format('0,0.[00]')}\n                    </Typography.Text>\n                    <Typography.Text type=\"secondary\">{symbol}</Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <NumericInput\n                placeholder=\"0\"\n                value={value}\n                onValue={setValue}\n                suffix={\n                  <Button\n                    type=\"text\"\n                    onClick={() => setValue(balance)}\n                    size=\"small\"\n                    style={{ marginRight: -7 }}\n                  >\n                    MAX\n                  </Button>\n                }\n                bordered={false}\n                max={balance}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"remove-outline\" />}\n          onClick={unseed}\n          block\n          disabled={!value}\n          loading={loading}\n        >\n          Unseed\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Unseed\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport { AppState } from 'app/model'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\n\nconst {\n  sol: { farming },\n} = configs\n\nconst FreezeOrThaw = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const farms = useSelector((state: AppState) => state.farms)\n  const [loading, setLoading] = useState(false)\n\n  const { state } = farms?.[farmAddress] || {}\n\n  const freeze = async () => {\n    const { wallet } = window.sentre\n    if (!wallet) return\n    setLoading(true)\n    try {\n      const { txId } = await farming.freeze(farmAddress, wallet)\n      onChange(txId)\n      return notifySuccess('Freeze the farm', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const thaw = async () => {\n    const { wallet } = window.sentre\n    if (!wallet) return\n    setLoading(true)\n    try {\n      const { txId } = await farming.thaw(farmAddress, wallet)\n      onChange(txId)\n      return notifySuccess('Thaw the farm', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 16 }}\n        >\n          <Space align=\"start\">\n            <IonIcon name=\"information-circle-outline\" />\n            <Typography.Text>\n              Freezing a farm will prevent all actions, but \"seed\" and \"unseed\",\n              until the farm has been thawed.\n            </Typography.Text>\n          </Space>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={\n            <IonIcon name={state === 1 ? 'snow-outline' : 'sunny-outline'} />\n          }\n          onClick={state === 1 ? freeze : thaw}\n          block\n          disabled={!state}\n          loading={loading}\n        >\n          {state === 1 ? 'Freeze' : 'Thaw'}\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FreezeOrThaw\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\n\nimport { AppState } from 'app/model'\nimport IonIcon from 'shared/antd/ionicon'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\n\nconst {\n  sol: { farming },\n} = configs\n\nconst Close = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const farms = useSelector((state: AppState) => state.farms)\n  const [loading, setLoading] = useState(false)\n  const { total_shares } = farms?.[farmAddress] || {}\n\n  const close = async () => {\n    const { wallet } = window.sentre\n    if (!wallet) return\n    setLoading(true)\n    try {\n      const { txId } = await farming.closeFarm(farmAddress, wallet)\n      onChange(txId)\n      return notifySuccess('Close the farm', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 16 }}\n        >\n          <Row gutter={[0, 0]}>\n            <Col span={24}>\n              <Space>\n                <IonIcon name=\"information-circle-outline\" />\n                <Typography.Text>\n                  The farm can be closed only all farmers unstaked their tokens!\n                </Typography.Text>\n              </Space>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"trash-outline\" />}\n          onClick={close}\n          block\n          disabled={!!total_shares}\n          loading={loading}\n        >\n          Close Farm\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Close\n","import { Fragment, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport {\n  Modal,\n  Row,\n  Col,\n  Space,\n  Typography,\n  Card,\n  Tabs,\n  Button,\n  Tooltip,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport Seed from './seed'\nimport Unseed from './unseed'\nimport FreezeOrThaw from './freezeOrThaw'\nimport Close from './close'\n\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\nimport { AppState } from 'app/model'\nimport { useBudget } from 'app/hooks/useBudget'\nimport useMintDecimals from 'app/shared/hooks/useMintDecimals'\n\nconst ExtraTypography = ({\n  label = '',\n  title = '',\n}: {\n  label?: string\n  title?: string\n}) => {\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>\n        <Typography.Text>{title}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst Management = ({ farmAddress }: { farmAddress: string }) => {\n  const farmData = useSelector((state: AppState) => state.farms?.[farmAddress])\n  const [visible, setVisible] = useState(false)\n  const [visibleTooltip, setVisibleTooltip] = useState(false)\n  const { budget, symbol } = useBudget(farmAddress)\n  console.log(budget)\n  const { mint_stake: mintFarmAddress, period, reward } = farmData || {}\n  const farmDecimal = useMintDecimals(mintFarmAddress)\n\n  const onCopy = async () => {\n    setVisibleTooltip(true)\n    await asyncWait(1500)\n    setVisibleTooltip(false)\n  }\n\n  const farmPeriod = Number(period) / (60 * 60)\n  const farmReward = useMemo(() => {\n    if (farmDecimal === 0) return 0\n    return utils.undecimalize(reward, farmDecimal)\n  }, [farmDecimal, reward])\n\n  return (\n    <Fragment>\n      <Button onClick={() => setVisible(true)}>Manage</Button>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        closeIcon={<IonIcon name=\"close\" />}\n        footer={null}\n        destroyOnClose\n        centered\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Space style={{ lineHeight: 1 }}>\n              <IonIcon name=\"leaf\" />\n              <Typography.Title level={5} style={{ margin: 0 }}>\n                Farm Management\n              </Typography.Title>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Card\n              style={{ borderRadius: 8 }}\n              bodyStyle={{ padding: 16 }}\n              bordered={false}\n            >\n              <Row gutter={[8, 8]}>\n                <Col span={24}>\n                  <Row gutter={[0, 0]}>\n                    <Col flex=\"auto\">\n                      <Space size={4} style={{ fontWeight: 600 }}>\n                        <MintAvatar mintAddress={mintFarmAddress} size={32} />\n                        <MintSymbol mintAddress={mintFarmAddress} />\n                      </Space>\n                    </Col>\n                    <Col>\n                      <Space size={2}>\n                        <Typography.Text\n                          type=\"secondary\"\n                          style={{ fontSize: 12 }}\n                        >\n                          {shortenAddress(farmAddress)}\n                        </Typography.Text>\n                        <Tooltip visible={visibleTooltip} title=\"Copied\">\n                          <CopyToClipboard text={farmAddress}>\n                            <Button\n                              type=\"text\"\n                              size=\"small\"\n                              onClick={onCopy}\n                              icon={<IonIcon name=\"copy\" />}\n                            />\n                          </CopyToClipboard>\n                        </Tooltip>\n                        <Button\n                          type=\"text\"\n                          size=\"small\"\n                          onClick={() =>\n                            window.open(explorer(farmAddress), '_blank')\n                          }\n                          icon={<IonIcon name=\"open\" />}\n                        />\n                      </Space>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col span={24}>\n                  <ExtraTypography\n                    label=\"Budget\"\n                    title={`${budget} ${symbol}`}\n                  />\n                </Col>\n                <Col span={24}>\n                  <ExtraTypography\n                    label=\"Reward\"\n                    title={`${farmReward} ${symbol}/${farmPeriod} hour`}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Tabs>\n              <Tabs.TabPane key=\"seed\" tab=\"Seed\">\n                <Seed\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"unseed\" tab=\"Unseed\">\n                <Unseed\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"freeze-thaw\" tab=\"Freeze/Thaw\">\n                <FreezeOrThaw\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"ownership\" tab=\"Ownership\" disabled>\n                TBD\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"close\" tab=\"Close\">\n                <Close\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Management\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\n\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'app/shared/hooks/useMintDecimals'\nimport useMintCgk from 'app/shared/hooks/useMintCgk'\n\nexport const useBudget = (\n  farmAddress: string,\n): { budget: number | string; symbol: string } => {\n  const [budget, setBudget] = useState('0')\n  const farms = useSelector((state: AppState) => state.farms)\n  const { treasury_stake, treasury_reward, mint_reward, total_shares } =\n    farms[farmAddress] || {}\n  const decimal = useMintDecimals(mint_reward)\n  const { symbol } = useMintCgk(mint_reward)\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const { splt } = window.sentre\n        let { amount } = await splt.getAccountData(treasury_reward)\n        if (treasury_reward === treasury_stake) amount = amount - total_shares\n        const budget = utils.undecimalize(amount, decimal)\n        setBudget(budget)\n      } catch (er) {\n        setBudget('0')\n      }\n    })()\n  }, [decimal, total_shares, treasury_reward, treasury_stake])\n\n  return { budget, symbol }\n}\n","import { useState, useEffect, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { useDebt } from 'app/hooks/useDebt'\nimport calculateReward from 'helpers/calculateReward'\n\nexport const useReward = (farmAddress: string): number => {\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const { data } = useDebt(farmAddress)\n  const [reward, setReward] = useState(0)\n\n  const calcReward = useCallback(() => {\n    if (!data || !farmData) return setReward(0)\n    const pendingReward = calculateReward(data, farmData) || 0\n    return setReward(pendingReward)\n  }, [data, farmData])\n\n  useEffect(() => {\n    calcReward()\n  }, [calcReward])\n\n  return reward\n}\n","import { useCallback } from 'react'\nimport { Swap, utils } from '@senswap/sen-js'\n\nimport { useMint, usePool } from 'senhub/providers'\nimport { fetchCGK } from 'shared/util'\n\nexport const useMintUsd = () => {\n  const { tokenProvider, getMint } = useMint()\n  const { pools } = usePool()\n\n  const getMintUSD = useCallback(\n    async (mintAddress: string, amount: bigint) => {\n      try {\n        const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n        if (!tokenInfo) return 0\n        const ticket = tokenInfo.extensions?.coingeckoId\n        if (!ticket) return 0\n        const cgkData = await fetchCGK(ticket)\n        return (\n          Number(utils.undecimalize(amount, tokenInfo.decimals)) * cgkData.price\n        )\n      } catch (error) {\n        return 0\n      }\n    },\n    [tokenProvider],\n  )\n\n  const getMintLptUSD = useCallback(\n    async (lptAddress: string, amount: bigint) => {\n      const poolData = Object.values(pools).find(\n        (pool) => pool.mint_lpt === lptAddress,\n      )\n      if (!poolData) return 0\n      const { reserve_a, reserve_b, mint_a, mint_b } = poolData\n      const {\n        [lptAddress]: { supply },\n      } = await getMint({ address: lptAddress })\n      const { deltaA, deltaB } = Swap.oracle.withdraw(\n        amount,\n        supply,\n        reserve_a,\n        reserve_b,\n      )\n      const balanceA: number = await getMintUSD(mint_a, deltaA)\n      const balanceB: number = await getMintUSD(mint_b, deltaB)\n      return balanceA + balanceB\n    },\n    [getMint, getMintUSD, pools],\n  )\n\n  const getTotalValue = useCallback(\n    async ({\n      mintAddress,\n      amount,\n    }: {\n      mintAddress: string\n      amount: bigint\n    }) => {\n      const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n      if (!tokenInfo) return getMintLptUSD(mintAddress, amount)\n      return getMintUSD(mintAddress, amount)\n    },\n    [getMintLptUSD, getMintUSD, tokenProvider],\n  )\n  return { getTotalValue }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { useMintUsd } from './useMintUsd'\n\nexport const useFarmLiquidity = (farmAddress: string) => {\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const { getTotalValue } = useMintUsd()\n  const [liquidity, setLiquidity] = useState(0)\n\n  const calcLiquidity = useCallback(async () => {\n    const { total_shares, mint_stake } = farmData\n    const totalValue = await getTotalValue({\n      mintAddress: mint_stake,\n      amount: total_shares,\n    })\n    return setLiquidity(totalValue)\n  }, [farmData, getTotalValue])\n\n  useEffect(() => {\n    calcLiquidity()\n  }, [calcLiquidity])\n\n  return liquidity\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useFarmLiquidity } from 'app/hooks/useFarmLiquidity'\nimport { AppState } from 'app/model'\nimport { useMintUsd } from './useMintUsd'\n\nexport const useFarmRoi = (farmAddress: string) => {\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const liquidity = useFarmLiquidity(farmAddress)\n  const { getTotalValue } = useMintUsd()\n  const [roi, setRoi] = useState(0)\n\n  const calcLiquidity = useCallback(async () => {\n    if (!liquidity) return setRoi(0)\n    const { mint_reward, reward, period } = farmData\n    const rewardPerDay = (reward * BigInt(86400)) / period\n    const totalReward = await getTotalValue({\n      mintAddress: mint_reward,\n      amount: rewardPerDay,\n    })\n    const roi = totalReward / liquidity\n    return setRoi(roi)\n  }, [farmData, getTotalValue, liquidity])\n\n  useEffect(() => {\n    calcLiquidity()\n  }, [calcLiquidity])\n\n  const apr = useMemo(() => 365 * roi, [roi])\n  return { roi, apr }\n}\n","import { Fragment, useEffect, useMemo, useState } from 'react'\nimport { utils } from '@senswap/sen-js'\nimport { useSelector } from 'react-redux'\nimport { useLocation, useHistory } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Collapse,\n  Modal,\n  Row,\n  Space,\n  Tabs,\n  Tooltip,\n} from 'antd'\nimport Content from './content'\nimport IonIcon from 'shared/antd/ionicon'\nimport Unstake from './stakeAndUnstake/unstake'\nimport Stake from './stakeAndUnstake/stake'\nimport Management from './management'\n\nimport { numeric } from 'shared/util'\nimport { useUI, useWallet } from 'senhub/providers'\nimport { HarvestValidator } from 'helpers/validateHarvest'\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useReward } from 'app/hooks/useReward'\nimport { useFarmLiquidity } from 'app/hooks/useFarmLiquidity'\nimport { useFarmRoi } from 'app/hooks/useFarmRoi'\nimport { AppState } from 'app/model'\nimport { LPT_DECIMALS } from 'app/configs/farmstat.config'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport configs from 'app/configs'\nimport { useFarmPool } from 'app/hooks/useFarmPool'\n\nconst {\n  sol: { senAddress, farming },\n  manifest: { appId },\n} = configs\n\nconst ItemFarming = ({ farmAddress }: { farmAddress: string }) => {\n  const farmData = useSelector((state: AppState) => state.farms?.[farmAddress])\n  const { data } = useDebt(farmAddress)\n  const reward = useReward(farmAddress)\n  const farmPool = useFarmPool(farmAddress)\n  const liquidity = useFarmLiquidity(farmAddress)\n  const { apr } = useFarmRoi(farmAddress)\n  const {\n    ui: { width },\n  } = useUI()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const locationSearch = useLocation().search\n  const history = useHistory()\n  const [activeKey, setActiveKey] = useState<string>()\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const { owner } = farmData || {}\n  const isOwner = owner === walletAddress\n\n  const query = useMemo(\n    () => new URLSearchParams(locationSearch),\n    [locationSearch],\n  )\n\n  const onActive = () => {\n    if (activeKey) return setActiveKey(undefined)\n    query.set('farmAddress', farmAddress)\n    history.push(`/app/${appId}?` + query.toString())\n    return setActiveKey(farmAddress)\n  }\n\n  const handleHarvest = async () => {\n    setLoading(true)\n    const { splt, wallet } = window.sentre\n    const senWallet = await splt.deriveAssociatedAddress(\n      walletAddress,\n      senAddress,\n    )\n    try {\n      if (!wallet) throw new Error('please connect wallet first!')\n      const harvestValidator = new HarvestValidator()\n      await harvestValidator.validate(farmAddress)\n      const { txId } = await farming.harvest(farmAddress, senWallet, wallet)\n      return notifySuccess('Harvest', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const farmSelected = query.get('farmAddress')\n    if (!farmSelected || farmSelected !== farmAddress) return\n    setActiveKey(farmSelected)\n  }, [farmAddress, query])\n\n  let amountLptShared = '0'\n  if (data) {\n    amountLptShared = utils.undecimalize(data.shares, LPT_DECIMALS)\n  }\n  const desktop = width > 768\n  const icoDesktopCollapse = activeKey\n    ? 'chevron-down-outline'\n    : 'chevron-forward-outline'\n  const icoMobileCollapse = activeKey\n    ? 'chevron-up-outline'\n    : 'chevron-down-outline'\n\n  const icon = !desktop ? icoMobileCollapse : icoDesktopCollapse\n\n  return (\n    <Fragment>\n      <Card\n        bordered={false}\n        className=\"farming-card\"\n        bodyStyle={{ padding: 16 }}\n        style={{\n          boxShadow: 'unset',\n          borderRadius: 8,\n          position: 'relative',\n          zIndex: 1,\n        }}\n      >\n        <Row gutter={[16, 16]} justify=\"center\" align=\"middle\">\n          <Col flex=\"auto\">\n            <Row gutter={[16, 16]} align=\"middle\">\n              <Col xs={24} md={5}>\n                <Space>\n                  <MintAvatar mintAddress={farmData.mint_stake} size={24} />\n                  <MintSymbol mintAddress={farmAddress} />\n                  <Tooltip title={farmAddress}>\n                    <Button\n                      type=\"text\"\n                      shape=\"circle\"\n                      size=\"small\"\n                      icon={<IonIcon name=\"alert-circle-outline\" />}\n                    />\n                  </Tooltip>\n                </Space>\n              </Col>\n              <Col xs={12} md={4}>\n                <Content\n                  label=\"APR\"\n                  tooltip={farmAddress}\n                  value={numeric(apr).format('0,0.[00]a%')}\n                />\n              </Col>\n              <Col xs={12} md={5}>\n                <Content\n                  label=\"Liquidity\"\n                  value={numeric(liquidity).format('0,0.00[00]a$')}\n                />\n              </Col>\n              <Col xs={12} md={5}>\n                <Content\n                  label=\"Your staked LPT\"\n                  value={numeric(amountLptShared).format('0,0.00[00]')}\n                />\n              </Col>\n              <Col xs={12} md={5}>\n                <Content\n                  mintAddress={farmData.mint_reward}\n                  label=\"Reward\"\n                  value={numeric(reward).format('0,0.00[00]')}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Button\n              type=\"text\"\n              icon={<IonIcon name={icon} />}\n              onClick={onActive}\n            />\n          </Col>\n        </Row>\n      </Card>\n      <Row>\n        <Col span={24}>\n          <Collapse activeKey={activeKey} className=\"expand-card\">\n            <Collapse.Panel header={null} key={farmAddress} showArrow={false}>\n              <Row gutter={[16, 16]}>\n                <Col xs={{ order: 2 }} md={{ order: 1 }} flex=\"auto\">\n                  {farmPool && (\n                    <Button\n                      type=\"text\"\n                      style={{ padding: 0, background: 'transparent' }}\n                      onClick={() => {\n                        history.push(\n                          `/app/sen_lp?poolAddress=${farmPool.address}`,\n                        )\n                      }}\n                    >\n                      Go pool\n                      <IonIcon name=\"chevron-forward-outline\" />\n                    </Button>\n                  )}\n                </Col>\n                <Col xs={{ order: 1 }} md={{ order: 2 }}>\n                  <Space>\n                    {isOwner && <Management farmAddress={farmAddress} />}\n                    <Button\n                      onClick={() => setVisible(true)}\n                      icon={<IonIcon name=\"add-outline\" />}\n                    >\n                      Stake\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      icon={<IonIcon name=\"leaf-outline\" />}\n                      loading={loading}\n                      onClick={handleHarvest}\n                      disabled={reward === 0}\n                    >\n                      Harvest\n                    </Button>\n                  </Space>\n                </Col>\n              </Row>\n            </Collapse.Panel>\n          </Collapse>\n        </Col>\n      </Row>\n      <Modal\n        onCancel={() => setVisible(false)}\n        footer={null}\n        title={null}\n        visible={visible}\n      >\n        <Tabs>\n          <Tabs.TabPane tab=\"Stake\" key=\"stake\">\n            <Stake farmAddress={farmAddress} onClose={setVisible} />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Unstake\" key=\"unstake\">\n            <Unstake farmAddress={farmAddress} onClose={setVisible} />\n          </Tabs.TabPane>\n        </Tabs>\n      </Modal>\n    </Fragment>\n  )\n}\nexport default ItemFarming\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport isEqual from 'react-fast-compare'\nimport { PoolData } from '@senswap/sen-js'\n\nimport { usePool } from 'senhub/providers'\n\nimport { AppState } from 'app/model'\n\nexport const useFarmPool = (\n  farmAddress: string,\n): { address: string; data: PoolData } | undefined => {\n  const { pools } = usePool()\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const [farmPool, setFarmPool] =\n    useState<{ address: string; data: PoolData }>()\n\n  const findPoolData = useCallback(async () => {\n    const mintStake = farmData?.mint_stake\n    if (!mintStake) return setFarmPool(undefined)\n    let address: string = ''\n    for (const poolAddress in pools) {\n      const poolData = pools[poolAddress]\n      if (poolData.mint_lpt !== mintStake) continue\n      address = poolAddress\n      break\n    }\n    const newPoolData = pools[address]\n    if (isEqual(newPoolData, farmPool?.data)) return\n    return setFarmPool({ address, data: newPoolData })\n  }, [farmData?.mint_stake, farmPool, pools])\n\n  useEffect(() => {\n    findPoolData()\n  }, [findPoolData])\n\n  return farmPool\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { FarmData } from '@senswap/sen-js'\n\nimport { AppState } from 'app/model'\nimport { usePool, useMint } from 'senhub/providers'\n\nconst KEY_SIZE = 3\n\nexport const useSearchFarm = () => {\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n  const farms = useSelector((state: AppState) => state.farms)\n  const { search: keyword } = useSelector((state: AppState) => state.main)\n  const [farmFilter, setFarmFilter] = useState<Record<string, FarmData>>({})\n\n  const search = useCallback(async () => {\n    if (!keyword || !pools || !farms || keyword.length < KEY_SIZE)\n      return setFarmFilter(farms)\n\n    const newFarmFilter: Record<string, FarmData> = {}\n    for (const addr in farms) {\n      const farm = farms[addr]\n      const { mint_stake } = farm\n      let check = false\n\n      // check farm address\n      if (addr === keyword) check = true\n      // check token\n      const mintStakeInfo = await tokenProvider.findByAddress(mint_stake)\n      if (mintStakeInfo) {\n        // check token symbol\n        const tokenName = mintStakeInfo.symbol + mintStakeInfo.name\n        if (tokenName.toLowerCase().includes(keyword.toLowerCase()))\n          check = true\n        // check token address\n        if (mintStakeInfo.address === keyword) check = true\n      }\n      if (check) newFarmFilter[addr] = farm\n    }\n\n    setFarmFilter(newFarmFilter)\n  }, [farms, keyword, pools, tokenProvider])\n\n  useEffect(() => {\n    search()\n  }, [search])\n\n  return farmFilter\n}\n","import LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport { useFarmList } from 'app/hooks/useFarmList'\n\nconst ListFarmings = () => {\n  const farms = useFarmList()\n  return (\n    <Row gutter={[16, 16]}>\n      {farms.map((farm) => (\n        <Col span={24} key={farm.address}>\n          <LazyLoad height={84}>\n            <ItemFarming farmAddress={farm.address} />\n          </LazyLoad>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default ListFarmings\n","import { useCallback, useEffect, useState } from 'react'\nimport { FarmData } from '@senswap/sen-js'\n\nimport { useSearchFarm } from './useSearchFarm'\n\nexport const useFarmList = (): { address: string; data: FarmData }[] => {\n  const farms = useSearchFarm()\n  const [farmList, setFarmList] = useState<\n    { address: string; data: FarmData }[]\n  >([])\n\n  const getFarmList = useCallback(() => {\n    let newFarmList = []\n    for (const address in farms) {\n      newFarmList.push({ address, data: farms[address] })\n    }\n    //sort\n    newFarmList = newFarmList.sort((a, b) =>\n      a.data.total_shares < b.data.total_shares ? 1 : -1,\n    )\n    setFarmList(newFarmList)\n  }, [farms])\n\n  useEffect(() => {\n    getFarmList()\n  }, [getFarmList])\n\n  return farmList\n}\n","import { useMemo } from 'react'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport configs from 'app/configs'\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\n\nconst {\n  sol: { senOwner },\n} = configs\n\nconst SentreFarms = () => {\n  const farms = useSearchFarm()\n\n  const listFarmAddress = useMemo(() => Object.keys(farms), [farms])\n\n  const filterFarm = useMemo(() => {\n    return listFarmAddress.filter((addr) =>\n      senOwner.includes(farms[addr].owner),\n    )\n  }, [farms, listFarmAddress])\n\n  const sortedFarm = useMemo(() => {\n    const listFarms = filterFarm.sort((fistFarm, secondFarm) => {\n      const totalFistFarm = farms[fistFarm].total_shares\n      const totalSecondFarm = farms[secondFarm].total_shares\n      return totalFistFarm < totalSecondFarm ? 1 : -1\n    })\n    return listFarms\n  }, [farms, filterFarm])\n\n  return (\n    <Row gutter={[16, 16]}>\n      {sortedFarm.map((farmAddress, i) => {\n        return (\n          <Col span={24} key={farmAddress + i}>\n            <LazyLoad height={84}>\n              <ItemFarming farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default SentreFarms\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport { AppState } from 'app/model'\nimport { useWallet } from 'senhub/providers'\nimport configs from 'app/configs'\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\n\nconst {\n  sol: { farming },\n} = configs\n\nexport type StakedFarms = {\n  [x: string]: boolean\n}\n\nconst StakedFarm = () => {\n  const { debts } = useSelector((state: AppState) => state)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const farms = useSearchFarm()\n  const [isStakedFarms, setIsStakedFarms] = useState<StakedFarms>()\n\n  const listFarmAddress = useMemo(() => Object.keys(farms), [farms])\n\n  const getStakedFarms = useCallback(async () => {\n    const filterFarms: StakedFarms = {}\n\n    for (const farmAddress of listFarmAddress) {\n      if (!farmAddress) continue\n      const debtAddress = await farming.deriveDebtAddress(\n        walletAddress,\n        farmAddress,\n      )\n      const debtData = debts[debtAddress]\n      if (debtData?.shares > global.BigInt(0)) {\n        filterFarms[farmAddress] = true\n      }\n    }\n    setIsStakedFarms(filterFarms)\n  }, [debts, listFarmAddress, walletAddress])\n\n  useEffect(() => {\n    getStakedFarms()\n  }, [getStakedFarms])\n\n  return (\n    <Row gutter={[16, 16]}>\n      {Object.keys(farms).map((farmAddress, i) => {\n        if (!isStakedFarms?.[farmAddress]) return null\n        return (\n          <Col span={24} key={farmAddress + i}>\n            <LazyLoad height={84}>\n              <ItemFarming farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default StakedFarm\n","import { useMemo } from 'react'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport { useWallet } from 'senhub/providers'\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\n\nconst YourFarms = () => {\n  const farms = useSearchFarm()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const listFarmAddress = useMemo(() => Object.keys(farms), [farms])\n\n  const filterFarm = useMemo(() => {\n    return listFarmAddress.filter((addr) => walletAddress === farms[addr].owner)\n  }, [farms, listFarmAddress, walletAddress])\n\n  const sortedFarm = useMemo(() => {\n    const listFarms = filterFarm.sort((fistFarm, secondFarm) => {\n      const totalFistFarm = farms[fistFarm].total_shares\n      const totalSecondFarm = farms[secondFarm].total_shares\n      return totalFistFarm < totalSecondFarm ? 1 : -1\n    })\n    return listFarms\n  }, [farms, filterFarm])\n\n  return (\n    <Row gutter={[16, 16]}>\n      {sortedFarm.map((farmAddress, i) => {\n        return (\n          <Col span={24} key={farmAddress + i}>\n            <LazyLoad height={84}>\n              <ItemFarming farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default YourFarms\n","import { useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport { forceCheck } from '@senswap/react-lazyload'\n\nimport { Tabs } from 'antd'\nimport NewFarm from './newFarm'\nimport ListFarmings from './listFarming'\nimport SentreFarms from './sentreFarms'\nimport StakedFarm from './stakedFarm'\nimport YourFarms from './yourFamrs'\n\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport { useWallet } from 'senhub/providers'\n\nconst {\n  sol: { senOwner, farming },\n} = configs\n\nconst FarmingDetails = () => {\n  const { farms, debts } = useSelector((state: AppState) => state)\n  const locationSearch = useLocation().search\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const [tabActive, setTabActive] = useState('sen-farms')\n\n  const query = useMemo(\n    () => new URLSearchParams(locationSearch),\n    [locationSearch],\n  )\n\n  // check tab activeKey with farmSelected\n  useEffect(() => {\n    ;(async () => {\n      const farmSelected = query.get('farmAddress')\n      if (!farmSelected) return\n\n      const farmOwner = farms[farmSelected]?.owner\n      const debtAddress = await farming.deriveDebtAddress(\n        walletAddress,\n        farmSelected,\n      )\n      if (!farmOwner || !debtAddress) return\n\n      const debtData = debts[debtAddress]\n\n      if (farmOwner === walletAddress) return setTabActive('your-farms')\n      if (debtData?.shares > BigInt(0)) return setTabActive('staked-farms')\n      if (senOwner.includes(farmOwner)) return setTabActive('sen-farms')\n      return setTabActive('all-farms')\n    })()\n  }, [debts, farms, query, walletAddress])\n\n  const onChange = (key: string) => {\n    setTimeout(() => {\n      forceCheck()\n    }, 500)\n    setTabActive(key)\n  }\n\n  return (\n    <Tabs\n      activeKey={tabActive}\n      onChange={onChange}\n      tabBarExtraContent={<NewFarm />}\n    >\n      <Tabs.TabPane tab=\"Sen Farms\" key=\"sen-farms\">\n        <SentreFarms />\n      </Tabs.TabPane>\n      <Tabs.TabPane tab=\"Staked Farms\" key=\"staked-farms\">\n        <StakedFarm />\n      </Tabs.TabPane>\n      <Tabs.TabPane tab=\"Your Farms\" key=\"your-farms\">\n        <YourFarms />\n      </Tabs.TabPane>\n      <Tabs.TabPane tab=\"All\" key=\"all-farms\">\n        <ListFarmings />\n      </Tabs.TabPane>\n    </Tabs>\n  )\n}\n\nexport default FarmingDetails\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\nimport { useWallet } from 'senhub/providers'\nimport { getDebts, upsetDebt } from 'app/model/debts.controller'\nimport { AppDispatch } from 'app/model'\nimport { notifyError } from 'app/helper'\n\nconst {\n  sol: { farming },\n} = configs\n\n// Watch id\nlet watchId = 0\nlet prevLamports: bigint = BigInt(0)\n\nconst DebtWatcher = ({ children }: { children: JSX.Element }) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    wallet: { address: walletAddress, lamports },\n  } = useWallet()\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDebts({ owner: walletAddress })).unwrap()\n    } catch (er) {\n      await notifyError(er)\n    }\n  }, [dispatch, walletAddress])\n\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(walletAddress))\n      return console.warn('Wallet is not connected')\n    if (watchId) return console.warn('Already watched')\n    const filters = [\n      { dataSize: 89 },\n      { memcmp: { bytes: walletAddress, offset: 32 } },\n    ]\n    watchId = farming.watch((er, re: any) => {\n      if (er) return console.error(er)\n      const { type, address, data } = re\n      if (type === 'debt') return dispatch(upsetDebt({ address, data }))\n    }, filters)\n  }, [dispatch, walletAddress])\n\n  // When we close debts, there a high chance\n  // that the next balance will be greater than the current balance\n  // We use this trick to reload relevant list\n  useEffect(() => {\n    if (prevLamports && lamports > prevLamports) {\n      dispatch(getDebts({ owner: walletAddress }))\n    }\n    prevLamports = lamports\n  }, [dispatch, walletAddress, lamports])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await farming.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return children\n}\n\nexport default DebtWatcher\n","import { CSSProperties, useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Spin } from 'antd'\n\nimport { notifyError } from 'app/helper'\nimport { getFarms, upsetFarm } from 'app/model/farms.controller'\nimport configs from 'app/configs'\n\nconst {\n  sol: { farming, senAddress },\n} = configs\n\n// Watch id\nlet watchId = 0\n\nconst FarmWatcher = ({\n  children,\n  style = {},\n}: {\n  children: JSX.Element\n  style?: CSSProperties\n}) => {\n  const dispatch = useDispatch()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const fetchData = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      await dispatch(getFarms())\n    } catch (er) {\n      await notifyError(er)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [dispatch])\n\n  const watchData = useCallback(async () => {\n    if (watchId) return console.warn('Already watched')\n    const filters = [\n      { dataSize: 209 },\n      { memcmp: { bytes: senAddress, offset: 97 } },\n    ]\n    watchId = farming.watch((er, re: any) => {\n      if (er) return console.error(er)\n      const { type, address, data } = re\n      if (type !== 'farm') return\n      return dispatch(upsetFarm({ address, data }))\n    }, filters)\n  }, [dispatch])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    return () => {\n      ;(async () => {\n        try {\n          farming.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return (\n    <Spin spinning={isLoading} style={style}>\n      {children}\n    </Spin>\n  )\n}\n\nexport default FarmWatcher\n","import { CSSProperties } from 'react'\nimport DebtWatcher from './debtWatcher'\nimport FarmWatcher from './farmWatcher'\n\nconst FarmWatch = ({\n  children,\n  style,\n}: {\n  children: JSX.Element\n  style?: CSSProperties\n}) => {\n  return (\n    <FarmWatcher style={style}>\n      <DebtWatcher>{children}</DebtWatcher>\n    </FarmWatcher>\n  )\n}\n\nexport default FarmWatch\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Input } from 'antd'\nimport Banner from './banner'\nimport FarmingDetails from './farmingDetails'\nimport FarmWatcher from 'app/components/watcher'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setSearch } from 'app/model/main.controller'\n\nconst Page = () => {\n  const { search } = useSelector((state: AppState) => state.main)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <FarmWatcher>\n      <Row gutter={[24, 24]} style={{ paddingBottom: 12 }} justify=\"center\">\n        <Col xs={24} lg={18}>\n          <Banner />\n        </Col>\n        <Col xs={24} lg={18}>\n          <Row gutter={[8, 8]}>\n            <Col xs={24} lg={8}>\n              <Input\n                value={search}\n                onChange={(e) =>\n                  dispatch(setSearch({ search: e.target.value }))\n                }\n                prefix={<IonIcon name=\"search-outline\" />}\n                bordered\n              />\n            </Col>\n            <Col span={24}>\n              <FarmingDetails />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </FarmWatcher>\n  )\n}\n\nexport default Page\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Input } from 'antd'\nimport { AppDispatch, AppState } from 'app/model'\nimport { setSearch } from 'app/model/main.controller'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst SearchBar = ({ isHidden }: { isHidden: boolean }) => {\n  const { search } = useSelector((state: AppState) => state.main)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Card\n      className={isHidden ? 'hidden-class' : ''}\n      bodyStyle={{ padding: 8 }}\n      bordered={false}\n    >\n      <Input\n        value={search}\n        onChange={(e) => dispatch(setSearch({ search: e.target.value }))}\n        placeholder=\"Search\"\n        size=\"small\"\n        bordered={false}\n        prefix={\n          <Button\n            type=\"text\"\n            style={{ marginLeft: -7 }}\n            size=\"small\"\n            icon={<IonIcon name=\"search-outline\" />}\n          />\n        }\n      />\n    </Card>\n  )\n}\n\nexport default SearchBar\n","import { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { utils } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Divider, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppState } from 'app/model'\nimport { useReward } from 'app/hooks/useReward'\nimport { useDebt } from 'app/hooks/useDebt'\nimport { LPT_DECIMALS } from 'app/configs/farmstat.config'\nimport { useFarmRoi } from 'app/hooks/useFarmRoi'\nimport configs from 'app/configs'\nimport { numeric } from 'shared/util'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst FarmCard = ({ farmAddress }: { farmAddress: string }) => {\n  const reward = useReward(farmAddress)\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const history = useHistory()\n  const locationSearch = useLocation().search\n  const { data } = useDebt(farmAddress)\n  const { apr } = useFarmRoi(farmAddress)\n\n  const query = useMemo(\n    () => new URLSearchParams(locationSearch),\n    [locationSearch],\n  )\n\n  const handleDetail = useCallback(() => {\n    query.set('farmAddress', farmAddress)\n    history.push(`/app/${appId}?` + query.toString())\n  }, [farmAddress, history, query])\n\n  let amountLptShared = '0'\n  if (data) {\n    amountLptShared = utils.undecimalize(data.shares, LPT_DECIMALS)\n  }\n\n  return (\n    <Card bordered={false} className=\"farm-card-widget\">\n      <Row>\n        <Col span={24}>\n          <Row align=\"middle\" gutter={[12, 12]}>\n            <Col flex=\"auto\">\n              <Space>\n                <MintAvatar mintAddress={farmData.mint_stake} />\n                <MintSymbol mintAddress={farmData.mint_stake} />\n              </Space>\n            </Col>\n\n            <Col>\n              <Button\n                onClick={handleDetail}\n                type=\"text\"\n                icon={<IonIcon name=\"open-outline\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Divider style={{ margin: '12px 0' }} />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[6, 6]}>\n            <Col flex=\"auto\">\n              <Space>\n                <MintAvatar mintAddress={farmData.mint_reward} />\n                <Typography.Text type=\"secondary\">Reward</Typography.Text>\n              </Space>\n            </Col>\n            <Col>\n              <Space>\n                <Typography.Text>\n                  {numeric(reward).format('0,0.00[00]')}\n                </Typography.Text>\n                <MintSymbol mintAddress={farmData.mint_reward} />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">APR</Typography.Text>\n                </Col>\n                <Col>\n                  <Space>\n                    <Typography.Text>\n                      {numeric(apr).format('0,0.[00]%')}\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    Your stacked LPT\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Space>\n                    <Typography.Text>\n                      {numeric(amountLptShared).format('0,0.00[00]')}\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default FarmCard\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Row } from 'antd'\nimport FarmCard from '../farmCard'\n\nimport { AppState } from 'app/model'\nimport { useWallet } from 'senhub/providers'\nimport { StakedFarms } from 'app/page/farmingDetails/stakedFarm'\nimport configs from 'app/configs'\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\n\nconst {\n  sol: { farming },\n} = configs\n\nconst Staked = () => {\n  const { debts } = useSelector((state: AppState) => state)\n  const farms = useSearchFarm()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const [isStakedFarms, setIsStakedFarms] = useState<StakedFarms>()\n\n  const listFarmAddress = useMemo(() => Object.keys(farms), [farms])\n\n  const getStakedFarms = useCallback(async () => {\n    const filterFarms: StakedFarms = {}\n\n    for (const farmAddress of listFarmAddress) {\n      if (!farmAddress) continue\n      const debtAddress = await farming.deriveDebtAddress(\n        walletAddress,\n        farmAddress,\n      )\n      const debtData = debts[debtAddress]\n      if (debtData?.shares > global.BigInt(0)) {\n        filterFarms[farmAddress] = true\n      }\n    }\n    setIsStakedFarms(filterFarms)\n  }, [debts, listFarmAddress, walletAddress])\n\n  useEffect(() => {\n    getStakedFarms()\n  }, [getStakedFarms])\n\n  return (\n    <Row gutter={[12, 12]}>\n      {Object.keys(farms).map((farmAddress, idx) => {\n        if (!isStakedFarms?.[farmAddress]) return null\n        return (\n          <Col span={24} key={idx}>\n            <LazyLoad height={185} overflow>\n              <FarmCard farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n      <Col />\n    </Row>\n  )\n}\n\nexport default Staked\n","import { useMemo } from 'react'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Row } from 'antd'\nimport FarmCard from '../farmCard'\n\nimport { useWallet } from 'senhub/providers'\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\n\nconst YourFarms = () => {\n  const farms = useSearchFarm()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const listFarmAddress = useMemo(() => Object.keys(farms), [farms])\n\n  const filterFarm = useMemo(() => {\n    return listFarmAddress.filter((addr) => walletAddress === farms[addr].owner)\n  }, [farms, listFarmAddress, walletAddress])\n\n  const sortedFarm = useMemo(() => {\n    const listFarms = filterFarm.sort((fistFarm, secondFarm) => {\n      const totalFistFarm = farms[fistFarm].total_shares\n      const totalSecondFarm = farms[secondFarm].total_shares\n      return totalFistFarm < totalSecondFarm ? 1 : -1\n    })\n    return listFarms\n  }, [farms, filterFarm])\n\n  return (\n    <Row gutter={[16, 16]}>\n      {sortedFarm.map((farmAddress, i) => {\n        return (\n          <Col span={24} key={farmAddress + i}>\n            <LazyLoad height={84}>\n              <FarmCard farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n      <Col />\n    </Row>\n  )\n}\n\nexport default YourFarms\n","import { Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Tabs } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport SearchBar from './searchBar'\nimport StakedFarms from './stakedFarms'\nimport YourFarms from './yourFamrs'\nimport FarmWatcher from 'app/components/watcher'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setSearch } from 'app/model/main.controller'\n\nconst Widget = () => {\n  const [isOpenSearch, setIsOpenSearch] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const { search } = useSelector((state: AppState) => state.main)\n\n  const onToggle = () => {\n    if (isOpenSearch) dispatch(setSearch({ search: '' }))\n    setIsOpenSearch(!isOpenSearch)\n  }\n\n  return (\n    <Fragment>\n      <Button\n        className=\"button-search\"\n        type=\"text\"\n        icon={\n          <IonIcon name={isOpenSearch ? 'close-outline' : 'search-outline'} />\n        }\n        onClick={onToggle}\n      />\n      <SearchBar isHidden={!search && !isOpenSearch} />\n      <FarmWatcher style={{ height: 336 }}>\n        <Tabs className={!isOpenSearch ? '' : 'hidden-tab'}>\n          <Tabs.TabPane tab=\"Staked farms\" key=\"staked-farm\">\n            <StakedFarms />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Your farms\" key=\"your-farm\">\n            <YourFarms />\n          </Tabs.TabPane>\n        </Tabs>\n      </FarmWatcher>\n    </Fragment>\n  )\n}\n\nexport default Widget\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  PoolProvider,\n  MintProvider,\n  AccountProvider,\n} from 'senhub/providers'\n\nimport PageView from 'app/page'\nimport WidgetView from 'app/widget'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\nimport './static/styles/index.less'\nimport './static/styles/dark.less'\nimport './static/styles/light.less'\n\nimport 'app/static/styles/index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd>\n      <PoolProvider>\n        <MintProvider>\n          <AccountProvider>\n            <WalletProvider>\n              <Provider store={model}>\n                <PageView />\n              </Provider>\n            </WalletProvider>\n          </AccountProvider>\n        </MintProvider>\n      </PoolProvider>\n    </UIProvider>\n  )\n}\n\nexport const widgetConfig: WidgetConfig = {\n  size: 'small',\n  type: 'solid',\n}\n\nexport const Widget = () => {\n  return (\n    <UIProvider appId={appId} antd>\n      <PoolProvider>\n        <MintProvider>\n          <AccountProvider>\n            <WalletProvider>\n              <Provider store={model}>\n                <WidgetView />\n              </Provider>\n            </WalletProvider>\n          </AccountProvider>\n        </MintProvider>\n      </PoolProvider>\n    </UIProvider>\n  )\n}\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceVisible = exports.forceCheck = exports.lazyload = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _event = require('./utils/event');\n\nvar _scrollParent = require('./utils/scrollParent');\n\nvar _scrollParent2 = _interopRequireDefault(_scrollParent);\n\nvar _debounce = require('./utils/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _throttle = require('./utils/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar defaultBoundingClientRect = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  width: 0,\n  height: 0\n};\nvar LISTEN_FLAG = 'data-lazyload-listened';\nvar listeners = [];\nvar pending = [];\n\n// try to handle passive events\nvar passiveEventSupported = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveEventSupported = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n// if they are supported, setup the optional params\n// IMPORTANT: FALSE doubles as the default CAPTURE value!\nvar passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;\n\n/**\n * Check if `component` is visible in overflow container `parent`\n * @param  {node} component React component\n * @param  {node} parent    component's scroll parent\n * @return {bool}\n */\nvar checkOverflowVisible = function checkOverflowVisible(component, parent) {\n  var node = component.ref;\n\n  var parentTop = void 0;\n  var parentLeft = void 0;\n  var parentHeight = void 0;\n  var parentWidth = void 0;\n\n  try {\n    ;\n    var _parent$getBoundingCl = parent.getBoundingClientRect();\n\n    parentTop = _parent$getBoundingCl.top;\n    parentLeft = _parent$getBoundingCl.left;\n    parentHeight = _parent$getBoundingCl.height;\n    parentWidth = _parent$getBoundingCl.width;\n  } catch (e) {\n    ;parentTop = defaultBoundingClientRect.top;\n    parentLeft = defaultBoundingClientRect.left;\n    parentHeight = defaultBoundingClientRect.height;\n    parentWidth = defaultBoundingClientRect.width;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  var windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  // calculate top and height of the intersection of the element's scrollParent and viewport\n  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport\n  var intersectionLeft = Math.max(parentLeft, 0); // intersection's left relative to viewport\n  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height\n  var intersectionWidth = Math.min(windowInnerWidth, parentLeft + parentWidth) - intersectionLeft; // width\n\n  // check whether the element is visible in the intersection\n  var top = void 0;\n  var left = void 0;\n  var height = void 0;\n  var width = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie.top;\n    left = _node$getBoundingClie.left;\n    height = _node$getBoundingClie.height;\n    width = _node$getBoundingClie.width;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    left = defaultBoundingClientRect.left;\n    height = defaultBoundingClientRect.height;\n    width = defaultBoundingClientRect.width;\n  }\n\n  var offsetTop = top - intersectionTop; // element's top relative to intersection\n  var offsetLeft = left - intersectionLeft; // element's left relative to intersection\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0 && offsetLeft - offsets[0] <= intersectionWidth && offsetLeft + width + offsets[1] >= 0;\n};\n\n/**\n * Check if `component` is visible in document\n * @param  {node} component React component\n * @return {bool}\n */\nvar checkNormalVisible = function checkNormalVisible(component) {\n  var node = component.ref;\n\n  // If this element is hidden by css rules somehow, it's definitely invisible\n  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;\n\n  var top = void 0;\n  var elementHeight = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie2 = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie2.top;\n    elementHeight = _node$getBoundingClie2.height;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    elementHeight = defaultBoundingClientRect.height;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;\n};\n\n/**\n * Detect if element is visible in viewport, if so, set `visible` state to true.\n * If `once` prop is provided true, remove component as listener after checkVisible\n *\n * @param  {React} component   React component that respond to scroll and resize\n */\nvar checkVisible = function checkVisible(component) {\n  var node = component.ref;\n  if (!(node instanceof HTMLElement)) {\n    return;\n  }\n\n  var parent = (0, _scrollParent2.default)(node);\n  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;\n  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);\n  if (visible) {\n    // Avoid extra render if previously is visible\n    if (!component.visible) {\n      if (component.props.once) {\n        pending.push(component);\n      }\n\n      component.visible = true;\n      component.forceUpdate();\n    }\n  } else if (!(component.props.once && component.visible)) {\n    component.visible = false;\n    if (component.props.unmountIfInvisible) {\n      component.forceUpdate();\n    }\n  }\n};\n\nvar purgePending = function purgePending() {\n  pending.forEach(function (component) {\n    var index = listeners.indexOf(component);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  });\n\n  pending = [];\n};\n\nvar lazyLoadHandler = function lazyLoadHandler() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    checkVisible(listener);\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n/**\n * Forces the component to display regardless of whether the element is visible in the viewport.\n */\nvar forceVisible = function forceVisible() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    listener.visible = true;\n    listener.forceUpdate();\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n// Depending on component's props\nvar delayType = void 0;\nvar finalLazyLoadHandler = null;\n\nvar isString = function isString(string) {\n  return typeof string === 'string';\n};\n\nvar LazyLoad = function (_Component) {\n  _inherits(LazyLoad, _Component);\n\n  function LazyLoad(props) {\n    _classCallCheck(this, LazyLoad);\n\n    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));\n\n    _this.visible = false;\n    _this.setRef = _this.setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyLoad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // It's unlikely to change delay type on the fly, this is mainly\n      // designed for tests\n      var scrollport = window;\n      var scrollContainer = this.props.scrollContainer;\n\n      if (scrollContainer) {\n        if (isString(scrollContainer)) {\n          scrollport = scrollport.document.querySelector(scrollContainer);\n        }\n      }\n      var needResetFinalLazyLoadHandler = this.props.debounce !== undefined && delayType === 'throttle' || delayType === 'debounce' && this.props.debounce === undefined;\n\n      if (needResetFinalLazyLoadHandler) {\n        (0, _event.off)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        finalLazyLoadHandler = null;\n      }\n\n      if (!finalLazyLoadHandler) {\n        if (this.props.debounce !== undefined) {\n          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);\n          delayType = 'debounce';\n        } else if (this.props.throttle !== undefined) {\n          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);\n          delayType = 'throttle';\n        } else {\n          finalLazyLoadHandler = lazyLoadHandler;\n        }\n      }\n\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);\n          if (listenerCount === 1) {\n            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n          }\n          parent.setAttribute(LISTEN_FLAG, listenerCount);\n        }\n      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {\n        var _props = this.props,\n            scroll = _props.scroll,\n            resize = _props.resize;\n\n\n        if (scroll) {\n          (0, _event.on)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        }\n\n        if (resize) {\n          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        }\n      }\n\n      listeners.push(this);\n      checkVisible(this);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return this.visible;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;\n          if (listenerCount === 0) {\n            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n            parent.removeAttribute(LISTEN_FLAG);\n          } else {\n            parent.setAttribute(LISTEN_FLAG, listenerCount);\n          }\n        }\n      }\n\n      var index = listeners.indexOf(this);\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n\n      if (listeners.length === 0 && typeof window !== 'undefined') {\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);\n      }\n    }\n  }, {\n    key: 'setRef',\n    value: function setRef(element) {\n      if (element) {\n        this.ref = element;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          height = _props2.height,\n          children = _props2.children,\n          placeholder = _props2.placeholder,\n          className = _props2.className,\n          classNamePrefix = _props2.classNamePrefix,\n          style = _props2.style;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: classNamePrefix + '-wrapper ' + className,\n          ref: this.setRef,\n          style: style\n        },\n        this.visible ? children : placeholder ? placeholder : _react2.default.createElement('div', {\n          style: { height: height },\n          className: classNamePrefix + '-placeholder'\n        })\n      );\n    }\n  }]);\n\n  return LazyLoad;\n}(_react.Component);\n\nLazyLoad.propTypes = {\n  className: _propTypes2.default.string,\n  classNamePrefix: _propTypes2.default.string,\n  once: _propTypes2.default.bool,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n  overflow: _propTypes2.default.bool,\n  resize: _propTypes2.default.bool,\n  scroll: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  placeholder: _propTypes2.default.node,\n  scrollContainer: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  unmountIfInvisible: _propTypes2.default.bool,\n  style: _propTypes2.default.object\n};\n\nLazyLoad.defaultProps = {\n  className: '',\n  classNamePrefix: 'lazyload',\n  once: false,\n  offset: 0,\n  overflow: false,\n  resize: false,\n  scroll: true,\n  unmountIfInvisible: false\n};\n\nvar getDisplayName = function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nvar decorator = function decorator() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function lazyload(WrappedComponent) {\n    return function (_Component2) {\n      _inherits(LazyLoadDecorated, _Component2);\n\n      function LazyLoadDecorated() {\n        _classCallCheck(this, LazyLoadDecorated);\n\n        var _this2 = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));\n\n        _this2.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);\n        return _this2;\n      }\n\n      _createClass(LazyLoadDecorated, [{\n        key: 'render',\n        value: function render() {\n          return _react2.default.createElement(\n            LazyLoad,\n            options,\n            _react2.default.createElement(WrappedComponent, this.props)\n          );\n        }\n      }]);\n\n      return LazyLoadDecorated;\n    }(_react.Component);\n  };\n};\n\nexports.lazyload = decorator;\nexports.default = LazyLoad;\nexports.forceCheck = lazyLoadHandler;\nexports.forceVisible = forceVisible;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0;\n  var args = void 0;\n  var context = void 0;\n  var timestamp = void 0;\n  var result = void 0;\n\n  var later = function later() {\n    var last = +new Date() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = null;\n          args = null;\n        }\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = +new Date();\n\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = null;\n      args = null;\n    }\n\n    return result;\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.on = on;\nexports.off = off;\nfunction on(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.addEventListener) {\n    el.addEventListener(eventName, callback, opts);\n  } else if (el.attachEvent) {\n    el.attachEvent(\"on\" + eventName, function (e) {\n      callback.call(el, e || window.event);\n    });\n  }\n}\n\nfunction off(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.removeEventListener) {\n    el.removeEventListener(eventName, callback, opts);\n  } else if (el.detachEvent) {\n    el.detachEvent(\"on\" + eventName, callback);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * @fileOverview Find scroll parent\n */\n\nexports.default = function (node) {\n  if (!(node instanceof HTMLElement)) {\n    return document.documentElement;\n  }\n\n  var excludeStaticParent = node.style.position === 'absolute';\n  var overflowRegex = /(scroll|auto|overlay)/;\n  var parent = node;\n\n  while (parent) {\n    if (!parent.parentNode) {\n      return node.ownerDocument || document.documentElement;\n    }\n\n    var style = window.getComputedStyle(parent);\n    var position = style.position;\n    var overflow = style.overflow;\n    var overflowX = style['overflow-x'];\n    var overflowY = style['overflow-y'];\n\n    if (position === 'static' && excludeStaticParent) {\n      parent = parent.parentNode;\n      continue;\n    }\n\n    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {\n      return parent;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return node.ownerDocument || node.documentElement || document.documentElement;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throttle;\n/*eslint-disable */\nfunction throttle(fn, threshhold, scope) {\n  threshhold || (threshhold = 250);\n  var last, deferTimer;\n  return function () {\n    var context = scope || this;\n\n    var now = +new Date(),\n        args = arguments;\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"names":["CUSTOM_ICONS","forwardRef","name","className","props","ref","cln","src","shared","appId","process","url","senhub","development","staging","production","devnet","node","spltAddress","splataAddress","senAddress","farmingAddress","farming","Farming","this","senOwner","testnet","mainnet","manifest","env","sol","net","DEFAULT_CACHE_CONFIG","ttl","DEFAULT_SINGLE_FLIGHT_CONFIG","limit","calls","time","cache","RequestQueue","constructor","key","resolveQueue","rejectQueue","add","resolve","reject","push","resolves","data","length","shift","rejects","error","SingleFlightCache","value","configs","mapCache","set","setTimeout","delete","get","Map","DataLoader","instanceKey","JSON","stringify","mapInstance","has","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","Object","assign","cacheData","Promise","isFetch","request","fetch","validateLimit","addRequestQueue","createTimeLogs","then","response","catch","finally","fetchRequestQueue","clearInterval","setInterval","now","Date","getTime","shortenAddress","address","num","delimiter","substring","explorer","addressOrTxId","account","numeric","numbro","fetchCGK","async","ticket","utils","DEFAULT_DATA","icon","price","priceChange","rank","symbol","totalVolume","mintAddress","cgkData","setCgkData","useState","tokenProvider","useMint","fetchCgkData","useCallback","token","findByAddress","extensions","coingeckoId","useEffect","pools","usePool","tokenInfo","setTokenInfo","fetchTokenInfo","poolData","values","find","mint_lpt","undefined","mint_a","mint_b","tokenA","tokenB","size","isReserve","tokens","useTokenProvider","convertToken","useMemo","cloneToken","parse","reverse","Avatar","style","display","whiteSpace","map","i","logoURI","backgroundColor","border","separator","isReverse","symbols","shortenAddr","substr","join","ui","width","useUI","farms","useSelector","state","senCgk","useMintCgk","desktop","xsSpan","rowSpacing","spaceSize","spaceDirection","iconName","positiveFarms","count","addr","total_shares","Card","bordered","Row","gutter","Col","span","Typography","level","color","Space","direction","Divider","type","height","align","format","Step","title","description","checked","onChange","Checkbox","Description","setFarmCreatingStep","stepOne","setStepOne","stepTwo","setStepTwo","stepThree","setStepThree","disabled","justify","e","target","Button","onClick","timeoutId","max","onValue","onBlur","setError","cursor","setCursor","innerRef","useRef","onAmount","val","onError","er","clearTimeout","test","parseFloat","toString","current","setSelectionRange","Tooltip","visible","Input","Number","selectionStart","notifySuccess","content","txId","window","notify","open","notifyError","message","onClose","setVisibleInputTokenModal","setValue","duration","setDuration","loading","setLoading","wallet","walletAddress","useWallet","bodyStyle","padding","marginLeft","fontSize","placeholder","prefix","sentre","reward","period","BigInt","initializeFarm","block","accountAddress","accounts","mint","useAccount","wrap","flex","href","stopPropagation","keyword","setKeyword","onHideInputTokenModal","searchedResult","accountAddresses","onSearch","setSearchedResult","keys","mintAddresses","searchedAccountAddresses","filter","includes","useMintSelection","overflow","setVisible","stepNewFarm","setStepNewFarm","setMintAddress","visibleInputTokenModal","Modal","onCancel","footer","closeIcon","label","tooltip","shape","useDebt","farmAddress","debtAddress","setDebtAddress","debtData","debts","fetchDebtAddress","debtAddr","deriveDebtAddress","useAccountStake","farmData","accountStake","setAccountStake","findAccountStake","mint_stake","splt","accountAddr","deriveAssociatedAddress","newAccountData","isEqual","debt","farm","shares","compensation","delay","global","Math","floor","genesis_timestamp","precision","newDebt","yieldFarm","FARMING_ERRORS","prototype","toJSON","bigintSerializationMiddleware","serializableCheck","isSerializable","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","NAME","getFarms","createAsyncThunk","_","getState","connection","getProgramAccounts","farmingProgramId","filters","dataSize","memcmp","bytes","offset","bulk","forEach","pubkey","buf","toBase58","parseFarmData","getFarm","Error","getFarmData","upsetFarm","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","getDebts","owner","parseDebtData","getDebt","getDebtData","upsetDebt","deleteDebt","setSearch","search","configureStore","middleware","getDefaultMiddleware","devTools","reducer","main","HarvestValidator","store","getAddress","calculateReward","treasury_reward","treasury_stake","amount","rewardBalance","getAccountData","checkSeedBalance","setAmount","disable","setDisable","isLoading","setIsLoading","stakedValue","boxShadow","suffix","marginRight","ammount","senWallet","harvestValidator","validate","unstake","available","senWalletAddr","initializeAccounts","initializeAccount","stake","decimals","setDecimals","getMint","fetchTokenDecimals","balance","setBalance","mint_reward","decimal","useMintDecimals","srcAddress","borderRadius","margin","seed","dstAddress","unseed","freeze","thaw","closeFarm","ExtraTypography","visibleTooltip","setVisibleTooltip","budget","setBudget","useBudget","console","log","mintFarmAddress","farmDecimal","farmPeriod","farmReward","Fragment","destroyOnClose","centered","lineHeight","fontWeight","text","ms","Tabs","tab","useReward","setReward","calcReward","pendingReward","useMintUsd","getMintUSD","getMintLptUSD","lptAddress","pool","reserve_a","reserve_b","supply","deltaA","deltaB","Swap","getTotalValue","useFarmLiquidity","liquidity","setLiquidity","calcLiquidity","totalValue","useFarmRoi","roi","setRoi","rewardPerDay","totalReward","apr","farmPool","setFarmPool","findPoolData","mintStake","poolAddress","newPoolData","useFarmPool","locationSearch","useLocation","history","useHistory","activeKey","setActiveKey","isOwner","query","URLSearchParams","farmSelected","amountLptShared","position","zIndex","xs","md","Collapse","header","showArrow","order","background","harvest","useSearchFarm","farmFilter","setFarmFilter","newFarmFilter","check","mintStakeInfo","toLowerCase","farmList","setFarmList","getFarmList","newFarmList","sort","a","b","useFarmList","listFarmAddress","filterFarm","sortedFarm","fistFarm","secondFarm","isStakedFarms","setIsStakedFarms","getStakedFarms","filterFarms","tabActive","setTabActive","farmOwner","forceCheck","tabBarExtraContent","watchId","prevLamports","children","dispatch","useDispatch","lamports","fetchData","unwrap","watchData","warn","watch","re","unwatch","Spin","spinning","paddingBottom","lg","isHidden","handleDetail","idx","isOpenSearch","setIsOpenSearch","Page","UIProvider","antd","PoolProvider","MintProvider","AccountProvider","WalletProvider","Provider","model","widgetConfig","Widget","storage","getNetwork","KEY","driver","localStorage","convert","getItem","setItem","clear","exports","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_react","require","_react2","_interopRequireDefault","_propTypes2","_event","_scrollParent2","_debounce2","_throttle2","__esModule","default","_classCallCheck","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","defaultBoundingClientRect","LISTEN_FLAG","listeners","pending","passiveEventSupported","opts","addEventListener","passiveEvent","capture","passive","checkVisible","component","HTMLElement","parent","ownerDocument","document","documentElement","parentTop","parentLeft","parentHeight","parentWidth","_parent$getBoundingCl","getBoundingClientRect","top","left","windowInnerHeight","innerHeight","clientHeight","windowInnerWidth","innerWidth","clientWidth","intersectionTop","intersectionLeft","intersectionHeight","min","intersectionWidth","_node$getBoundingClie","offsetTop","offsetLeft","offsets","checkOverflowVisible","offsetWidth","offsetHeight","getClientRects","elementHeight","_node$getBoundingClie2","checkNormalVisible","once","forceUpdate","unmountIfInvisible","purgePending","index","indexOf","splice","lazyLoadHandler","listener","delayType","finalLazyLoadHandler","LazyLoad","_Component","_this","setRef","bind","scrollport","scrollContainer","querySelector","needResetFinalLazyLoadHandler","debounce","off","throttle","getAttribute","listenerCount","setAttribute","_props","scroll","resize","on","removeEventListener","removeAttribute","element","_props2","classNamePrefix","createElement","Component","propTypes","string","bool","oneOfType","number","arrayOf","object","defaultProps","getDisplayName","WrappedComponent","displayName","func","wait","immediate","timeout","args","context","timestamp","result","later","last","apply","arguments","callNow","el","eventName","attachEvent","event","detachEvent","excludeStaticParent","overflowRegex","parentNode","getComputedStyle","overflowX","overflowY","fn","threshhold","scope","deferTimer","deselectCurrent","clipboardToIE11Formatting","module","options","debug","reselectPrevious","range","selection","mark","success","createRange","getSelection","textContent","all","clip","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","preventDefault","clipboardData","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","err","copyKey","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","hasElementType","Element","hasMap","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","it","entries","next","done","RegExp","source","flags","valueOf","hasOwnProperty","$$typeof","match","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","focus"],"sourceRoot":""}