{"version":3,"file":"static/js/438.38354746.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/configs/manifest.config.ts","app/configs/sol.config.ts","app/configs/index.ts","shared/dataloader/constant.ts","shared/dataloader/request.ts","shared/dataloader/cache.ts","shared/dataloader/index.ts","shared/util.ts","app/shared/hooks/useMintCgk.ts","app/shared/hooks/useTokenProvider.ts","app/shared/components/mint/mintAvatar.tsx","app/shared/components/mint/mintSymbol.tsx","app/hooks/useMintUsd.ts","app/hooks/listFarm/useSentreFarms.ts","app/page/banner/index.tsx","app/hooks/listFarm/useSentreFarmsTvl.ts","shared/antd/numericInput.tsx","app/helper/index.ts","shared/hooks/useMintDecimals.ts","app/page/farmingDetails/newFarm/confirmAddFarm.tsx","app/page/farmingDetails/newFarm/accountCard.tsx","app/page/farmingDetails/newFarm/searchAccount.tsx","app/page/farmingDetails/newFarm/mintSelection.tsx","app/hooks/useMintSelection.ts","app/page/farmingDetails/newFarm/index.tsx","app/page/farmingDetails/content.tsx","app/hooks/useDebt.ts","app/hooks/useAccountStake.ts","app/helper/calculateReward.ts","app/constants/errors.ts","shared/devTools.ts","app/model/farms.controller.ts","app/model/debts.controller.ts","app/model/main.controller.ts","app/model/index.ts","app/helper/validateHarvest.tsx","app/page/farmingDetails/stakeAndUnstake/unstake.tsx","app/page/farmingDetails/stakeAndUnstake/stake.tsx","app/page/farmingDetails/farmInfo/title.tsx","app/page/farmingDetails/farmInfo/address.tsx","app/hooks/useBudget.ts","app/page/farmingDetails/farmInfo/index.tsx","app/page/farmingDetails/management/seed.tsx","app/page/farmingDetails/management/unseed.tsx","app/constants/farms.ts","app/page/farmingDetails/management/freezeOrThaw.tsx","app/page/farmingDetails/management/close.tsx","app/page/farmingDetails/management/index.tsx","app/page/farmingDetails/stakeAndUnstake/exit.tsx","app/hooks/useReward.ts","app/hooks/useFarmLiquidity.ts","app/hooks/useFarmRoi.ts","app/page/farmingDetails/ItemFarming.tsx","app/hooks/useCorrespondingPool.ts","app/hooks/useSearchFarm.ts","app/page/farmingDetails/allFarms.tsx","app/page/farmingDetails/sentreFarms.tsx","app/hooks/listFarm/useStakedFarms.ts","app/page/farmingDetails/stakedFarm.tsx","app/hooks/listFarm/useYourFarms.ts","app/page/farmingDetails/yourFamrs.tsx","app/page/farmingDetails/index.tsx","app/components/watcher/debtWatcher.tsx","app/components/watcher/farmWatcher.tsx","app/components/watcher/index.tsx","app/page/index.tsx","app/widget/searchBar.tsx","app/widget/farmCard.tsx","app/widget/stakedFarms/index.tsx","app/widget/yourFamrs/index.tsx","app/widget/index.tsx","app/bootstrap.app.tsx","shared/runtime.ts","shared/storage.ts","../node_modules/@senswap/react-lazyload/lib/index.js","../node_modules/@senswap/react-lazyload/lib/utils/debounce.js","../node_modules/@senswap/react-lazyload/lib/utils/event.js","../node_modules/@senswap/react-lazyload/lib/utils/scrollParent.js","../node_modules/@senswap/react-lazyload/lib/utils/throttle.js","../node_modules/react-fast-compare/index.js"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n  senhub: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n  senhub: process.env.REACT_APP_SENHUB,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from 'shared/runtime'\nimport { Farming } from '@senswap/sen-js'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  spltAddress: string\n  splataAddress: string\n  farmingAddress: string\n  senAddress: string\n  farming: Farming\n  senOwners: string[]\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: 'https://api.devnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    farmingAddress: 'CpEsjrLhBkcuApn5uEE2tZCwxyCQKmT6S4YgT9zuLW2J',\n    get farming() {\n      return new Farming(\n        this.farmingAddress,\n        this.spltAddress,\n        this.splataAddress,\n        this.node,\n      )\n    },\n    senOwners: ['GJLqpmDxxrV9xruee2vFvEoTho7VVQHRtuHH8nfoAE54'],\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: 'https://api.testnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    farmingAddress: 'CpEsjrLhBkcuApn5uEE2tZCwxyCQKmT6S4YgT9zuLW2J',\n    get farming() {\n      return new Farming(\n        this.farmingAddress,\n        this.spltAddress,\n        this.splataAddress,\n        this.node,\n      )\n    },\n    senOwners: ['GJLqpmDxxrV9xruee2vFvEoTho7VVQHRtuHH8nfoAE54'],\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: 'https://api.mainnet-beta.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    farmingAddress: 'DTvdh6Q13SfYxMoWyibBUmQAUqd2pDPSpjdku5a9NLSF',\n    get farming() {\n      return new Farming(\n        this.farmingAddress,\n        this.spltAddress,\n        this.splataAddress,\n        this.node,\n      )\n    },\n    senOwners: ['Cs6jYywHTAgdvjxn8xG4VkJJH8DXXy7zbtatzMUWoCMG'],\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Open newtab\n * @param href - string\n * @returns\n */\nexport const openNewTab = (href: string) => {\n  return window.open(href, '_blank')\n}\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useMint } from 'senhub/providers'\nimport { fetchCGK } from 'shared/util'\n\nconst DEFAULT_DATA = {\n  address: '',\n  icon: '',\n  name: 'TOKEN',\n  price: 0,\n  priceChange: 0,\n  rank: 0,\n  symbol: 'TOKEN',\n  totalVolume: 0,\n}\n\nconst useMintCgk = (mintAddress: string): CgkData => {\n  const [cgkData, setCgkData] = useState<CgkData>(DEFAULT_DATA)\n  const { tokenProvider } = useMint()\n\n  const fetchCgkData = useCallback(async () => {\n    try {\n      const token = await tokenProvider.findByAddress(mintAddress)\n      const ticket = token?.extensions?.coingeckoId\n      const cgkData = await fetchCGK(ticket)\n      return setCgkData(cgkData)\n    } catch (error) {\n      return setCgkData(DEFAULT_DATA)\n    }\n  }, [mintAddress, tokenProvider])\n\n  useEffect(() => {\n    fetchCgkData()\n  }, [fetchCgkData])\n\n  return cgkData\n}\nexport default useMintCgk\n","import { useCallback, useEffect, useState } from 'react'\nimport { TokenInfo } from '@solana/spl-token-registry'\n\nimport { useMint, usePool } from 'senhub/providers'\n\nconst useTokenProvider = (mintAddress: string) => {\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n  const [tokenInfo, setTokenInfo] = useState<(TokenInfo | undefined)[]>([])\n\n  const fetchTokenInfo = useCallback(async () => {\n    // Normal mint\n    const token = await tokenProvider.findByAddress(mintAddress)\n    if (token) return setTokenInfo([token])\n    // LP mint\n    const poolData = Object.values(pools).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (!poolData) return setTokenInfo([undefined])\n    const { mint_a, mint_b } = poolData\n    const tokenA = await tokenProvider.findByAddress(mint_a)\n    const tokenB = await tokenProvider.findByAddress(mint_b)\n    return setTokenInfo([tokenA, tokenB])\n  }, [mintAddress, pools, tokenProvider])\n\n  useEffect(() => {\n    fetchTokenInfo()\n  }, [fetchTokenInfo])\n\n  return tokenInfo\n}\n\nexport default useTokenProvider\n","import { ReactNode, useMemo } from 'react'\nimport { TokenInfo } from '@solana/spl-token-registry'\n\nimport { Avatar } from 'antd'\n\nimport useTokenProvider from '../../hooks/useTokenProvider'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  isReserve = false,\n}: {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  isReserve?: boolean\n}) => {\n  const tokens = useTokenProvider(mintAddress)\n  const convertToken = useMemo(() => {\n    const cloneToken: TokenInfo[] = JSON.parse(JSON.stringify(tokens))\n    if (!isReserve) return cloneToken\n    return cloneToken.reverse()\n  }, [isReserve, tokens])\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }}>\n      {convertToken.map((token, i) => (\n        <Avatar\n          key={token?.address || i}\n          src={token?.logoURI}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useMemo } from 'react'\n\nimport useTokenProvider from 'app/shared/hooks/useTokenProvider'\n\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  isReverse = false,\n}: {\n  mintAddress: string\n  separator?: string\n  isReverse?: boolean\n}) => {\n  const tokens = useTokenProvider(mintAddress)\n\n  const symbols = useMemo(() => {\n    const symbols = tokens.map((token) => {\n      const shortenAddr = `${mintAddress?.substr(0, 3)}...`\n      if (!token) return shortenAddr\n      return token.symbol\n    })\n    if (isReverse) symbols.reverse()\n\n    return symbols.join(separator)\n  }, [isReverse, mintAddress, separator, tokens])\n  return <span>{symbols}</span>\n}\n\nexport default MintSymbol\n","import { useCallback } from 'react'\nimport { Swap, utils } from '@senswap/sen-js'\n\nimport { useMint, usePool } from 'senhub/providers'\nimport { fetchCGK } from 'shared/util'\n\nexport const useMintUsd = () => {\n  const { tokenProvider, getMint } = useMint()\n  const { pools } = usePool()\n\n  const getTokenUsd = useCallback(\n    async (mintAddress: string, amount: bigint) => {\n      try {\n        const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n        const ticket = tokenInfo?.extensions?.coingeckoId\n        if (!ticket) throw new Error('Cant not find coingeckoId')\n\n        const cgkData = await fetchCGK(ticket)\n        return (\n          Number(utils.undecimalize(amount, tokenInfo.decimals)) * cgkData.price\n        )\n      } catch (error) {\n        return 0\n      }\n    },\n    [tokenProvider],\n  )\n\n  const getTotalValue = useCallback(\n    async ({\n      mintAddress,\n      amount,\n    }: {\n      mintAddress: string\n      amount: bigint\n    }) => {\n      const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n      if (tokenInfo) return getTokenUsd(mintAddress, amount)\n\n      // Get Mint Lpt total value\n      const poolData = Object.values(pools).find(\n        (pool) => pool.mint_lpt === mintAddress,\n      )\n      if (!poolData) return 0\n      const { reserve_a, reserve_b, mint_a, mint_b } = poolData\n      if (reserve_a * reserve_b === BigInt(0)) return 0\n      const {\n        [mintAddress]: { supply },\n      } = await getMint({ address: mintAddress })\n      const { deltaA, deltaB } = Swap.oracle.withdraw(\n        amount,\n        supply,\n        reserve_a,\n        reserve_b,\n      )\n      const balanceA: number = await getTotalValue({\n        mintAddress: mint_a,\n        amount: deltaA,\n      })\n      const balanceB: number = await getTotalValue({\n        mintAddress: mint_b,\n        amount: deltaB,\n      })\n      return balanceA + balanceB\n    },\n    [getMint, getTokenUsd, tokenProvider, pools],\n  )\n  return { getTotalValue }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\nimport { FarmState } from 'app/model/farms.controller'\n\nconst {\n  sol: { senOwners: senOwner },\n} = configs\n\nexport const useSentreFarms = () => {\n  const farms = useSelector((state: AppState) => state.farms)\n  const [sentreFarms, setSentreFarms] = useState<FarmState>({})\n\n  const checkSentreFarm = useCallback(\n    (farmAddress: string) => {\n      const farm = farms[farmAddress]\n      return senOwner.includes(farm.owner)\n    },\n    [farms],\n  )\n\n  const filterSentreFarms = useCallback(\n    (farms: FarmState) => {\n      const newSentreFarm: FarmState = {}\n      for (const addr in farms) {\n        if (!checkSentreFarm(addr)) continue\n        newSentreFarm[addr] = farms[addr]\n      }\n      setSentreFarms(newSentreFarm)\n    },\n    [checkSentreFarm],\n  )\n\n  useEffect(() => {\n    filterSentreFarms(farms)\n  }, [farms, filterSentreFarms])\n\n  return { sentreFarms, filterSentreFarms, checkSentreFarm }\n}\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Card, Col, Divider, Row, Space, Typography } from 'antd'\nimport { useUI } from 'senhub/providers'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport useMintCgk from 'app/shared/hooks/useMintCgk'\nimport { numeric } from 'shared/util'\nimport { MintSymbol } from 'app/shared/components/mint'\nimport { AppState } from 'app/model'\nimport { useSentreFarmsTvl } from 'app/hooks/listFarm/useSentreFarmsTvl'\n\nconst {\n  sol: { senAddress },\n} = configs\n\nconst Banner = () => {\n  const {\n    ui: { width },\n  } = useUI()\n  const farms = useSelector((state: AppState) => state.farms)\n  const senCgk = useMintCgk(senAddress)\n  const tvl = useSentreFarmsTvl()\n\n  const desktop = width > 768\n  const xsSpan = !desktop ? 24 : undefined\n  const rowSpacing = desktop ? 32 : 16\n  const spaceSize = desktop ? 8 : 4\n  const spaceDirection = desktop ? 'vertical' : 'horizontal'\n  const iconName = desktop ? 'pause-outline' : 'reorder-two-outline'\n\n  const positiveFarms = useMemo(() => {\n    let count = 0\n    for (const addr in farms) {\n      if (farms[addr].total_shares) {\n        count++\n      }\n    }\n    return count\n  }, [farms])\n\n  return (\n    <Card\n      bordered={false}\n      className={`${desktop ? '' : 'banner-farming-mobile '}banner-farming`}\n    >\n      <Row gutter={[12, rowSpacing]}>\n        <Col span={24}>\n          <Typography.Title level={4} style={{ color: '#212433' }}>\n            Sen Farming\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[12, 12]}>\n            {/* coming soon */}\n            <Col span={xsSpan}>\n              <Space direction=\"vertical\" size={spaceSize}>\n                <Typography.Text style={{ color: '#212433' }}>\n                  Total TVL Sen Farms\n                </Typography.Text>\n                <Typography.Title level={2} style={{ color: '#F9575E' }}>\n                  {numeric(tvl).format('0,0.[00]$')}\n                </Typography.Title>\n              </Space>\n            </Col>\n            {desktop && (\n              <Col>\n                <Divider type=\"vertical\" style={{ height: '100%' }} />\n              </Col>\n            )}\n            <Col span={xsSpan}>\n              <Space direction=\"vertical\" size={spaceSize}>\n                <Typography.Text style={{ color: '#212433' }}>\n                  Positive Farms\n                </Typography.Text>\n                <Typography.Title level={2} style={{ color: '#F9575E' }}>\n                  {positiveFarms}\n                </Typography.Title>\n              </Space>\n            </Col>\n            {desktop && (\n              <Col>\n                <Divider type=\"vertical\" style={{ height: '100%' }} />\n              </Col>\n            )}\n            <Col span={xsSpan}>\n              <Space direction={spaceDirection} size={0} align=\"center\">\n                <Typography.Title level={4} style={{ color: '#212433' }}>\n                  1 <MintSymbol mintAddress={senAddress} />\n                </Typography.Title>\n                <IonIcon style={{ color: '#212433' }} name={iconName} />\n                <Typography.Title level={4} style={{ color: '#F9575E' }}>\n                  {numeric(senCgk.price).format('0,0.[0000]$')}\n                </Typography.Title>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Banner\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useMintUsd } from './../useMintUsd'\nimport { useSentreFarms } from './useSentreFarms'\n\nexport const useSentreFarmsTvl = () => {\n  const [tvl, setTvl] = useState(0)\n  const { sentreFarms } = useSentreFarms()\n  const { getTotalValue } = useMintUsd()\n\n  const calcTvl = useCallback(async () => {\n    let farmsTvl = 0\n    await Promise.all(\n      Object.values(sentreFarms).map(async (farm) => {\n        const { total_shares, mint_stake } = farm\n        const farmTvl = await getTotalValue({\n          mintAddress: mint_stake,\n          amount: total_shares,\n        })\n        farmsTvl += farmTvl\n      }),\n    )\n    setTvl(farmsTvl)\n  }, [sentreFarms, getTotalValue])\n\n  useEffect(() => {\n    calcTvl()\n  }, [calcTvl])\n\n  return tvl\n}\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { explorer } from 'shared/util'\n\nexport const notifySuccess = (content: string, txId: string) => {\n  return window.notify({\n    type: 'success',\n    description: `${content} successfully. Click to view details.`,\n    onClick: () => window.open(explorer(txId), '_blank'),\n  })\n}\n\nexport const notifyError = (er: any) => {\n  return window.notify({\n    type: 'error',\n    description: er.message,\n  })\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from 'senhub/providers'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for work.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const { getDecimals } = useMint()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = await getDecimals(mintAddress)\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { useState } from 'react'\nimport { account, utils } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { useWallet } from 'senhub/providers'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst PERIODS: Record<string, bigint> = {\n  Hour: BigInt(60 * 60),\n  Day: BigInt(24 * 60 * 60),\n  Month: BigInt(30 * 24 * 60 * 60),\n  Year: BigInt(365 * 24 * 60 * 60),\n}\n\nconst ConfirmAddFarm = ({\n  mintAddress,\n  onClose = () => {},\n  setVisibleInputTokenModal = () => {},\n}: {\n  mintAddress: string\n  onClose?: () => void\n  setVisibleInputTokenModal?: (visibled: boolean) => void\n}) => {\n  const {\n    sol: { senAddress, farming },\n  } = configs\n\n  const [value, setValue] = useState('')\n  const [duration, setDuration] = useState('')\n  const [period, setPeriod] = useState('Hour')\n  const [loading, setLoading] = useState(false)\n  const rewardDecimal = useMintDecimals(senAddress)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const newFarm = async () => {\n    if (!account.isAddress(mintAddress))\n      return notifyError({\n        message: `Invalid mint address: ${mintAddress}`,\n      })\n    setLoading(true)\n    const { wallet } = window.sentre\n    if (!wallet || !period || !duration || !rewardDecimal) return\n    const reward = utils.decimalize(value, rewardDecimal)\n    const calculatePeriod = Number(PERIODS?.[period]) * Number(duration)\n    try {\n      const { txId } = await farming.initializeFarm(\n        reward,\n        BigInt(calculatePeriod),\n        walletAddress,\n        mintAddress,\n        senAddress,\n        wallet,\n      )\n      onClose()\n      return notifySuccess('Create a new farm', txId)\n    } catch (er: any) {\n      return notifyError({ message: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }\n\n  const onPeriod = () => {\n    const keys = Object.keys(PERIODS)\n    const prevIndex = keys.findIndex((key) => key === period)\n    const nextIndex = (prevIndex + 1) % keys.length\n    return setPeriod(keys[nextIndex])\n  }\n\n  const disabled = !value || !duration || !account.isAddress(mintAddress)\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>New farm</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Card bodyStyle={{ padding: 16 }} bordered={false}>\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Space direction=\"vertical\">\n                <Typography.Text type=\"secondary\">Input</Typography.Text>\n                <Space\n                  size={12}\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => setVisibleInputTokenModal(true)}\n                >\n                  <MintAvatar mintAddress={mintAddress} />\n                  {account.isAddress(mintAddress) ? (\n                    <MintSymbol mintAddress={mintAddress} />\n                  ) : (\n                    <Typography.Text type=\"secondary\">\n                      Select token type\n                    </Typography.Text>\n                  )}\n                </Space>\n              </Space>\n            </Col>\n            <Col span={12}>\n              <Space direction=\"vertical\">\n                <Typography.Text type=\"secondary\">Output</Typography.Text>\n                <Space size={12} style={{ cursor: 'pointer' }}>\n                  <MintAvatar mintAddress={senAddress} />\n                  <MintSymbol mintAddress={senAddress} />\n                </Space>\n              </Space>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[0, 0]}>\n          <Col span={24}>\n            <Typography.Text\n              type=\"secondary\"\n              style={{ marginLeft: 12, fontSize: 12 }}\n            >\n              Reward\n            </Typography.Text>\n          </Col>\n          <Col span={24}>\n            <NumericInput\n              size=\"large\"\n              placeholder=\"0\"\n              value={value}\n              onValue={setValue}\n              prefix={<Typography.Text>SNTR</Typography.Text>}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[0, 0]}>\n          <Col span={24}>\n            <Typography.Text style={{ marginLeft: 12, fontSize: 12 }}>\n              Number of {period}\n            </Typography.Text>\n          </Col>\n          <Col span={24}>\n            <NumericInput\n              size=\"large\"\n              placeholder=\"0\"\n              value={duration}\n              onValue={setDuration}\n              suffix={\n                <Button type=\"text\" size=\"small\" onClick={onPeriod}>\n                  {period}\n                </Button>\n              }\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          onClick={newFarm}\n          disabled={disabled}\n          block\n          loading={loading}\n        >\n          Confirm\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConfirmAddFarm\n","import { useMemo } from 'react'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar } from 'app/shared/components/mint'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { useAccount } from 'senhub/providers'\nimport { explorer, openNewTab } from 'shared/util'\n\nconst AccountCard = ({\n  accountAddress,\n  onClick = () => {},\n}: {\n  accountAddress: string\n  onClick: (mintAddress: string) => void\n}) => {\n  const {\n    accounts: {\n      [accountAddress]: { mint: mintAddress },\n    },\n  } = useAccount()\n\n  const shortenAddress = useMemo(() => {\n    const size = 4\n    const prefix = accountAddress.substring(0, size)\n    const suffix = accountAddress.substring(\n      accountAddress.length - size,\n      accountAddress.length,\n    )\n    return prefix + ' ... ' + suffix\n  }, [accountAddress])\n\n  return (\n    <Card\n      onClick={() => onClick(mintAddress)}\n      className=\"account-card\"\n      bodyStyle={{ padding: 12, cursor: 'pointer' }}\n      bordered={false}\n    >\n      <Row gutter={[8, 8]} wrap={false} align=\"middle\">\n        <Col flex=\"auto\">\n          <Space direction=\"vertical\" size={0}>\n            <MintAvatar mintAddress={mintAddress} />\n            <Space>\n              <Space size={4}>\n                <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                  Account Address:\n                </Typography.Text>\n                <Typography.Text>{shortenAddress}</Typography.Text>\n              </Space>\n              <Button\n                type=\"text\"\n                size=\"small\"\n                onClick={(e: React.MouseEvent) => {\n                  e.stopPropagation()\n                  openNewTab(explorer(accountAddress))\n                }}\n                icon={<IonIcon name=\"open-outline\" />}\n              />\n            </Space>\n          </Space>\n        </Col>\n        <Col>\n          <Button type=\"text\" icon={<IonIcon name=\"arrow-forward-outline\" />} />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default AccountCard\n","import { useEffect, useState } from 'react'\n\nimport { Button, Card, Input } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst SearchAccount = ({\n  onChange,\n}: {\n  onChange: (mintAddresses: string[] | undefined) => void\n}) => {\n  const [keyword, setKeyword] = useState('')\n\n  useEffect(() => {\n    if (!keyword) return\n    const search = [keyword]\n    return onChange(search)\n  }, [keyword, onChange])\n\n  return (\n    <Card className=\"account-card\" bodyStyle={{ padding: 6 }} bordered={false}>\n      <Input\n        placeholder=\"Search\"\n        value={keyword}\n        size=\"small\"\n        bordered={false}\n        prefix={\n          <Button\n            type=\"text\"\n            style={{ marginLeft: -7 }}\n            size=\"small\"\n            onClick={keyword ? () => setKeyword('') : () => {}}\n            icon={\n              <IonIcon name={keyword ? 'close-outline' : 'search-outline'} />\n            }\n          />\n        }\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setKeyword(e.target.value)\n        }\n      />\n    </Card>\n  )\n}\n\nexport default SearchAccount\n","import { Col, Row, Typography } from 'antd'\nimport LazyLoad from '@senswap/react-lazyload'\nimport AccountCard from './accountCard'\nimport SearchAccount from './searchAccount'\n\nimport { useMintSelection } from 'app/hooks/useMintSelection'\n\nconst MintSelection = ({\n  onChange,\n  onHideInputTokenModal = () => {},\n}: {\n  onChange: (value: string) => void\n  onHideInputTokenModal?: (visible: boolean) => void\n}) => {\n  const { searchedResult, accountAddresses, onSearch } = useMintSelection()\n\n  const onClick = (mintAddress: string) => {\n    onHideInputTokenModal(false)\n    return onChange(mintAddress)\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>Select token type</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <SearchAccount onChange={onSearch} />\n      </Col>\n      <Col span={24}>\n        <Row gutter={[16, 16]} style={{ height: 300, overflow: 'auto' }}>\n          {(searchedResult || accountAddresses).map((accountAddress, i) => (\n            <Col span={24} key={accountAddress + i}>\n              <LazyLoad height={72} overflow>\n                <AccountCard\n                  accountAddress={accountAddress}\n                  onClick={onClick}\n                />\n              </LazyLoad>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MintSelection\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { useAccount } from 'senhub/providers'\n\nexport const useMintSelection = () => {\n  const [searchedResult, setSearchedResult] = useState<string[]>()\n  const { accounts } = useAccount()\n\n  const accountAddresses = useMemo(() => Object.keys(accounts), [accounts])\n  const onSearch = useCallback(\n    (mintAddresses: string[] | undefined) => {\n      if (!mintAddresses) return setSearchedResult(undefined)\n      let searchedAccountAddresses = accountAddresses.filter(\n        (accountAddress) => {\n          const { mint } = accounts[accountAddress]\n          return mintAddresses.includes(mint)\n        },\n      )\n      return setSearchedResult(searchedAccountAddresses)\n    },\n    [accountAddresses, accounts],\n  )\n\n  return {\n    searchedResult,\n    accountAddresses,\n    onSearch,\n  }\n}\n","import { useState } from 'react'\n\nimport { Button, Col, Modal, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n// import StepAddFarm from './stepAddFarm'\nimport ConfirmAddFarm from './confirmAddFarm'\nimport MintSelection from './mintSelection'\n\n// import { NewFarmStep } from 'app/constants/farms'\nimport { SizeType } from 'antd/lib/config-provider/SizeContext'\n\nconst NewFarm = ({ size = 'small' }: { size?: SizeType }) => {\n  const [visible, setVisible] = useState(false)\n  // const [stepNewFarm, setStepNewFarm] = useState<NewFarmStep>(\n  //   NewFarmStep.POLICY_AGREEMENT,\n  // )\n  const [mintAddress, setMintAddress] = useState('')\n  const [visibleInputTokenModal, setVisibleInputTokenModal] = useState(false)\n\n  const onClose = () => {\n    setVisible(false)\n    // setStepNewFarm('POLICY_AGREEMENT')\n    setMintAddress('')\n  }\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Button\n          style={{ background: 'transparent' }}\n          onClick={() => setVisible(true)}\n          size={size}\n        >\n          New farm\n        </Button>\n      </Col>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={false}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        {/* {stepNewFarm === 'POLICY_AGREEMENT' && (\n          <StepAddFarm setFarmCreatingStep={setStepNewFarm} />\n        )}\n        {stepNewFarm === 'FARM_CREATING_CONFIRMATION' && (\n          <ConfirmAddFarm\n            mintAddress={mintAddress}\n            onClose={onClose}\n            setVisibleInputTokenModal={setVisibleInputTokenModal}\n          />\n        )} */}\n        <ConfirmAddFarm\n          mintAddress={mintAddress}\n          onClose={onClose}\n          setVisibleInputTokenModal={setVisibleInputTokenModal}\n        />\n      </Modal>\n      <Modal\n        visible={visibleInputTokenModal}\n        onCancel={() => setVisibleInputTokenModal(false)}\n        footer={false}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        <MintSelection\n          onChange={(value: string) => {\n            setMintAddress(value)\n          }}\n          onHideInputTokenModal={setVisibleInputTokenModal}\n        />\n      </Modal>\n    </Row>\n  )\n}\n\nexport default NewFarm\n","import { Button, Space, Tooltip, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport { ReactNode } from 'react'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst Content = ({\n  label = '',\n  tooltip,\n  value = '',\n  mintAddress,\n}: {\n  label?: string\n  tooltip?: ReactNode\n  value?: string\n  mintAddress?: string\n}) => {\n  return (\n    <Space direction=\"vertical\" size={4}>\n      <Space size={4}>\n        <Space size={4}>\n          {mintAddress && <MintAvatar mintAddress={mintAddress} />}\n          <Typography.Text type=\"secondary\">{label}</Typography.Text>\n        </Space>\n        {tooltip && (\n          <Tooltip title={tooltip}>\n            <Button\n              type=\"text\"\n              shape=\"circle\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Tooltip>\n        )}\n      </Space>\n      <Space>\n        <Typography.Title level={5}>{value}</Typography.Title>\n        {mintAddress && <MintSymbol mintAddress={mintAddress} />}\n      </Space>\n    </Space>\n  )\n}\n\nexport default Content\n","import { useSelector } from 'react-redux'\nimport { useCallback, useEffect, useState } from 'react'\nimport { account, DebtData } from '@senswap/sen-js'\n\nimport { useWallet } from 'senhub/providers'\n\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\n\nconst {\n  sol: { farming },\n} = configs\n\nexport const useDebt = (\n  farmAddress: string,\n): { address: string; data: DebtData } => {\n  const [debtAddress, setDebtAddress] = useState('')\n  const {\n    debts: { [debtAddress]: debtData },\n  } = useSelector((state: AppState) => state)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const fetchDebtAddress = useCallback(async () => {\n    if (!account.isAddress(farmAddress)) return setDebtAddress('')\n    const debtAddr = await farming.deriveDebtAddress(walletAddress, farmAddress)\n    return setDebtAddress(debtAddr)\n  }, [farmAddress, walletAddress])\n\n  useEffect(() => {\n    fetchDebtAddress()\n  }, [fetchDebtAddress])\n\n  return { address: debtAddress, data: debtData }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport isEqual from 'react-fast-compare'\nimport { AccountData } from '@senswap/sen-js'\n\nimport { useAccount, useWallet } from 'senhub/providers'\n\nimport { AppState } from 'app/model'\n\nexport const useAccountStake = (\n  farmAddress: string,\n): { address: string; data: AccountData } | undefined => {\n  const { accounts } = useAccount()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const [accountStake, setAccountStake] =\n    useState<{ address: string; data: AccountData }>()\n\n  const findAccountStake = useCallback(async () => {\n    const mintStake = farmData?.mint_stake\n    if (!mintStake) return setAccountStake(undefined)\n    const { splt } = window.sentre\n    const accountAddr = await splt.deriveAssociatedAddress(\n      walletAddress,\n      farmData.mint_stake,\n    )\n    const newAccountData = accounts[accountAddr]\n    if (isEqual(newAccountData, accountStake?.data)) return\n    return setAccountStake({ address: accountAddr, data: newAccountData })\n  }, [accountStake?.data, accounts, farmData.mint_stake, walletAddress])\n\n  useEffect(() => {\n    findAccountStake()\n  }, [findAccountStake])\n\n  return accountStake\n}\n","import { FarmData, utils, DebtData } from '@senswap/sen-js'\n\nconst calculateReward = (debt: DebtData, farm: FarmData): number => {\n  if (debt === null || Object.keys(debt).length === 0) return 0\n  if (farm === null || Object.keys(farm).length === 0) return 0\n  if (!farm.total_shares) return 0\n\n  const shares = debt.shares\n  const compensation = farm.compensation\n  const delay =\n    (global.BigInt(Math.floor(Date.now() / 1000)) - farm.genesis_timestamp) /\n    farm.period\n  const precision = global.BigInt(10 ** 18)\n  const rewardsPerShare = (precision * farm.reward) / farm.total_shares\n  const newDebt =\n    ((rewardsPerShare * delay + compensation) * shares) / precision\n  const yieldFarm = utils.undecimalize(newDebt - debt.debt, 9)\n  return Number(yieldFarm)\n}\n\nexport default calculateReward\n","export const FARMING_ERRORS = {\n  HARVEST_NOT_ENOUGH_BALANCE:\n    \"The treasury doesn't have enough balance for the claim.\",\n  WALLET_ADDRESS_INVALID: 'Invalid wallet address.',\n  INVALID_FARM_ADDRESS: 'Invalid farm address.',\n  DEBT_ADDRESS_INVALID: 'Invalid debt address.',\n  GET_DEBT_DATA: 'Cannot fetch data of debts',\n}\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, FarmData } from '@senswap/sen-js'\n\nimport config from '../configs'\n\nconst {\n  sol: { farming, senAddress },\n} = config\n\nexport type FarmState = Record<string, FarmData>\n\nconst NAME = 'farms'\nconst initialState: FarmState = {}\n\n/**\n * Actions\n */\n\nexport const getFarms = createAsyncThunk<FarmState, void, { state: any }>(\n  `${NAME}/getFarms`,\n  async (_, { getState }) => {\n    const { farms } = getState()\n    if (Object.keys(farms).length) return farms\n    // Get all farm\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await farming.connection.getProgramAccounts(farming.farmingProgramId, {\n        filters: [\n          { dataSize: 209 },\n          { memcmp: { bytes: senAddress, offset: 97 } },\n        ],\n      })\n    let bulk: FarmState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = farming.parseFarmData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getFarm = createAsyncThunk<\n  FarmState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getFarm`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid farm address')\n  const {\n    farms: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const raw = await farming.getFarmData(address)\n  return { [address]: raw }\n})\n\nexport const upsetFarm = createAsyncThunk<\n  FarmState,\n  { address: string; data: FarmData },\n  { state: any }\n>(`${NAME}/upsetFarm`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid farm address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteFarm = createAsyncThunk(\n  `${NAME}/deleteFarm`,\n  async ({ farmAddress }: { farmAddress: string }) => {\n    if (!account.isAddress(farmAddress)) throw new Error('Invalid address')\n    return { farmAddress }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getFarms.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getFarm.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetFarm.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteFarm.fulfilled,\n        (state, { payload }) => void delete state[payload.farmAddress],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { PublicKey, AccountInfo } from '@solana/web3.js'\nimport { account, DebtData } from '@senswap/sen-js'\n\nimport config from 'app/configs'\n\nconst {\n  sol: { farming },\n} = config\n\n/**\n * Store constructor\n */\n\nexport type DebtState = Record<string, DebtData>\n\nconst NAME = 'debts'\nconst initialState: DebtState = {}\n\n/**\n * Actions\n */\n\nexport const getDebts = createAsyncThunk(\n  `${NAME}/getDebts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await farming.connection.getProgramAccounts(farming.farmingProgramId, {\n        filters: [{ dataSize: 89 }, { memcmp: { bytes: owner, offset: 32 } }],\n      })\n    let bulk: DebtState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = farming.parseDebtData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getDebt = createAsyncThunk<\n  DebtState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getDebt`, async ({ address }, { getState }) => {\n  const {\n    debts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const debtData = await farming.getDebtData(address)\n  return { [address]: debtData }\n})\n\nexport const upsetDebt = createAsyncThunk<\n  DebtState,\n  { address: string; data: DebtData },\n  { state: any }\n>(`${NAME}/upsetDebt`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteDebt = createAsyncThunk(\n  `${NAME}/deleteDebt`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getDebts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getDebt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetDebt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteDebt.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Store constructor\n */\n\nexport type MainState = {\n  search: string\n}\n\nconst NAME = 'main'\nconst initialState: MainState = {\n  search: '',\n}\n\n/**\n * Actions\n */\n\nexport const setSearch = createAsyncThunk<\n  MainState,\n  { search: string },\n  { state: any }\n>(`${NAME}/setSearch`, async ({ search }, { getState }) => {\n  return { search }\n})\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setSearch.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport farms from 'app/model/farms.controller'\nimport debts from 'app/model/debts.controller'\nimport main from 'app/model/main.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('myapp'),\n  reducer: {\n    farms,\n    debts,\n    main,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { account, utils } from '@senswap/sen-js'\n\nimport calculateReward from './calculateReward'\n\nimport { FARMING_ERRORS } from 'app/constants/errors'\nimport store from 'app/model/index'\nimport configs from 'app/configs'\n\nconst {\n  sol: { farming },\n} = configs\nexport class HarvestValidator {\n  private async checkSeedBalance(farmAddress: string) {\n    const { splt, wallet } = window.sentre\n    if (!wallet) throw new Error('Please connect wallet first!')\n\n    const farmData = store.getState().farms[farmAddress]\n\n    const walletAddress = await wallet.getAddress()\n    if (!account.isAddress(walletAddress))\n      throw new Error(FARMING_ERRORS.WALLET_ADDRESS_INVALID)\n\n    const debtAddress = await farming.deriveDebtAddress(\n      walletAddress,\n      farmAddress,\n    )\n    if (!account.isAddress(debtAddress))\n      throw new Error(FARMING_ERRORS.DEBT_ADDRESS_INVALID)\n\n    const debtData = store.getState().debts[debtAddress]\n    if (!debtData) throw new Error(FARMING_ERRORS.GET_DEBT_DATA)\n\n    const reward = calculateReward(debtData, farmData)\n    const { treasury_reward, treasury_stake, total_shares } = farmData\n    let { amount: rewardBalance } = await splt.getAccountData(treasury_reward)\n\n    if (treasury_reward === treasury_stake)\n      rewardBalance = rewardBalance - total_shares\n    const numRewardBalance = Number(utils.undecimalize(rewardBalance, 9))\n\n    if (numRewardBalance < reward)\n      throw new Error(FARMING_ERRORS.HARVEST_NOT_ENOUGH_BALANCE)\n  }\n\n  async validate(farmAddress: string) {\n    if (!account.isAddress(farmAddress))\n      throw new Error(FARMING_ERRORS.INVALID_FARM_ADDRESS)\n    return await this.checkSeedBalance(farmAddress)\n  }\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { utils } from '@senswap/sen-js'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useWallet } from 'senhub/providers'\nimport { numeric } from 'shared/util'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { useAccountStake } from 'app/hooks/useAccountStake'\nimport configs from 'app/configs'\nimport { HarvestValidator } from 'app/helper/validateHarvest'\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst Unstake = ({\n  farmAddress,\n  onClose,\n}: {\n  farmAddress: string\n  onClose: (visible: boolean) => void\n}) => {\n  const farmData = useSelector((state: AppState) => state.farms?.[farmAddress])\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const { data: debtData } = useDebt(farmAddress)\n  const accountStake = useAccountStake(farmAddress)\n  const [amount, setAmount] = useState()\n  const [disable, setDisable] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n  const lptDecimal = useMintDecimals(farmData.mint_stake)\n\n  const handleUnstake = async () => {\n    setIsLoading(true)\n    try {\n      const { splt, wallet } = window.sentre\n      if (!wallet) throw Error('Please connect wallet first')\n      if (!amount || !accountStake || !lptDecimal) return\n      const ammount = utils.decimalize(amount, lptDecimal)\n      const senWallet = await splt.deriveAssociatedAddress(\n        walletAddress,\n        senAddress,\n      )\n\n      // Validate farming seed balance\n      const harvestValidator = new HarvestValidator()\n      await harvestValidator.validate(farmAddress)\n      const { txId } = await farming.unstake(\n        ammount,\n        accountStake.address,\n        senWallet,\n        farmAddress,\n        wallet,\n      )\n      onClose(false)\n      return notifySuccess('Unstaked', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onAmount = useCallback(async (val) => {\n    await setAmount(val)\n    if (!val) return await setDisable(true)\n    return await setDisable(false)\n  }, [])\n\n  const stakedValue = useMemo(() => {\n    if (!lptDecimal) return\n    return utils.undecimalize(debtData?.shares, lptDecimal)\n  }, [debtData?.shares, lptDecimal])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"start\">\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\">\n            The pending reward will be automatically harvested when you unstake.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Card bodyStyle={{ padding: 12 }} style={{ boxShadow: 'none' }}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <Row>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">Amount</Typography.Text>\n              </Col>\n              <Col>\n                <Space size={6}>\n                  <Typography.Text type=\"secondary\">Available:</Typography.Text>\n                  <Typography.Text>\n                    {numeric(stakedValue).format('0,0.[00]')}\n                  </Typography.Text>\n                  <Typography.Text type=\"secondary\">LPT</Typography.Text>\n                </Space>\n              </Col>\n            </Row>\n            <NumericInput\n              placeholder={'0'}\n              value={amount}\n              onValue={onAmount}\n              bordered={false}\n              size=\"large\"\n              style={{ padding: 0 }}\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  onClick={() => onAmount(stakedValue)}\n                >\n                  MAX\n                </Button>\n              }\n              max={stakedValue}\n            />\n          </Space>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"remove-outline\" />}\n          onClick={handleUnstake}\n          block\n          disabled={disable}\n          loading={isLoading}\n        >\n          Unstake\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Unstake\n","import { useCallback, useMemo, useState } from 'react'\nimport { utils } from '@senswap/sen-js'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useAccount, useWallet } from 'senhub/providers'\nimport { numeric } from 'shared/util'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { useAccountStake } from 'app/hooks/useAccountStake'\nimport configs from 'app/configs'\nimport { HarvestValidator } from 'app/helper/validateHarvest'\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst Stake = ({\n  farmAddress,\n  onClose,\n}: {\n  farmAddress: string\n  onClose: (visible: boolean) => void\n}) => {\n  const farmData = useSelector((state: AppState) => state.farms?.[farmAddress])\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const { accounts } = useAccount()\n  const { data: debtData } = useDebt(farmAddress)\n  const accountStake = useAccountStake(farmAddress)\n  const [amount, setAmount] = useState()\n  const [disable, setDisable] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n  const lptDecimal = useMintDecimals(farmData.mint_stake)\n\n  const handleStake = async () => {\n    setIsLoading(true)\n    try {\n      const { splt, wallet } = window.sentre\n      if (!wallet) throw Error('Please connect wallet first')\n      if (!amount || !accountStake || !lptDecimal) return\n\n      const senWalletAddr = await splt.deriveAssociatedAddress(\n        walletAddress,\n        senAddress,\n      )\n      if (debtData?.shares === undefined)\n        await farming.initializeAccounts(farmAddress, walletAddress, wallet)\n      if (!accounts[senWalletAddr])\n        await splt.initializeAccount(senAddress, walletAddress, wallet)\n\n      // Validate farming seed balance\n      const harvestValidator = new HarvestValidator()\n      await harvestValidator.validate(farmAddress)\n\n      const { txId } = await farming.stake(\n        utils.decimalize(amount, lptDecimal),\n        accountStake.address,\n        senWalletAddr,\n        farmAddress,\n        wallet,\n      )\n      onClose(false)\n      return notifySuccess('Staked', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const onAmount = useCallback(async (val) => {\n    await setAmount(val)\n    if (!val) return await setDisable(true)\n    return await setDisable(false)\n  }, [])\n\n  const available = useMemo(() => {\n    if (!lptDecimal) return\n    return utils.undecimalize(\n      BigInt(accountStake?.data.amount || 0),\n      lptDecimal,\n    )\n  }, [accountStake?.data.amount, lptDecimal])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"start\">\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\">\n            The pending reward will be automatically harvested when you stake\n            more.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Card bodyStyle={{ padding: 12 }} style={{ boxShadow: 'none' }}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <Row>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">Amount</Typography.Text>\n              </Col>\n              <Col>\n                <Space size={6}>\n                  <Typography.Text type=\"secondary\">Available:</Typography.Text>\n                  <Typography.Text>\n                    {numeric(available).format('0,0.[00]')}\n                  </Typography.Text>\n                  <Typography.Text type=\"secondary\">LPT</Typography.Text>\n                </Space>\n              </Col>\n            </Row>\n            <NumericInput\n              placeholder={'0'}\n              value={amount}\n              onValue={onAmount}\n              bordered={false}\n              size=\"large\"\n              style={{ padding: 0 }}\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -15 }}\n                  onClick={() => onAmount(available)}\n                >\n                  MAX\n                </Button>\n              }\n              max={available}\n            />\n          </Space>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"add-outline\" />}\n          onClick={handleStake}\n          block\n          disabled={disable}\n          loading={isLoading}\n        >\n          Stake\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Stake\n","import { Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst Title = ({ title }: { title: string }) => {\n  return (\n    <Space>\n      <IonIcon style={{ fontSize: 18 }} name=\"alert-circle-outline\" />\n      <Typography.Text type=\"secondary\" ellipsis>\n        {title}\n      </Typography.Text>\n    </Space>\n  )\n}\nexport default Title\n","import { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Typography, Tooltip, Button } from 'antd'\nimport Title from './title'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst Address = ({\n  address,\n  onCopy,\n  copieAddress,\n  description = false,\n  title,\n}: {\n  address: string\n  onCopy: (address: string) => void\n  copieAddress: string\n  description?: boolean\n  title: string\n}) => {\n  return (\n    <Row gutter={[0, 8]}>\n      <Col\n        xs={{ span: 24 }}\n        sm={{ span: 10 }}\n        md={{ span: 10 }}\n        lg={{ span: 10 }}\n        flex=\"auto\"\n      >\n        <Title title={title} />\n      </Col>\n      <Col\n        xs={{ span: 22 }}\n        sm={{ span: 14 }}\n        md={{ span: 14 }}\n        lg={{ span: 14 }}\n        flex=\"auto\"\n      >\n        {account.isAddress(address) && (\n          <Typography.Text>{address}</Typography.Text>\n        )}\n      </Col>\n      <Col>\n        <Tooltip title=\"Copied\" visible={address === copieAddress}>\n          <CopyToClipboard text={address} onCopy={(address) => onCopy(address)}>\n            <Button\n              type=\"text\"\n              size=\"small\"\n              style={{ marginRight: -7 }}\n              icon={<IonIcon name=\"copy-outline\" />}\n            />\n          </CopyToClipboard>\n        </Tooltip>\n      </Col>\n      {description ? (\n        <Col span={24}>\n          <Typography.Paragraph type=\"secondary\" style={{ fontSize: 12 }}>\n            Tips: You can use this address for searching the pool coresponding\n            to the farm in Sen LP.\n          </Typography.Paragraph>\n        </Col>\n      ) : null}\n    </Row>\n  )\n}\n\nexport default Address\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\n\nimport { AppState } from 'app/model'\nimport useMintCgk from 'app/shared/hooks/useMintCgk'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nexport const useBudget = (\n  farmAddress: string,\n): { budget: number; budgetSymbol: string } => {\n  const [budget, setBudget] = useState(0)\n  const {\n    farms: { [farmAddress]: farmData },\n  } = useSelector((state: AppState) => state)\n  const { treasury_stake, treasury_reward, mint_reward, total_shares } =\n    farmData || {}\n  const decimal = useMintDecimals(mint_reward)\n  const { symbol: budgetSymbol } = useMintCgk(mint_reward)\n\n  const fetchBudgetData = useCallback(async () => {\n    if (decimal === undefined) return setBudget(0)\n    try {\n      const { splt } = window.sentre\n      let { amount } = await splt.getAccountData(treasury_reward)\n      if (treasury_reward === treasury_stake) amount = amount - total_shares\n      const budget = Number(utils.undecimalize(amount, decimal))\n      setBudget(budget)\n    } catch (error) {\n      setBudget(0)\n    }\n  }, [decimal, total_shares, treasury_reward, treasury_stake])\n\n  useEffect(() => {\n    fetchBudgetData()\n  }, [fetchBudgetData])\n\n  return { budget, budgetSymbol }\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\n\nimport { Row, Col, Typography, Space } from 'antd'\nimport Title from './title'\nimport Address from './address'\n\nimport { asyncWait, numeric } from 'shared/util'\nimport { AppState } from 'app/model'\nimport { useMint, usePool } from 'senhub/providers'\nimport { useBudget } from 'app/hooks/useBudget'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst DEFAULT_TOKEN_SYMBOL = 'TOKEN'\n\nconst FarmInfo = ({ farmAddress }: { farmAddress: string }) => {\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n  const { budget, budgetSymbol } = useBudget(farmAddress)\n  const farms = useSelector((state: AppState) => state.farms)\n  const [copieAddress, setCopieAddress] = useState('')\n\n  const [mintSymbol, setMintSymbol] = useState('')\n\n  const { mint_stake, period, reward, mint_reward } = farms[farmAddress] || {}\n\n  const farmDecimal = useMintDecimals(mint_stake)\n\n  useEffect(() => {\n    ;(async () => {\n      const { symbol } = (await tokenProvider.findByAddress(mint_reward)) || {}\n      setMintSymbol(symbol || DEFAULT_TOKEN_SYMBOL)\n    })()\n  }, [mint_reward, tokenProvider])\n\n  const poolAddress = Object.keys(pools).find((poolAddress) => {\n    const { mint_lpt } = pools[poolAddress]\n    return mint_lpt === mint_stake\n  })\n\n  const onCopy = async (copieAddress: string | undefined) => {\n    if (!copieAddress) return\n    await setCopieAddress(copieAddress)\n    await asyncWait(1500)\n    await setCopieAddress('')\n  }\n\n  const farmReward = useMemo(() => {\n    if (!farmDecimal) return 0\n    return utils.undecimalize(reward, farmDecimal)\n  }, [farmDecimal, reward])\n\n  const formatPeriod = useMemo(() => {\n    const numPeriod = Number(period)\n    let time = numPeriod / 86400\n    let formatTime = 'days'\n    if (time > 29) {\n      time = time / 30\n      formatTime = time > 1 ? 'months' : 'month'\n    }\n    if (time < 2) {\n      time = time * 24\n      formatTime = time > 1 ? 'hours' : 'hour'\n    }\n    return `${farmReward} ${budgetSymbol} / ${Math.floor(time)} ${formatTime}`\n  }, [farmReward, period, budgetSymbol])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Address\n          title=\"Farming address:\"\n          address={farmAddress}\n          onCopy={(address) => onCopy(address)}\n          copieAddress={copieAddress}\n        />\n      </Col>\n      <Col span={24}>\n        <Address\n          title={poolAddress ? 'Pool address:' : 'Stake mint address:'}\n          address={poolAddress || mint_stake}\n          onCopy={(address) => onCopy(address)}\n          copieAddress={copieAddress}\n          description\n        />\n      </Col>\n      <Col span={24}>\n        <Space align=\"baseline\">\n          <Title title=\"Rewarding:\" />\n          <Typography.Text style={{ wordBreak: 'break-all' }}>\n            {formatPeriod}\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space align=\"baseline\">\n          <Title title=\"Budget:\" />\n          <Typography.Text style={{ wordBreak: 'break-all' }}>\n            {numeric(budget).format('0,0.[00]')}\n          </Typography.Text>\n          <Typography.Text type=\"secondary\">{mintSymbol}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FarmInfo\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { numeric } from 'shared/util'\nimport { useAccount, useWallet } from 'senhub/providers'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst Seed = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const { accounts } = useAccount()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const farms = useSelector((state: AppState) => state.farms)\n  const [value, setValue] = useState('')\n  const [balance, setBalance] = useState('0')\n  const [loading, setLoading] = useState(false)\n\n  const { mint_reward } = farms?.[farmAddress] || {}\n  const decimal = useMintDecimals(mint_reward)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!decimal) return\n      try {\n        const { splt } = window.sentre\n        const srcAddress = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mint_reward,\n        )\n        const { amount } = accounts[srcAddress] || {}\n        if (!amount) return setBalance('0')\n        return setBalance(utils.undecimalize(amount, decimal))\n      } catch (er) {\n        setBalance('0')\n      }\n    })()\n  }, [walletAddress, accounts, mint_reward, decimal])\n\n  const seed = async () => {\n    setLoading(true)\n    const { wallet, splt } = window.sentre\n    if (!wallet) return\n    const srcAddress = await splt.deriveAssociatedAddress(\n      walletAddress,\n      senAddress,\n    )\n    const amount = utils.decimalize(value, 9)\n    try {\n      const { txId } = await farming.seed(\n        amount,\n        farmAddress,\n        srcAddress,\n        wallet,\n      )\n      onChange(txId)\n      return notifySuccess('Seed', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 8 }}\n        >\n          <Row gutter={[0, 0]}>\n            <Col span={24}>\n              <Row\n                gutter={[0, 0]}\n                wrap={false}\n                style={{ margin: `6px 12px 0px 12px`, fontSize: 12 }}\n              >\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">Amount</Typography.Text>\n                </Col>\n                <Col>\n                  <Space size={6}>\n                    <Typography.Text type=\"secondary\">\n                      Available:\n                    </Typography.Text>\n                    <Typography.Text>\n                      {numeric(balance).format('0,0.[00]')}\n                    </Typography.Text>\n                    <Typography.Text type=\"secondary\">SNTR</Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <NumericInput\n                placeholder=\"0\"\n                value={value}\n                onValue={setValue}\n                suffix={\n                  <Button\n                    type=\"text\"\n                    onClick={() => setValue(balance)}\n                    size=\"small\"\n                    style={{ marginRight: -7 }}\n                  >\n                    MAX\n                  </Button>\n                }\n                bordered={false}\n                max={balance}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"add-outline\" />}\n          onClick={seed}\n          block\n          disabled={!value}\n          loading={loading}\n        >\n          Seed\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Seed\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\n\nimport { Row, Col, Card, Typography, Space, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport NumericInput from 'shared/antd/numericInput'\nimport { numeric } from 'shared/util'\nimport { useWallet } from 'senhub/providers'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport useMintCgk from 'app/shared/hooks/useMintCgk'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst {\n  sol: { farming },\n} = configs\n\nconst Unseed = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const farms = useSelector((state: AppState) => state.farms)\n  const [value, setValue] = useState('')\n  const [balance, setBalance] = useState('0')\n  const [loading, setLoading] = useState(false)\n  const { treasury_reward, mint_reward } = farms[farmAddress] || {}\n  const decimal = useMintDecimals(mint_reward)\n  const { symbol } = useMintCgk(mint_reward)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!decimal) return\n      try {\n        const { splt } = window.sentre\n        const { amount } = await splt.getAccountData(treasury_reward)\n        if (!amount) return setBalance('0')\n        return setBalance(utils.undecimalize(amount, decimal))\n      } catch (er) {\n        setBalance('0')\n      }\n    })()\n  }, [decimal, treasury_reward])\n\n  const unseed = async () => {\n    setLoading(true)\n    const { wallet, splt } = window.sentre\n    if (!wallet || !decimal) return\n    const dstAddress = await splt.deriveAssociatedAddress(\n      walletAddress,\n      mint_reward,\n    )\n    const amount = utils.decimalize(value, decimal)\n    try {\n      const { txId } = await farming.unseed(\n        amount,\n        farmAddress,\n        dstAddress,\n        wallet,\n      )\n      onChange(txId)\n      return notifySuccess('Unseed', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 8 }}\n        >\n          <Row gutter={[0, 0]}>\n            <Col span={24}>\n              <Row\n                gutter={[0, 0]}\n                wrap={false}\n                style={{ margin: `6px 12px 0px 12px`, fontSize: 12 }}\n              >\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">Amount</Typography.Text>\n                </Col>\n                <Col>\n                  <Space size={6}>\n                    <Typography.Text type=\"secondary\">\n                      Available:\n                    </Typography.Text>\n                    <Typography.Text>\n                      {numeric(balance).format('0,0.[00]')}\n                    </Typography.Text>\n                    <Typography.Text type=\"secondary\">{symbol}</Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <NumericInput\n                placeholder=\"0\"\n                value={value}\n                onValue={setValue}\n                suffix={\n                  <Button\n                    type=\"text\"\n                    onClick={() => setValue(balance)}\n                    size=\"small\"\n                    style={{ marginRight: -7 }}\n                  >\n                    MAX\n                  </Button>\n                }\n                bordered={false}\n                max={balance}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"remove-outline\" />}\n          onClick={unseed}\n          block\n          disabled={!value}\n          loading={loading}\n        >\n          Unseed\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Unseed\n","export enum NewFarmStep {\n  POLICY_AGREEMENT,\n  FARM_CREATING_CONFIRMATION,\n}\n\nexport enum FarmStatus {\n  isActive = 1,\n  isFreeze = 2,\n}\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport { AppState } from 'app/model'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { FarmStatus } from 'app/constants/farms'\n\nconst {\n  sol: { farming },\n} = configs\n\nconst FreezeOrThaw = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const farms = useSelector((state: AppState) => state.farms)\n  const [loading, setLoading] = useState(false)\n\n  const { state } = farms?.[farmAddress] || {}\n\n  const freeze = async () => {\n    const { wallet } = window.sentre\n    if (!wallet) return\n    setLoading(true)\n    try {\n      const { txId } = await farming.freeze(farmAddress, wallet)\n      onChange(txId)\n      return notifySuccess('Freeze the farm', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const thaw = async () => {\n    const { wallet } = window.sentre\n    if (!wallet) return\n    setLoading(true)\n    try {\n      const { txId } = await farming.thaw(farmAddress, wallet)\n      onChange(txId)\n      return notifySuccess('Thaw the farm', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const isActiveFarm = state === FarmStatus.isActive\n  const btnStyle = isActiveFarm\n    ? { backgroundColor: '#40A9FF', color: '#fff' }\n    : {}\n  const iconName = isActiveFarm ? 'snow-outline' : 'sunny-outline'\n  const btnName = isActiveFarm ? 'Freeze' : 'Thaw'\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 16 }}\n        >\n          <Space align=\"start\">\n            <IonIcon name=\"information-circle-outline\" />\n            <Typography.Text>\n              Freezing a farm will prevent all actions, but \"seed\" and \"unseed\",\n              until the farm has been thawed.\n            </Typography.Text>\n          </Space>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          style={{ ...btnStyle, border: 'unset' }}\n          icon={<IonIcon name={iconName} />}\n          onClick={isActiveFarm ? freeze : thaw}\n          block\n          disabled={!state}\n          loading={loading}\n        >\n          {btnName}\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FreezeOrThaw\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\n\nimport { AppState } from 'app/model'\nimport IonIcon from 'shared/antd/ionicon'\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { deleteFarm } from 'app/model/farms.controller'\n\nconst {\n  sol: { farming },\n} = configs\n\nconst Close = ({\n  farmAddress,\n  onChange = () => {},\n}: {\n  farmAddress: string\n  onChange?: (txId: string) => void\n}) => {\n  const farms = useSelector((state: AppState) => state.farms)\n  const [loading, setLoading] = useState(false)\n  const { total_shares } = farms?.[farmAddress] || {}\n  const dispatch = useDispatch()\n\n  const close = async () => {\n    const { wallet } = window.sentre\n    if (!wallet) return\n    setLoading(true)\n    try {\n      const { txId } = await farming.closeFarm(farmAddress, wallet)\n      onChange(txId)\n      dispatch(deleteFarm({ farmAddress }))\n      return notifySuccess('Close the farm', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card\n          style={{ boxShadow: 'unset', borderRadius: 8 }}\n          bodyStyle={{ padding: 16 }}\n        >\n          <Row gutter={[0, 0]}>\n            <Col span={24}>\n              <Space>\n                <IonIcon name=\"information-circle-outline\" />\n                <Typography.Text>\n                  The farm can be closed only all farmers unstaked their tokens!\n                </Typography.Text>\n              </Space>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"trash-outline\" />}\n          onClick={close}\n          block\n          disabled={!!total_shares}\n          loading={loading}\n        >\n          Close Farm\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Close\n","import { Fragment, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport {\n  Modal,\n  Row,\n  Col,\n  Space,\n  Typography,\n  Card,\n  Tabs,\n  Button,\n  Tooltip,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport Seed from './seed'\nimport Unseed from './unseed'\nimport FreezeOrThaw from './freezeOrThaw'\nimport Close from './close'\n\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\nimport { AppState } from 'app/model'\nimport { useBudget } from 'app/hooks/useBudget'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst ExtraTypography = ({\n  label = '',\n  title = '',\n}: {\n  label?: string\n  title?: string\n}) => {\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>\n        <Typography.Text>{title}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst Management = ({ farmAddress }: { farmAddress: string }) => {\n  const farmData = useSelector((state: AppState) => state.farms?.[farmAddress])\n  const [visible, setVisible] = useState(false)\n  const [visibleTooltip, setVisibleTooltip] = useState(false)\n  const { budget, budgetSymbol } = useBudget(farmAddress)\n  const { mint_stake: mintFarmAddress, period, reward } = farmData || {}\n  const farmDecimal = useMintDecimals(mintFarmAddress)\n\n  const onCopy = async () => {\n    setVisibleTooltip(true)\n    await asyncWait(1500)\n    setVisibleTooltip(false)\n  }\n\n  const farmReward = useMemo(() => {\n    if (!farmDecimal) return 0\n    return utils.undecimalize(reward, farmDecimal)\n  }, [farmDecimal, reward])\n\n  const formatPeriod = useMemo(() => {\n    const numPeriod = Number(period)\n    let time = numPeriod / 86400\n    let formatTime = 'days'\n    if (time > 29) {\n      time = time / 30\n      formatTime = time > 1 ? 'months' : 'month'\n    }\n    if (time < 2) {\n      time = time * 24\n      formatTime = time > 1 ? 'hours' : 'hour'\n    }\n    return `${farmReward} ${budgetSymbol} / ${Math.floor(time)} ${formatTime}`\n  }, [farmReward, period, budgetSymbol])\n\n  return (\n    <Fragment>\n      <Button onClick={() => setVisible(true)}>Manage</Button>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        closeIcon={<IonIcon name=\"close\" />}\n        footer={null}\n        destroyOnClose\n        centered\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Space style={{ lineHeight: 1 }}>\n              <IonIcon name=\"leaf\" />\n              <Typography.Title level={5} style={{ margin: 0 }}>\n                Farm Management\n              </Typography.Title>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Card\n              style={{ borderRadius: 8 }}\n              bodyStyle={{ padding: 16 }}\n              bordered={false}\n            >\n              <Row gutter={[8, 8]}>\n                <Col span={24}>\n                  <Row gutter={[0, 0]}>\n                    <Col flex=\"auto\">\n                      <Space size={4} style={{ fontWeight: 600 }}>\n                        <MintAvatar mintAddress={mintFarmAddress} size={32} />\n                        <MintSymbol mintAddress={mintFarmAddress} />\n                      </Space>\n                    </Col>\n                    <Col>\n                      <Space size={2}>\n                        <Typography.Text\n                          type=\"secondary\"\n                          style={{ fontSize: 12 }}\n                        >\n                          {shortenAddress(farmAddress)}\n                        </Typography.Text>\n                        <Tooltip visible={visibleTooltip} title=\"Copied\">\n                          <CopyToClipboard text={farmAddress}>\n                            <Button\n                              type=\"text\"\n                              size=\"small\"\n                              onClick={onCopy}\n                              icon={<IonIcon name=\"copy-outline\" />}\n                            />\n                          </CopyToClipboard>\n                        </Tooltip>\n                        <Button\n                          type=\"text\"\n                          size=\"small\"\n                          onClick={() =>\n                            window.open(explorer(farmAddress), '_blank')\n                          }\n                          icon={<IonIcon name=\"open-outline\" />}\n                        />\n                      </Space>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col span={24}>\n                  <ExtraTypography\n                    label=\"Budget\"\n                    title={`${budget} ${budgetSymbol}`}\n                  />\n                </Col>\n                <Col span={24}>\n                  <ExtraTypography label=\"Reward\" title={formatPeriod} />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Tabs>\n              <Tabs.TabPane key=\"seed\" tab=\"Seed\">\n                <Seed\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"unseed\" tab=\"Unseed\">\n                <Unseed\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"freeze-thaw\" tab=\"Freeze/Thaw\">\n                <FreezeOrThaw\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"ownership\" tab=\"Ownership\" disabled>\n                TBD\n              </Tabs.TabPane>\n              <Tabs.TabPane key=\"close\" tab=\"Close\">\n                <Close\n                  farmAddress={farmAddress}\n                  onChange={() => setVisible(false)}\n                />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Management\n","import { useState } from 'react'\nimport { account, utils } from '@senswap/sen-js'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\n\nimport configs from 'app/configs'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useWallet } from 'senhub/providers'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\nimport { AppState } from 'app/model'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst Exit = ({\n  farmAddress,\n  onClose,\n}: {\n  farmAddress: string\n  onClose: (visible: boolean) => void\n}) => {\n  const farmData = useSelector((state: AppState) => state.farms?.[farmAddress])\n  const { data: debtData } = useDebt(farmAddress)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleExit = async () => {\n    setIsLoading(true)\n    const { splt, wallet } = window.sentre\n    const { mint_stake } = farmData\n    if (!wallet || !account.isAddress(mint_stake)) return\n    const senWallet = await splt.deriveAssociatedAddress(\n      walletAddress,\n      senAddress,\n    )\n    const lptWalletAddress = await splt.deriveAssociatedAddress(\n      walletAddress,\n      mint_stake,\n    )\n\n    try {\n      const { txId } = await farming.rid(\n        lptWalletAddress,\n        senWallet,\n        farmAddress,\n        wallet,\n      )\n      onClose(false)\n      return notifySuccess('Exit', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  //Calculate Data for Render\n  const stakedValue = utils.undecimalize(debtData?.shares, 9)\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"start\">\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text>\n            When the reward budget is too low, you may be not able to unstake.\n            Exiting the farm means you give up on rewards and merely get back\n            your tokens.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Card\n          style={{ borderRadius: 8, boxShadow: 'unset' }}\n          bodyStyle={{ padding: 12 }}\n        >\n          <Row gutter={[0, 0]}>\n            <Col span={24}>\n              <Typography.Text className=\"caption\" type=\"secondary\">\n                Amount\n              </Typography.Text>\n            </Col>\n            <Col span={24}>\n              <NumericInput\n                placeholder=\"0\"\n                value={stakedValue}\n                size=\"small\"\n                bordered={false}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"remove\" />}\n          onClick={handleExit}\n          block\n          disabled={!stakedValue}\n          loading={isLoading}\n        >\n          Exit\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Exit\n","import { useState, useEffect, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { useDebt } from 'app/hooks/useDebt'\nimport calculateReward from 'app/helper/calculateReward'\n\nexport const useReward = (farmAddress: string): number => {\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const { data } = useDebt(farmAddress)\n  const [reward, setReward] = useState(0)\n\n  const calcReward = useCallback(() => {\n    if (!data || !farmData) return setReward(0)\n    const pendingReward = calculateReward(data, farmData) || 0\n    return setReward(pendingReward)\n  }, [data, farmData])\n\n  useEffect(() => {\n    calcReward()\n  }, [calcReward])\n\n  return reward\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { useMintUsd } from './useMintUsd'\n\nexport const useFarmLiquidity = (farmAddress: string) => {\n  const {\n    farms: { [farmAddress]: farmData },\n  } = useSelector((state: AppState) => state)\n  const { getTotalValue } = useMintUsd()\n  const [liquidity, setLiquidity] = useState(0)\n\n  const calcLiquidity = useCallback(async () => {\n    if (!farmData) return setLiquidity(0)\n    const { total_shares, mint_stake } = farmData\n    const totalValue = await getTotalValue({\n      mintAddress: mint_stake,\n      amount: total_shares,\n    })\n    return setLiquidity(totalValue)\n  }, [farmData, getTotalValue])\n\n  useEffect(() => {\n    calcLiquidity()\n  }, [calcLiquidity])\n\n  return liquidity\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useFarmLiquidity } from 'app/hooks/useFarmLiquidity'\nimport { AppState } from 'app/model'\nimport { useMintUsd } from './useMintUsd'\n\nexport const useFarmRoi = (farmAddress: string) => {\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const liquidity = useFarmLiquidity(farmAddress)\n  const { getTotalValue } = useMintUsd()\n  const [roi, setRoi] = useState(0)\n\n  const calcLiquidity = useCallback(async () => {\n    if (!liquidity) return setRoi(0)\n    const { mint_reward, reward, period } = farmData\n    const rewardPerDay = (reward * BigInt(86400)) / period\n    const totalReward = await getTotalValue({\n      mintAddress: mint_reward,\n      amount: rewardPerDay,\n    })\n    const roi = totalReward / liquidity\n    return setRoi(roi)\n  }, [farmData, getTotalValue, liquidity])\n\n  useEffect(() => {\n    calcLiquidity()\n  }, [calcLiquidity])\n\n  return { roi, apr: 365 * roi }\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { utils } from '@senswap/sen-js'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Collapse,\n  Modal,\n  Row,\n  Space,\n  Tabs,\n  Tooltip,\n  Typography,\n} from 'antd'\nimport Content from './content'\nimport IonIcon from 'shared/antd/ionicon'\nimport Unstake from './stakeAndUnstake/unstake'\nimport Stake from './stakeAndUnstake/stake'\nimport FarmInfo from './farmInfo'\nimport Management from './management'\nimport Exit from './stakeAndUnstake/exit'\n\nimport { numeric } from 'shared/util'\nimport { useUI, useWallet } from 'senhub/providers'\nimport { HarvestValidator } from 'app/helper/validateHarvest'\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useReward } from 'app/hooks/useReward'\nimport { useFarmLiquidity } from 'app/hooks/useFarmLiquidity'\nimport { useFarmRoi } from 'app/hooks/useFarmRoi'\nimport { AppState } from 'app/model'\nimport { notifyError, notifySuccess } from 'app/helper'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport configs from 'app/configs'\nimport { useFarmPool } from 'app/hooks/useCorrespondingPool'\nimport { FarmStatus } from 'app/constants/farms'\nimport { useBudget } from 'app/hooks/useBudget'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst {\n  sol: { senAddress, farming },\n} = configs\n\nconst LOW_BUDGET =\n  'The budget of reward is very low. Please unstake your tokens for safety.'\n\nconst ItemFarming = ({ farmAddress }: { farmAddress: string }) => {\n  const farmData = useSelector((state: AppState) => state.farms?.[farmAddress])\n  const { data } = useDebt(farmAddress)\n  const userReward = useReward(farmAddress)\n  const farmPool = useFarmPool(farmAddress)\n  const liquidity = useFarmLiquidity(farmAddress)\n  const { apr } = useFarmRoi(farmAddress)\n  const {\n    ui: { width },\n  } = useUI()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const history = useHistory()\n  const [activeKey, setActiveKey] = useState<string>()\n  const [visible, setVisible] = useState(false)\n  const [visibleInfo, setVisibleInfo] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [warning, setWarning] = useState('')\n  const { owner, state, reward } = farmData || {}\n  const isOwner = owner === walletAddress\n  const farmSelected = useSelector((state: AppState) => state.main.search)\n  const isFreezeFarm = state === FarmStatus.isFreeze\n  const lptDecimal = useMintDecimals(farmData?.mint_stake)\n  const farmDecimal = useMintDecimals(farmData?.mint_stake)\n  const { budget } = useBudget(farmAddress)\n\n  const farmReward = useMemo(() => {\n    if (farmDecimal === 0 || !farmDecimal) return 0\n    return Number(utils.undecimalize(reward, farmDecimal))\n  }, [farmDecimal, reward])\n\n  const onActive = () => {\n    if (activeKey) return setActiveKey(undefined)\n    return setActiveKey(farmAddress)\n  }\n\n  const handleHarvest = async () => {\n    setLoading(true)\n    const { splt, wallet } = window.sentre\n    const senWallet = await splt.deriveAssociatedAddress(\n      walletAddress,\n      senAddress,\n    )\n    try {\n      if (!wallet) throw new Error('please connect wallet first!')\n      const harvestValidator = new HarvestValidator()\n      await harvestValidator.validate(farmAddress)\n      const { txId } = await farming.harvest(farmAddress, senWallet, wallet)\n      return notifySuccess('Harvest', txId)\n    } catch (er) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (!farmSelected || farmSelected !== farmAddress) return\n    setActiveKey(farmSelected)\n  }, [budget, farmAddress, farmReward, farmSelected])\n\n  useEffect(() => {\n    if (!farmReward) return setWarning(LOW_BUDGET)\n    if (budget < farmReward * 3) return setWarning(LOW_BUDGET)\n    return setWarning('')\n  }, [budget, farmReward])\n\n  const TooltipApr = () => (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space size={4}>\n          <Typography.Title style={{ color: '#fff' }} level={5}>\n            APR\n          </Typography.Title>\n          <Typography.Text type=\"secondary\">\n            (Annual Percentage Rate)\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col>\n        <Typography.Text style={{ color: '#E9E9EB' }}>\n          Refers to the simple interest accured from a particular inverstment\n          over a 1 year period.\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n\n  let amountLptShared = '0'\n  if (data && lptDecimal) {\n    amountLptShared = utils.undecimalize(data.shares, lptDecimal)\n  }\n  const desktop = width > 768\n  const icoDesktopCollapse = activeKey\n    ? 'chevron-down-outline'\n    : 'chevron-forward-outline'\n  const icoMobileCollapse = activeKey\n    ? 'chevron-up-outline'\n    : 'chevron-down-outline'\n\n  const icon = !desktop ? icoMobileCollapse : icoDesktopCollapse\n  const freezeStyle = isFreezeFarm ? { opacity: 0.6 } : {}\n\n  return (\n    <Row style={{ ...freezeStyle }}>\n      <Col span={24}>\n        <Card\n          bordered={false}\n          className=\"farming-card\"\n          bodyStyle={{ padding: 16 }}\n          style={{\n            boxShadow: 'unset',\n            borderRadius: 8,\n            position: 'relative',\n            zIndex: 1,\n          }}\n          hoverable\n          onClick={onActive}\n        >\n          <Row gutter={[16, 16]} justify=\"center\" align=\"middle\">\n            <Col flex=\"auto\">\n              <Row gutter={[16, 16]} align=\"middle\">\n                <Col xs={24} md={5}>\n                  <Space>\n                    <MintAvatar mintAddress={farmData?.mint_stake} size={24} />\n                    <MintSymbol mintAddress={farmAddress} />\n                    <Button\n                      type=\"text\"\n                      shape=\"circle\"\n                      size=\"small\"\n                      icon={<IonIcon name=\"information-circle-outline\" />}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        setVisibleInfo(true)\n                      }}\n                    />\n                  </Space>\n                </Col>\n                <Col xs={12} md={4}>\n                  <Content\n                    label=\"APR\"\n                    tooltip={<TooltipApr />}\n                    value={numeric(apr).format('0,0.[00]a%')}\n                  />\n                </Col>\n                <Col xs={12} md={5}>\n                  <Content\n                    label=\"Liquidity\"\n                    value={numeric(liquidity).format('0,0.00[00]a$')}\n                  />\n                </Col>\n                <Col xs={12} md={5}>\n                  <Content\n                    label=\"Your staked LPT\"\n                    value={numeric(amountLptShared).format('0,0.00[00]')}\n                  />\n                </Col>\n                <Col xs={12} md={5}>\n                  <Content\n                    mintAddress={farmData?.mint_reward}\n                    label=\"Reward\"\n                    value={numeric(userReward).format('0,0.00[00]')}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              <Space>\n                {isFreezeFarm && <IonIcon name=\"snow-outline\" />}\n                {warning && (\n                  <Tooltip title={LOW_BUDGET}>\n                    <IonIcon\n                      name=\"alert-circle-outline\"\n                      style={{ color: '#D72311' }}\n                    />\n                  </Tooltip>\n                )}\n                <Button\n                  type=\"text\"\n                  icon={<IonIcon name={icon} />}\n                  disabled={!isOwner && isFreezeFarm}\n                  onClick={onActive}\n                />\n              </Space>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Collapse activeKey={activeKey} className=\"expand-farm-card\">\n          <Collapse.Panel header={null} key={farmAddress} showArrow={false}>\n            <Row gutter={[16, 16]}>\n              <Col xs={{ order: 2 }} md={{ order: 1 }} flex=\"auto\">\n                {farmPool && (\n                  <Button\n                    type=\"text\"\n                    style={{ padding: 0, background: 'transparent' }}\n                    onClick={() => {\n                      history.push(\n                        `/app/sen_lp?poolAddress=${farmPool.address}`,\n                      )\n                    }}\n                  >\n                    To the pool\n                    <IonIcon name=\"chevron-forward-outline\" />\n                  </Button>\n                )}\n              </Col>\n              <Col xs={{ order: 1 }} md={{ order: 2 }}>\n                <Space>\n                  {isOwner && <Management farmAddress={farmAddress} />}\n                  <Button\n                    onClick={() => setVisible(true)}\n                    disabled={isFreezeFarm}\n                  >\n                    Stake / Unstake\n                  </Button>\n                  <Button\n                    type=\"primary\"\n                    icon={<IonIcon name=\"leaf-outline\" />}\n                    loading={loading}\n                    onClick={handleHarvest}\n                    disabled={isFreezeFarm || userReward === 0}\n                  >\n                    Harvest\n                  </Button>\n                </Space>\n              </Col>\n            </Row>\n          </Collapse.Panel>\n        </Collapse>\n      </Col>\n      <Modal\n        onCancel={() => setVisible(false)}\n        closeIcon={<IonIcon name=\"close\" />}\n        footer={null}\n        title={null}\n        visible={visible}\n      >\n        <Tabs>\n          <Tabs.TabPane tab=\"Stake\" key=\"stake\">\n            <Stake farmAddress={farmAddress} onClose={setVisible} />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Unstake\" key=\"unstake\">\n            <Unstake farmAddress={farmAddress} onClose={setVisible} />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Exit\" key=\"exit\">\n            <Exit farmAddress={farmAddress} onClose={setVisible} />\n          </Tabs.TabPane>\n        </Tabs>\n      </Modal>\n      <Modal\n        visible={visibleInfo}\n        onCancel={() => setVisibleInfo(false)}\n        closeIcon={<IonIcon name=\"close\" />}\n        title=\"Farm Info\"\n        footer={null}\n        destroyOnClose\n        centered\n      >\n        <FarmInfo farmAddress={farmAddress} />\n      </Modal>\n    </Row>\n  )\n}\nexport default ItemFarming\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account, PoolData } from '@senswap/sen-js'\n\nimport { usePool } from 'senhub/providers'\n\nimport { AppState } from 'app/model'\n\nexport const useFarmPool = (\n  farmAddress: string,\n): { address: string; data: PoolData } | undefined => {\n  const [farmPool, setFarmPool] =\n    useState<{ address: string; data: PoolData }>()\n  const {\n    farms: { [farmAddress]: farmData },\n  } = useSelector((state: AppState) => state)\n  const { pools } = usePool()\n\n  const findPoolData = useCallback(async () => {\n    const mintStake = farmData?.mint_stake\n    if (!mintStake) return setFarmPool(undefined)\n    const poolAddr = Object.keys(pools).find((poolAddress) => {\n      const { mint_lpt } = pools[poolAddress]\n      return mint_lpt === mintStake\n    })\n    if (!account.isAddress(poolAddr)) return setFarmPool(undefined)\n    const newPoolData = pools[poolAddr]\n    return setFarmPool({ address: poolAddr, data: newPoolData })\n  }, [farmData?.mint_stake, pools])\n\n  useEffect(() => {\n    findPoolData()\n  }, [findPoolData])\n\n  return farmPool\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { FarmState } from 'app/model/farms.controller'\nimport { usePool, useMint } from 'senhub/providers'\nimport { forceCheck } from '@senswap/react-lazyload'\nimport { useSentreFarms } from './listFarm/useSentreFarms'\n\nconst KEY_SIZE = 3\n\nexport const useSearchFarm = (farms: FarmState) => {\n  const { tokenProvider } = useMint()\n  const { sentreFarms } = useSentreFarms()\n  const { pools } = usePool()\n  const { search: keyword } = useSelector((state: AppState) => state.main)\n  const [farmFilter, setFarmFilter] = useState<FarmState>({})\n\n  const findPool = useCallback(\n    (mintLpt: string) =>\n      Object.keys(pools).find((addr) => pools[addr].mint_lpt === mintLpt),\n    [pools],\n  )\n\n  const search = useCallback(async () => {\n    const newFarmFilter: FarmState = {}\n    const listTokenInfo = await tokenProvider.find(keyword)\n    const listTokenAddress = listTokenInfo.map((info) => info.address)\n\n    const listFarmAddress = Object.keys(farms).filter((farmAddress) => {\n      if (!keyword || !pools || !farms || keyword.length < KEY_SIZE) return true\n      const farmData = farms[farmAddress]\n      const { mint_stake } = farmData\n      // Search with pool\n      const poolAddress = findPool(mint_stake)\n      if (poolAddress) {\n        // Pool address\n        if (poolAddress === keyword) return true\n        // Pool Token\n        const { mint_a, mint_b } = pools[poolAddress]\n        if (\n          listTokenAddress.includes(mint_a) ||\n          listTokenAddress.includes(mint_b)\n        )\n          return true\n      }\n      // Search with farm\n      if (farmAddress === keyword) return true\n      return listTokenAddress.includes(mint_stake)\n    })\n    listFarmAddress\n      .sort((a, b) => {\n        if (!sentreFarms[a] && sentreFarms[b]) return 1\n        if (sentreFarms[a] && !sentreFarms[b]) return -1\n        return farms[a].total_shares < farms[b].total_shares ? 1 : -1\n      })\n      .map((addr) => (newFarmFilter[addr] = farms[addr]))\n    await setFarmFilter(newFarmFilter)\n  }, [farms, findPool, keyword, pools, sentreFarms, tokenProvider])\n\n  useEffect(() => {\n    search().then(() => {\n      // fix lazyload\n      setTimeout(() => {\n        forceCheck()\n      }, 500)\n    })\n  }, [search])\n\n  return farmFilter\n}\n","import { useMemo } from 'react'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\nimport { useSelector } from 'react-redux'\nimport { AppState } from 'app/model'\n\nconst AllFarms = () => {\n  const { farms } = useSelector((state: AppState) => state)\n\n  const searchedFarms = useSearchFarm(farms)\n  const listFarmAddress = useMemo(\n    () => Object.keys(searchedFarms),\n    [searchedFarms],\n  )\n\n  if (!listFarmAddress.length) return <Empty />\n\n  return (\n    <Row gutter={[16, 16]}>\n      {listFarmAddress.map((address) => {\n        return (\n          <Col span={24} key={address}>\n            <LazyLoad height={84}>\n              <ItemFarming farmAddress={address} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default AllFarms\n","import { useMemo } from 'react'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport configs from 'app/configs'\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\nimport { useSentreFarms } from 'app/hooks/listFarm/useSentreFarms'\n\nconst {\n  sol: { senOwners },\n} = configs\n\nconst SentreFarms = () => {\n  const { sentreFarms } = useSentreFarms()\n  const farms = useSearchFarm(sentreFarms)\n  const listFarmAddress = useMemo(() => Object.keys(farms), [farms])\n\n  const filterFarm = useMemo(() => {\n    return listFarmAddress.filter((addr) =>\n      senOwners.includes(farms[addr].owner),\n    )\n  }, [farms, listFarmAddress])\n\n  const sortedFarm = useMemo(() => {\n    const listFarms = filterFarm.sort((fistFarm, secondFarm) => {\n      const totalFistFarm = farms[fistFarm].total_shares\n      const totalSecondFarm = farms[secondFarm].total_shares\n      return totalFistFarm < totalSecondFarm ? 1 : -1\n    })\n    return listFarms\n  }, [farms, filterFarm])\n\n  if (sortedFarm.length === 0) return <Empty />\n\n  return (\n    <Row gutter={[16, 16]}>\n      {sortedFarm.map((farmAddress, i) => {\n        return (\n          <Col span={24} key={farmAddress + i}>\n            <LazyLoad height={84}>\n              <ItemFarming farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default SentreFarms\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useWallet } from 'senhub/providers'\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\nimport { FarmState } from 'app/model/farms.controller'\n\nconst {\n  sol: { farming },\n} = configs\n\nexport const useStakedFarms = () => {\n  const [stakedFarms, setStakedFarms] = useState<FarmState>({})\n  const { farms, debts } = useSelector((state: AppState) => state)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const checkStakedFarm = useCallback(\n    async (farmAddress: string) => {\n      const debtAddress = await farming.deriveDebtAddress(\n        walletAddress,\n        farmAddress,\n      )\n      const debtData = debts[debtAddress]\n      return debtData?.shares > BigInt(0)\n    },\n    [debts, walletAddress],\n  )\n\n  const filterStakedFarms = useCallback(\n    async (farms: FarmState) => {\n      const newSentreFarm: FarmState = {}\n      for (const farmAddress in farms) {\n        const staked = await checkStakedFarm(farmAddress)\n        if (staked) newSentreFarm[farmAddress] = farms[farmAddress]\n      }\n      setStakedFarms(newSentreFarm)\n    },\n    [checkStakedFarm],\n  )\n\n  useEffect(() => {\n    filterStakedFarms(farms)\n  }, [farms, filterStakedFarms])\n\n  return { stakedFarms, filterStakedFarms, checkStakedFarm }\n}\n","import LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\nimport { useStakedFarms } from 'app/hooks/listFarm/useStakedFarms'\n\nexport type StakedFarms = {\n  [x: string]: boolean\n}\n\nconst StakedFarm = () => {\n  const { stakedFarms } = useStakedFarms()\n  const farms = useSearchFarm(stakedFarms)\n\n  if (Object.keys(farms).length === 0) return <Empty />\n  return (\n    <Row gutter={[16, 16]}>\n      {Object.keys(farms).map((farmAddress) => {\n        return (\n          <Col span={24} key={farmAddress}>\n            <LazyLoad height={84}>\n              <ItemFarming farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default StakedFarm\n","import { useWallet } from 'senhub/providers'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { FarmState } from 'app/model/farms.controller'\n\nexport const useYourFarms = () => {\n  const [yourFarms, setYourFarms] = useState<FarmState>({})\n  const farms = useSelector((state: AppState) => state.farms)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const checkYourFarm = useCallback(\n    (address: string) => farms[address].owner === walletAddress,\n    [farms, walletAddress],\n  )\n\n  const filterYourFarms = useCallback(\n    (farms: FarmState) => {\n      const newSentreFarm: FarmState = {}\n      for (const farmAddress in farms) {\n        if (checkYourFarm(farmAddress))\n          newSentreFarm[farmAddress] = farms[farmAddress]\n      }\n      setYourFarms(newSentreFarm)\n    },\n    [checkYourFarm],\n  )\n\n  useEffect(() => {\n    filterYourFarms(farms)\n  }, [farms, filterYourFarms])\n\n  return { yourFarms, filterYourFarms, checkYourFarm }\n}\n","import LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport ItemFarming from './ItemFarming'\n\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\nimport { useYourFarms } from 'app/hooks/listFarm/useYourFarms'\n\nconst YourFarms = () => {\n  const { yourFarms } = useYourFarms()\n  const farms = useSearchFarm(yourFarms)\n\n  if (!Object.keys(farms).length) return <Empty />\n  return (\n    <Row gutter={[16, 16]}>\n      {Object.keys(farms).map((farmAddress) => {\n        return (\n          <Col span={24} key={farmAddress}>\n            <LazyLoad height={84}>\n              <ItemFarming farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default YourFarms\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forceCheck } from '@senswap/react-lazyload'\nimport { account } from '@senswap/sen-js'\nimport { useLocation } from 'react-router-dom'\n\nimport { Tabs } from 'antd'\nimport NewFarm from './newFarm'\nimport AllFarmings from './allFarms'\nimport SentreFarms from './sentreFarms'\nimport StakedFarm from './stakedFarm'\nimport YourFarms from './yourFamrs'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { useStakedFarms } from 'app/hooks/listFarm/useStakedFarms'\nimport { useYourFarms } from 'app/hooks/listFarm/useYourFarms'\nimport { useSentreFarms } from 'app/hooks/listFarm/useSentreFarms'\nimport { setSearch } from 'app/model/main.controller'\n\nenum FarmingTabs {\n  YourFarms = 'YourFarms',\n  SenFarm = 'SenFarm',\n  StakedFarm = 'StakedFarm',\n  AllFarms = 'AllFarms',\n}\n\nconst FarmingDetails = () => {\n  const locationSearch = useLocation().search\n  const farmSelected = useSelector((state: AppState) => state.main.search)\n  const { checkStakedFarm } = useStakedFarms()\n  const { checkYourFarm } = useYourFarms()\n  const { checkSentreFarm } = useSentreFarms()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const [tabActive, setTabActive] = useState<FarmingTabs>(FarmingTabs.SenFarm)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  // check tab activeKey with farmSelected\n  useEffect(() => {\n    ;(async () => {\n      /** isLoaded: just run only one time, avoid case select many times tab */\n      if (!account.isAddress(farmSelected) || isLoaded) return\n      try {\n        const yourFarm = checkYourFarm(farmSelected)\n        if (yourFarm) return setTabActive(FarmingTabs.YourFarms)\n\n        const sentreFarm = checkSentreFarm(farmSelected)\n        if (sentreFarm) return setTabActive(FarmingTabs.SenFarm)\n\n        const stakedFarm = await checkStakedFarm(farmSelected)\n        if (stakedFarm) return setTabActive(FarmingTabs.StakedFarm)\n\n        return setTabActive(FarmingTabs.AllFarms)\n      } catch (error) {\n      } finally {\n        setIsLoaded(true)\n      }\n    })()\n  }, [checkSentreFarm, checkStakedFarm, checkYourFarm, farmSelected, isLoaded])\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(locationSearch).get('search')\n    if (!searchParams) return\n    dispatch(setSearch({ search: searchParams }))\n    setTabActive(FarmingTabs.AllFarms)\n  }, [dispatch, locationSearch])\n\n  const onChange = (key: string) => {\n    setTabActive(key as FarmingTabs)\n    setTimeout(() => {\n      forceCheck()\n    }, 500)\n  }\n\n  return (\n    <Tabs\n      activeKey={tabActive}\n      onChange={onChange}\n      tabBarExtraContent={<NewFarm />}\n    >\n      <Tabs.TabPane tab=\"Sentre Farms\" key={FarmingTabs.SenFarm}>\n        <SentreFarms />\n      </Tabs.TabPane>\n      <Tabs.TabPane tab=\"Staked Farms\" key={FarmingTabs.StakedFarm}>\n        <StakedFarm />\n      </Tabs.TabPane>\n      <Tabs.TabPane tab=\"Your Farms\" key={FarmingTabs.YourFarms}>\n        <YourFarms />\n      </Tabs.TabPane>\n      <Tabs.TabPane tab=\"All Farms\" key={FarmingTabs.AllFarms}>\n        <AllFarmings />\n      </Tabs.TabPane>\n    </Tabs>\n  )\n}\n\nexport default FarmingDetails\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\nimport { useWallet } from 'senhub/providers'\nimport { getDebts, upsetDebt } from 'app/model/debts.controller'\nimport { AppDispatch } from 'app/model'\nimport { notifyError } from 'app/helper'\n\nconst {\n  sol: { farming },\n} = configs\n\n// Watch id\nlet watchId = 0\nlet prevLamports: bigint = BigInt(0)\n\nconst DebtWatcher = ({ children }: { children: JSX.Element }) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    wallet: { address: walletAddress, lamports },\n  } = useWallet()\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDebts({ owner: walletAddress })).unwrap()\n    } catch (er) {\n      await notifyError(er)\n    }\n  }, [dispatch, walletAddress])\n\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(walletAddress))\n      return console.warn('Wallet is not connected')\n    if (watchId) return console.warn('Already watched')\n    const filters = [\n      { dataSize: 89 },\n      { memcmp: { bytes: walletAddress, offset: 32 } },\n    ]\n    watchId = farming.watch((er, re: any) => {\n      if (er) return console.error(er)\n      const { type, address, data } = re\n      if (type === 'debt') return dispatch(upsetDebt({ address, data }))\n    }, filters)\n  }, [dispatch, walletAddress])\n\n  // When we close debts, there a high chance\n  // that the next balance will be greater than the current balance\n  // We use this trick to reload relevant list\n  useEffect(() => {\n    if (prevLamports && lamports > prevLamports) {\n      dispatch(getDebts({ owner: walletAddress }))\n    }\n    prevLamports = lamports\n  }, [dispatch, walletAddress, lamports])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await farming.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return children\n}\n\nexport default DebtWatcher\n","import { CSSProperties, useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Spin } from 'antd'\n\nimport { notifyError } from 'app/helper'\nimport { getFarms, upsetFarm } from 'app/model/farms.controller'\nimport configs from 'app/configs'\n\nconst {\n  sol: { farming, senAddress },\n} = configs\n\n// Watch id\nlet watchId = 0\n\nconst FarmWatcher = ({\n  children,\n  style = {},\n}: {\n  children: JSX.Element\n  style?: CSSProperties\n}) => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(false)\n\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true)\n      await dispatch(getFarms())\n    } catch (er) {\n      await notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }, [dispatch])\n\n  const watchData = useCallback(async () => {\n    if (watchId) return console.warn('Already watched')\n    const filters = [\n      { dataSize: 209 },\n      { memcmp: { bytes: senAddress, offset: 97 } },\n    ]\n    watchId = farming.watch((er, re: any) => {\n      if (er) return console.error(er)\n      const { type, address, data } = re\n      if (type !== 'farm') return\n      return dispatch(upsetFarm({ address, data }))\n    }, filters)\n  }, [dispatch])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    return () => {\n      ;(async () => {\n        try {\n          farming.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return (\n    <Spin spinning={loading} style={style}>\n      {children}\n    </Spin>\n  )\n}\n\nexport default FarmWatcher\n","import { CSSProperties } from 'react'\nimport DebtWatcher from './debtWatcher'\nimport FarmWatcher from './farmWatcher'\n\nconst Watcher = ({\n  children,\n  style,\n}: {\n  children: JSX.Element\n  style?: CSSProperties\n}) => {\n  return (\n    <FarmWatcher style={style}>\n      <DebtWatcher>{children}</DebtWatcher>\n    </FarmWatcher>\n  )\n}\n\nexport default Watcher\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { Row, Col, Input, Card, Button } from 'antd'\nimport Banner from './banner'\nimport FarmingDetails from './farmingDetails'\nimport Watcher from 'app/components/watcher'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setSearch } from 'app/model/main.controller'\n\nconst Page = () => {\n  const { search: locationSearch, pathname } = useLocation()\n  const { search } = useSelector((state: AppState) => state.main)\n  const dispatch = useDispatch<AppDispatch>()\n  const history = useHistory()\n\n  const handleOnChange = (e: any) => {\n    const searchParams = new URLSearchParams(locationSearch).get('search')\n    if (searchParams) history.push(pathname)\n    return dispatch(setSearch({ search: e.target.value }))\n  }\n\n  return (\n    <Watcher>\n      <Row gutter={[24, 24]} style={{ paddingBottom: 12 }} justify=\"center\">\n        <Col xs={24} lg={18}>\n          <Banner />\n        </Col>\n        <Col xs={24} lg={18}>\n          <Row gutter={[8, 8]}>\n            <Col xs={24} lg={8}>\n              <Card\n                bodyStyle={{ padding: 0 }}\n                style={{\n                  borderRadius: 8,\n                  background: 'transparent',\n                  boxShadow: 'unset',\n                }}\n              >\n                <Input\n                  placeholder=\"Search by name, address\"\n                  value={search}\n                  onChange={handleOnChange}\n                  prefix={\n                    search ? (\n                      <Button\n                        type=\"text\"\n                        style={{\n                          width: 'auto',\n                          height: 'auto',\n                          background: 'transparent',\n                        }}\n                        onClick={() => dispatch(setSearch({ search: '' }))}\n                        icon={<IonIcon name=\"close-outline\" />}\n                      />\n                    ) : (\n                      <IonIcon name=\"search-outline\" />\n                    )\n                  }\n                  bordered={false}\n                  size=\"large\"\n                />\n              </Card>\n            </Col>\n            <Col span={24}>\n              <FarmingDetails />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Watcher>\n  )\n}\n\nexport default Page\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Input } from 'antd'\nimport { AppDispatch, AppState } from 'app/model'\nimport { setSearch } from 'app/model/main.controller'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst SearchBar = ({ isHidden }: { isHidden: boolean }) => {\n  const { search } = useSelector((state: AppState) => state.main)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Card\n      className={isHidden ? 'hidden-class' : ''}\n      bodyStyle={{ padding: 8 }}\n      bordered={false}\n    >\n      <Input\n        value={search}\n        onChange={(e) => dispatch(setSearch({ search: e.target.value }))}\n        placeholder=\"Search\"\n        size=\"small\"\n        bordered={false}\n        prefix={\n          <Button\n            type=\"text\"\n            style={{ marginLeft: -7 }}\n            size=\"small\"\n            icon={<IonIcon name=\"search-outline\" />}\n          />\n        }\n      />\n    </Card>\n  )\n}\n\nexport default SearchBar\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { utils } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Divider, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'app/shared/components/mint'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { useReward } from 'app/hooks/useReward'\nimport { useDebt } from 'app/hooks/useDebt'\nimport { useFarmRoi } from 'app/hooks/useFarmRoi'\nimport configs from 'app/configs'\nimport { numeric } from 'shared/util'\nimport { setSearch } from 'app/model/main.controller'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst FarmCard = ({ farmAddress }: { farmAddress: string }) => {\n  const reward = useReward(farmAddress)\n  const farmData = useSelector((state: AppState) => state.farms[farmAddress])\n  const history = useHistory()\n  const { data } = useDebt(farmAddress)\n  const { apr } = useFarmRoi(farmAddress)\n  const dispatch = useDispatch<AppDispatch>()\n  const lptDecimal = useMintDecimals(farmData.mint_stake)\n\n  const handleDetail = useCallback(() => {\n    history.push(`/app/${appId}`)\n    dispatch(setSearch({ search: farmAddress }))\n  }, [dispatch, farmAddress, history])\n\n  let amountLptShared = '0'\n  if (data && lptDecimal) {\n    amountLptShared = utils.undecimalize(data.shares, lptDecimal)\n  }\n\n  return (\n    <Card bordered={false} className=\"farm-card-widget\">\n      <Row>\n        <Col span={24}>\n          <Row align=\"middle\" gutter={[12, 12]}>\n            <Col flex=\"auto\">\n              <Space>\n                <MintAvatar mintAddress={farmData.mint_stake} />\n                <MintSymbol mintAddress={farmData.mint_stake} />\n              </Space>\n            </Col>\n\n            <Col>\n              <Button\n                onClick={handleDetail}\n                type=\"text\"\n                icon={<IonIcon name=\"open-outline\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Divider style={{ margin: '12px 0' }} />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[6, 6]}>\n            <Col flex=\"auto\">\n              <Space>\n                <MintAvatar mintAddress={farmData.mint_reward} />\n                <Typography.Text type=\"secondary\">Reward</Typography.Text>\n              </Space>\n            </Col>\n            <Col>\n              <Space>\n                <Typography.Text>\n                  {numeric(reward).format('0,0.00[00]')}\n                </Typography.Text>\n                <MintSymbol mintAddress={farmData.mint_reward} />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">APR</Typography.Text>\n                </Col>\n                <Col>\n                  <Space>\n                    <Typography.Text>\n                      {numeric(apr).format('0,0.[00]%')}\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    Your stacked LPT\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Space>\n                    <Typography.Text>\n                      {numeric(amountLptShared).format('0,0.00[00]')}\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default FarmCard\n","import LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport FarmCard from '../farmCard'\n\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\nimport { useStakedFarms } from 'app/hooks/listFarm/useStakedFarms'\n\nconst Staked = () => {\n  const { stakedFarms } = useStakedFarms()\n  const farms = useSearchFarm(stakedFarms)\n\n  if (Object.keys(farms).length === 0) return <Empty />\n  return (\n    <Row gutter={[12, 12]}>\n      {Object.keys(farms).map((farmAddress) => {\n        return (\n          <Col span={24} key={farmAddress}>\n            <LazyLoad height={185} overflow>\n              <FarmCard farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n      <Col />\n    </Row>\n  )\n}\n\nexport default Staked\n","import LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport FarmCard from '../farmCard'\n\nimport { useSearchFarm } from 'app/hooks/useSearchFarm'\nimport { useYourFarms } from 'app/hooks/listFarm/useYourFarms'\n\nconst YourFarms = () => {\n  const { yourFarms } = useYourFarms()\n  const farms = useSearchFarm(yourFarms)\n\n  if (!Object.keys(farms).length) return <Empty />\n  return (\n    <Row gutter={[16, 16]}>\n      {Object.keys(farms).map((farmAddress) => {\n        return (\n          <Col span={24} key={farmAddress}>\n            <LazyLoad height={84}>\n              <FarmCard farmAddress={farmAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n      <Col />\n    </Row>\n  )\n}\n\nexport default YourFarms\n","import { Fragment, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forceCheck } from '@senswap/react-lazyload'\n\nimport { Button, Tabs } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport SearchBar from './searchBar'\nimport StakedFarms from './stakedFarms'\nimport YourFarms from './yourFamrs'\nimport Watcher from 'app/components/watcher'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setSearch } from 'app/model/main.controller'\n\nconst Widget = () => {\n  const [isOpenSearch, setIsOpenSearch] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const { search } = useSelector((state: AppState) => state.main)\n\n  const onToggle = () => {\n    if (isOpenSearch) dispatch(setSearch({ search: '' }))\n    setIsOpenSearch(!isOpenSearch)\n  }\n\n  useEffect(() => {\n    if (search) setIsOpenSearch(true)\n  }, [search])\n\n  return (\n    <Fragment>\n      <Button\n        className=\"button-search\"\n        type=\"text\"\n        icon={\n          <IonIcon name={isOpenSearch ? 'close-outline' : 'search-outline'} />\n        }\n        onClick={onToggle}\n      />\n      <SearchBar isHidden={!search && !isOpenSearch} />\n      <Watcher style={{ height: 336 }}>\n        <Tabs\n          className={!isOpenSearch ? '' : 'hidden-tab'}\n          onChange={() =>\n            setTimeout(() => {\n              forceCheck()\n            }, 300)\n          }\n        >\n          <Tabs.TabPane tab=\"Staked farms\" key=\"staked-farm\">\n            <StakedFarms />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Your farms\" key=\"your-farm\">\n            <YourFarms />\n          </Tabs.TabPane>\n        </Tabs>\n      </Watcher>\n    </Fragment>\n  )\n}\n\nexport default Widget\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  PoolProvider,\n  MintProvider,\n  AccountProvider,\n} from 'senhub/providers'\n\nimport PageView from 'app/page'\nimport WidgetView from 'app/widget'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\nimport './static/styles/index.less'\nimport './static/styles/dark.less'\nimport './static/styles/light.less'\n\nimport 'app/static/styles/index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd>\n      <PoolProvider>\n        <MintProvider>\n          <AccountProvider>\n            <WalletProvider>\n              <Provider store={model}>\n                <PageView />\n              </Provider>\n            </WalletProvider>\n          </AccountProvider>\n        </MintProvider>\n      </PoolProvider>\n    </UIProvider>\n  )\n}\n\nexport const widgetConfig: WidgetConfig = {\n  size: 'small',\n  type: 'solid',\n}\n\nexport const Widget = () => {\n  return (\n    <UIProvider appId={appId} antd>\n      <PoolProvider>\n        <MintProvider>\n          <AccountProvider>\n            <WalletProvider>\n              <Provider store={model}>\n                <WidgetView />\n              </Provider>\n            </WalletProvider>\n          </AccountProvider>\n        </MintProvider>\n      </PoolProvider>\n    </UIProvider>\n  )\n}\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceVisible = exports.forceCheck = exports.lazyload = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _event = require('./utils/event');\n\nvar _scrollParent = require('./utils/scrollParent');\n\nvar _scrollParent2 = _interopRequireDefault(_scrollParent);\n\nvar _debounce = require('./utils/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _throttle = require('./utils/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar defaultBoundingClientRect = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  width: 0,\n  height: 0\n};\nvar LISTEN_FLAG = 'data-lazyload-listened';\nvar listeners = [];\nvar pending = [];\n\n// try to handle passive events\nvar passiveEventSupported = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveEventSupported = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n// if they are supported, setup the optional params\n// IMPORTANT: FALSE doubles as the default CAPTURE value!\nvar passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;\n\n/**\n * Check if `component` is visible in overflow container `parent`\n * @param  {node} component React component\n * @param  {node} parent    component's scroll parent\n * @return {bool}\n */\nvar checkOverflowVisible = function checkOverflowVisible(component, parent) {\n  var node = component.ref;\n\n  var parentTop = void 0;\n  var parentLeft = void 0;\n  var parentHeight = void 0;\n  var parentWidth = void 0;\n\n  try {\n    ;\n    var _parent$getBoundingCl = parent.getBoundingClientRect();\n\n    parentTop = _parent$getBoundingCl.top;\n    parentLeft = _parent$getBoundingCl.left;\n    parentHeight = _parent$getBoundingCl.height;\n    parentWidth = _parent$getBoundingCl.width;\n  } catch (e) {\n    ;parentTop = defaultBoundingClientRect.top;\n    parentLeft = defaultBoundingClientRect.left;\n    parentHeight = defaultBoundingClientRect.height;\n    parentWidth = defaultBoundingClientRect.width;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  var windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  // calculate top and height of the intersection of the element's scrollParent and viewport\n  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport\n  var intersectionLeft = Math.max(parentLeft, 0); // intersection's left relative to viewport\n  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height\n  var intersectionWidth = Math.min(windowInnerWidth, parentLeft + parentWidth) - intersectionLeft; // width\n\n  // check whether the element is visible in the intersection\n  var top = void 0;\n  var left = void 0;\n  var height = void 0;\n  var width = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie.top;\n    left = _node$getBoundingClie.left;\n    height = _node$getBoundingClie.height;\n    width = _node$getBoundingClie.width;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    left = defaultBoundingClientRect.left;\n    height = defaultBoundingClientRect.height;\n    width = defaultBoundingClientRect.width;\n  }\n\n  var offsetTop = top - intersectionTop; // element's top relative to intersection\n  var offsetLeft = left - intersectionLeft; // element's left relative to intersection\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0 && offsetLeft - offsets[0] <= intersectionWidth && offsetLeft + width + offsets[1] >= 0;\n};\n\n/**\n * Check if `component` is visible in document\n * @param  {node} component React component\n * @return {bool}\n */\nvar checkNormalVisible = function checkNormalVisible(component) {\n  var node = component.ref;\n\n  // If this element is hidden by css rules somehow, it's definitely invisible\n  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;\n\n  var top = void 0;\n  var elementHeight = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie2 = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie2.top;\n    elementHeight = _node$getBoundingClie2.height;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    elementHeight = defaultBoundingClientRect.height;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;\n};\n\n/**\n * Detect if element is visible in viewport, if so, set `visible` state to true.\n * If `once` prop is provided true, remove component as listener after checkVisible\n *\n * @param  {React} component   React component that respond to scroll and resize\n */\nvar checkVisible = function checkVisible(component) {\n  var node = component.ref;\n  if (!(node instanceof HTMLElement)) {\n    return;\n  }\n\n  var parent = (0, _scrollParent2.default)(node);\n  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;\n  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);\n  if (visible) {\n    // Avoid extra render if previously is visible\n    if (!component.visible) {\n      if (component.props.once) {\n        pending.push(component);\n      }\n\n      component.visible = true;\n      component.forceUpdate();\n    }\n  } else if (!(component.props.once && component.visible)) {\n    component.visible = false;\n    if (component.props.unmountIfInvisible) {\n      component.forceUpdate();\n    }\n  }\n};\n\nvar purgePending = function purgePending() {\n  pending.forEach(function (component) {\n    var index = listeners.indexOf(component);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  });\n\n  pending = [];\n};\n\nvar lazyLoadHandler = function lazyLoadHandler() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    checkVisible(listener);\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n/**\n * Forces the component to display regardless of whether the element is visible in the viewport.\n */\nvar forceVisible = function forceVisible() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    listener.visible = true;\n    listener.forceUpdate();\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n// Depending on component's props\nvar delayType = void 0;\nvar finalLazyLoadHandler = null;\n\nvar isString = function isString(string) {\n  return typeof string === 'string';\n};\n\nvar LazyLoad = function (_Component) {\n  _inherits(LazyLoad, _Component);\n\n  function LazyLoad(props) {\n    _classCallCheck(this, LazyLoad);\n\n    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));\n\n    _this.visible = false;\n    _this.setRef = _this.setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyLoad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // It's unlikely to change delay type on the fly, this is mainly\n      // designed for tests\n      var scrollport = window;\n      var scrollContainer = this.props.scrollContainer;\n\n      if (scrollContainer) {\n        if (isString(scrollContainer)) {\n          scrollport = scrollport.document.querySelector(scrollContainer);\n        }\n      }\n      var needResetFinalLazyLoadHandler = this.props.debounce !== undefined && delayType === 'throttle' || delayType === 'debounce' && this.props.debounce === undefined;\n\n      if (needResetFinalLazyLoadHandler) {\n        (0, _event.off)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        finalLazyLoadHandler = null;\n      }\n\n      if (!finalLazyLoadHandler) {\n        if (this.props.debounce !== undefined) {\n          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);\n          delayType = 'debounce';\n        } else if (this.props.throttle !== undefined) {\n          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);\n          delayType = 'throttle';\n        } else {\n          finalLazyLoadHandler = lazyLoadHandler;\n        }\n      }\n\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);\n          if (listenerCount === 1) {\n            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n          }\n          parent.setAttribute(LISTEN_FLAG, listenerCount);\n        }\n      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {\n        var _props = this.props,\n            scroll = _props.scroll,\n            resize = _props.resize;\n\n\n        if (scroll) {\n          (0, _event.on)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        }\n\n        if (resize) {\n          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        }\n      }\n\n      listeners.push(this);\n      checkVisible(this);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return this.visible;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;\n          if (listenerCount === 0) {\n            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n            parent.removeAttribute(LISTEN_FLAG);\n          } else {\n            parent.setAttribute(LISTEN_FLAG, listenerCount);\n          }\n        }\n      }\n\n      var index = listeners.indexOf(this);\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n\n      if (listeners.length === 0 && typeof window !== 'undefined') {\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);\n      }\n    }\n  }, {\n    key: 'setRef',\n    value: function setRef(element) {\n      if (element) {\n        this.ref = element;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          height = _props2.height,\n          children = _props2.children,\n          placeholder = _props2.placeholder,\n          className = _props2.className,\n          classNamePrefix = _props2.classNamePrefix,\n          style = _props2.style;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: classNamePrefix + '-wrapper ' + className,\n          ref: this.setRef,\n          style: style\n        },\n        this.visible ? children : placeholder ? placeholder : _react2.default.createElement('div', {\n          style: { height: height },\n          className: classNamePrefix + '-placeholder'\n        })\n      );\n    }\n  }]);\n\n  return LazyLoad;\n}(_react.Component);\n\nLazyLoad.propTypes = {\n  className: _propTypes2.default.string,\n  classNamePrefix: _propTypes2.default.string,\n  once: _propTypes2.default.bool,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n  overflow: _propTypes2.default.bool,\n  resize: _propTypes2.default.bool,\n  scroll: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  placeholder: _propTypes2.default.node,\n  scrollContainer: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  unmountIfInvisible: _propTypes2.default.bool,\n  style: _propTypes2.default.object\n};\n\nLazyLoad.defaultProps = {\n  className: '',\n  classNamePrefix: 'lazyload',\n  once: false,\n  offset: 0,\n  overflow: false,\n  resize: false,\n  scroll: true,\n  unmountIfInvisible: false\n};\n\nvar getDisplayName = function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nvar decorator = function decorator() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function lazyload(WrappedComponent) {\n    return function (_Component2) {\n      _inherits(LazyLoadDecorated, _Component2);\n\n      function LazyLoadDecorated() {\n        _classCallCheck(this, LazyLoadDecorated);\n\n        var _this2 = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));\n\n        _this2.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);\n        return _this2;\n      }\n\n      _createClass(LazyLoadDecorated, [{\n        key: 'render',\n        value: function render() {\n          return _react2.default.createElement(\n            LazyLoad,\n            options,\n            _react2.default.createElement(WrappedComponent, this.props)\n          );\n        }\n      }]);\n\n      return LazyLoadDecorated;\n    }(_react.Component);\n  };\n};\n\nexports.lazyload = decorator;\nexports.default = LazyLoad;\nexports.forceCheck = lazyLoadHandler;\nexports.forceVisible = forceVisible;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0;\n  var args = void 0;\n  var context = void 0;\n  var timestamp = void 0;\n  var result = void 0;\n\n  var later = function later() {\n    var last = +new Date() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = null;\n          args = null;\n        }\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = +new Date();\n\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = null;\n      args = null;\n    }\n\n    return result;\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.on = on;\nexports.off = off;\nfunction on(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.addEventListener) {\n    el.addEventListener(eventName, callback, opts);\n  } else if (el.attachEvent) {\n    el.attachEvent(\"on\" + eventName, function (e) {\n      callback.call(el, e || window.event);\n    });\n  }\n}\n\nfunction off(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.removeEventListener) {\n    el.removeEventListener(eventName, callback, opts);\n  } else if (el.detachEvent) {\n    el.detachEvent(\"on\" + eventName, callback);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * @fileOverview Find scroll parent\n */\n\nexports.default = function (node) {\n  if (!(node instanceof HTMLElement)) {\n    return document.documentElement;\n  }\n\n  var excludeStaticParent = node.style.position === 'absolute';\n  var overflowRegex = /(scroll|auto|overlay)/;\n  var parent = node;\n\n  while (parent) {\n    if (!parent.parentNode) {\n      return node.ownerDocument || document.documentElement;\n    }\n\n    var style = window.getComputedStyle(parent);\n    var position = style.position;\n    var overflow = style.overflow;\n    var overflowX = style['overflow-x'];\n    var overflowY = style['overflow-y'];\n\n    if (position === 'static' && excludeStaticParent) {\n      parent = parent.parentNode;\n      continue;\n    }\n\n    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {\n      return parent;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return node.ownerDocument || node.documentElement || document.documentElement;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throttle;\n/*eslint-disable */\nfunction throttle(fn, threshhold, scope) {\n  threshhold || (threshhold = 250);\n  var last, deferTimer;\n  return function () {\n    var context = scope || this;\n\n    var now = +new Date(),\n        args = arguments;\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n"],"names":["CUSTOM_ICONS","forwardRef","name","className","props","ref","cln","src","shared","appId","process","url","senhub","development","staging","production","devnet","node","spltAddress","splataAddress","senAddress","farmingAddress","farming","Farming","this","senOwners","testnet","mainnet","manifest","env","sol","net","DEFAULT_CACHE_CONFIG","ttl","DEFAULT_SINGLE_FLIGHT_CONFIG","limit","calls","time","cache","RequestQueue","constructor","key","resolveQueue","rejectQueue","add","resolve","reject","push","resolves","data","length","shift","rejects","error","SingleFlightCache","value","configs","mapCache","set","setTimeout","delete","get","Map","DataLoader","instanceKey","JSON","stringify","mapInstance","has","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","Object","assign","cacheData","Promise","isFetch","request","fetch","validateLimit","addRequestQueue","createTimeLogs","then","response","catch","finally","fetchRequestQueue","clearInterval","setInterval","now","Date","getTime","asyncWait","ms","shortenAddress","address","num","delimiter","substring","explorer","addressOrTxId","account","numeric","numbro","fetchCGK","async","ticket","utils","DEFAULT_DATA","icon","price","priceChange","rank","symbol","totalVolume","mintAddress","cgkData","setCgkData","useState","tokenProvider","useMint","fetchCgkData","useCallback","token","findByAddress","extensions","coingeckoId","useEffect","pools","usePool","tokenInfo","setTokenInfo","fetchTokenInfo","poolData","values","find","mint_lpt","undefined","mint_a","mint_b","tokenA","tokenB","size","isReserve","tokens","useTokenProvider","convertToken","useMemo","cloneToken","parse","reverse","Avatar","style","display","whiteSpace","map","i","logoURI","backgroundColor","border","separator","isReverse","symbols","shortenAddr","substr","join","useMintUsd","getMint","getTokenUsd","amount","Error","Number","decimals","getTotalValue","pool","reserve_a","reserve_b","BigInt","supply","deltaA","deltaB","Swap","senOwner","useSentreFarms","farms","useSelector","state","sentreFarms","setSentreFarms","checkSentreFarm","farmAddress","farm","includes","owner","filterSentreFarms","newSentreFarm","addr","ui","width","useUI","senCgk","useMintCgk","tvl","setTvl","calcTvl","farmsTvl","all","total_shares","mint_stake","farmTvl","useSentreFarmsTvl","desktop","xsSpan","rowSpacing","spaceSize","spaceDirection","iconName","positiveFarms","count","Card","bordered","Row","gutter","Col","span","Typography","level","color","Space","direction","format","Divider","type","height","align","timeoutId","max","onValue","onChange","setError","cursor","setCursor","innerRef","useRef","onAmount","val","onError","er","clearTimeout","test","parseFloat","toString","current","setSelectionRange","Tooltip","title","visible","Input","e","target","selectionStart","notifySuccess","content","txId","window","notify","description","onClick","open","notifyError","message","setDecimals","getDecimals","fetchDecimals","PERIODS","Hour","Day","Month","Year","onClose","setVisibleInputTokenModal","setValue","duration","setDuration","period","setPeriod","loading","setLoading","rewardDecimal","useMintDecimals","wallet","walletAddress","useWallet","disabled","bodyStyle","padding","marginLeft","fontSize","placeholder","prefix","suffix","Button","keys","nextIndex","findIndex","sentre","reward","calculatePeriod","initializeFarm","block","accountAddress","accounts","mint","useAccount","wrap","flex","href","stopPropagation","keyword","setKeyword","onHideInputTokenModal","searchedResult","accountAddresses","onSearch","setSearchedResult","mintAddresses","searchedAccountAddresses","filter","useMintSelection","overflow","setVisible","setMintAddress","visibleInputTokenModal","background","Modal","onCancel","footer","closeIcon","label","tooltip","shape","useDebt","debtAddress","setDebtAddress","debts","debtData","fetchDebtAddress","debtAddr","deriveDebtAddress","useAccountStake","farmData","accountStake","setAccountStake","findAccountStake","splt","accountAddr","deriveAssociatedAddress","newAccountData","isEqual","debt","shares","compensation","delay","global","Math","floor","genesis_timestamp","precision","newDebt","yieldFarm","FARMING_ERRORS","prototype","toJSON","bigintSerializationMiddleware","serializableCheck","isSerializable","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","NAME","getFarms","createAsyncThunk","_","getState","connection","getProgramAccounts","farmingProgramId","filters","dataSize","memcmp","bytes","offset","bulk","forEach","pubkey","buf","toBase58","parseFarmData","getFarm","getFarmData","upsetFarm","deleteFarm","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","getDebts","parseDebtData","getDebt","getDebtData","upsetDebt","deleteDebt","setSearch","search","configureStore","middleware","getDefaultMiddleware","devTools","reducer","main","HarvestValidator","store","getAddress","calculateReward","treasury_reward","treasury_stake","rewardBalance","getAccountData","checkSeedBalance","setAmount","disable","setDisable","isLoading","setIsLoading","lptDecimal","stakedValue","boxShadow","marginRight","ammount","senWallet","harvestValidator","validate","unstake","available","senWalletAddr","initializeAccounts","initializeAccount","stake","ellipsis","onCopy","copieAddress","xs","sm","md","lg","CopyToClipboard","text","useBudget","budget","setBudget","mint_reward","decimal","budgetSymbol","fetchBudgetData","setCopieAddress","mintSymbol","setMintSymbol","farmDecimal","poolAddress","farmReward","formatPeriod","formatTime","wordBreak","balance","setBalance","srcAddress","borderRadius","margin","seed","dstAddress","unseed","NewFarmStep","FarmStatus","isActiveFarm","isActive","btnStyle","btnName","freeze","thaw","dispatch","useDispatch","closeFarm","ExtraTypography","visibleTooltip","setVisibleTooltip","mintFarmAddress","Fragment","destroyOnClose","centered","lineHeight","fontWeight","Tabs","tab","lptWalletAddress","rid","useReward","setReward","calcReward","pendingReward","useFarmLiquidity","liquidity","setLiquidity","calcLiquidity","totalValue","useFarmRoi","roi","setRoi","rewardPerDay","totalReward","apr","LOW_BUDGET","userReward","farmPool","setFarmPool","findPoolData","mintStake","poolAddr","newPoolData","useFarmPool","history","useHistory","activeKey","setActiveKey","visibleInfo","setVisibleInfo","warning","setWarning","isOwner","farmSelected","isFreezeFarm","isFreeze","onActive","TooltipApr","amountLptShared","freezeStyle","opacity","position","zIndex","hoverable","justify","Collapse","header","showArrow","order","harvest","useSearchFarm","farmFilter","setFarmFilter","findPool","mintLpt","newFarmFilter","listTokenAddress","info","sort","a","b","forceCheck","searchedFarms","listFarmAddress","Empty","filterFarm","sortedFarm","fistFarm","secondFarm","useStakedFarms","stakedFarms","setStakedFarms","checkStakedFarm","filterStakedFarms","useYourFarms","yourFarms","setYourFarms","checkYourFarm","filterYourFarms","FarmingTabs","locationSearch","useLocation","tabActive","setTabActive","SenFarm","isLoaded","setIsLoaded","YourFarms","stakedFarm","StakedFarm","AllFarms","searchParams","URLSearchParams","tabBarExtraContent","watchId","prevLamports","children","lamports","fetchData","unwrap","watchData","console","warn","watch","re","unwatch","Spin","spinning","pathname","paddingBottom","isHidden","handleDetail","isOpenSearch","setIsOpenSearch","Page","UIProvider","antd","PoolProvider","MintProvider","AccountProvider","WalletProvider","Provider","model","widgetConfig","Widget","storage","getNetwork","KEY","driver","localStorage","convert","getItem","setItem","clear","exports","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_react","require","_react2","_interopRequireDefault","_propTypes2","_event","_scrollParent2","_debounce2","_throttle2","__esModule","default","_classCallCheck","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","defaultBoundingClientRect","LISTEN_FLAG","listeners","pending","passiveEventSupported","opts","addEventListener","passiveEvent","capture","passive","checkVisible","component","HTMLElement","parent","ownerDocument","document","documentElement","parentTop","parentLeft","parentHeight","parentWidth","_parent$getBoundingCl","getBoundingClientRect","top","left","windowInnerHeight","innerHeight","clientHeight","windowInnerWidth","innerWidth","clientWidth","intersectionTop","intersectionLeft","intersectionHeight","min","intersectionWidth","_node$getBoundingClie","offsetTop","offsetLeft","offsets","checkOverflowVisible","offsetWidth","offsetHeight","getClientRects","elementHeight","_node$getBoundingClie2","checkNormalVisible","once","forceUpdate","unmountIfInvisible","purgePending","index","indexOf","splice","lazyLoadHandler","listener","delayType","finalLazyLoadHandler","LazyLoad","_Component","_this","setRef","bind","scrollport","scrollContainer","querySelector","needResetFinalLazyLoadHandler","debounce","off","throttle","getAttribute","listenerCount","setAttribute","_props","scroll","resize","on","removeEventListener","removeAttribute","element","_props2","classNamePrefix","createElement","Component","propTypes","string","bool","oneOfType","number","arrayOf","object","defaultProps","getDisplayName","WrappedComponent","displayName","func","wait","immediate","timeout","args","context","timestamp","result","later","last","apply","arguments","callNow","el","eventName","attachEvent","event","detachEvent","excludeStaticParent","overflowRegex","parentNode","getComputedStyle","overflowX","overflowY","fn","threshhold","scope","deferTimer","hasElementType","Element","hasMap","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","it","entries","next","done","RegExp","source","flags","valueOf","hasOwnProperty","$$typeof","module","match"],"sourceRoot":""}