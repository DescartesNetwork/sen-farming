{"version":3,"file":"static/js/462.a4967539.chunk.js","mappings":"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","sources":["../node_modules/@senswap/react-lazyload/lib/index.js","../node_modules/@senswap/react-lazyload/lib/utils/debounce.js","../node_modules/@senswap/react-lazyload/lib/utils/event.js","../node_modules/@senswap/react-lazyload/lib/utils/scrollParent.js","../node_modules/@senswap/react-lazyload/lib/utils/throttle.js","../node_modules/@senswap/sen-js/dist/index.js","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/util/promise-timeout.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/copy-to-clipboard/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-copy-to-clipboard/lib/Component.js","../node_modules/react-copy-to-clipboard/lib/index.js","../node_modules/react-fast-compare/index.js","../node_modules/toggle-selection/index.js","../node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceVisible = exports.forceCheck = exports.lazyload = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _event = require('./utils/event');\n\nvar _scrollParent = require('./utils/scrollParent');\n\nvar _scrollParent2 = _interopRequireDefault(_scrollParent);\n\nvar _debounce = require('./utils/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _throttle = require('./utils/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar defaultBoundingClientRect = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  width: 0,\n  height: 0\n};\nvar LISTEN_FLAG = 'data-lazyload-listened';\nvar listeners = [];\nvar pending = [];\n\n// try to handle passive events\nvar passiveEventSupported = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveEventSupported = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n// if they are supported, setup the optional params\n// IMPORTANT: FALSE doubles as the default CAPTURE value!\nvar passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;\n\n/**\n * Check if `component` is visible in overflow container `parent`\n * @param  {node} component React component\n * @param  {node} parent    component's scroll parent\n * @return {bool}\n */\nvar checkOverflowVisible = function checkOverflowVisible(component, parent) {\n  var node = component.ref;\n\n  var parentTop = void 0;\n  var parentLeft = void 0;\n  var parentHeight = void 0;\n  var parentWidth = void 0;\n\n  try {\n    ;\n    var _parent$getBoundingCl = parent.getBoundingClientRect();\n\n    parentTop = _parent$getBoundingCl.top;\n    parentLeft = _parent$getBoundingCl.left;\n    parentHeight = _parent$getBoundingCl.height;\n    parentWidth = _parent$getBoundingCl.width;\n  } catch (e) {\n    ;parentTop = defaultBoundingClientRect.top;\n    parentLeft = defaultBoundingClientRect.left;\n    parentHeight = defaultBoundingClientRect.height;\n    parentWidth = defaultBoundingClientRect.width;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  var windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  // calculate top and height of the intersection of the element's scrollParent and viewport\n  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport\n  var intersectionLeft = Math.max(parentLeft, 0); // intersection's left relative to viewport\n  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height\n  var intersectionWidth = Math.min(windowInnerWidth, parentLeft + parentWidth) - intersectionLeft; // width\n\n  // check whether the element is visible in the intersection\n  var top = void 0;\n  var left = void 0;\n  var height = void 0;\n  var width = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie.top;\n    left = _node$getBoundingClie.left;\n    height = _node$getBoundingClie.height;\n    width = _node$getBoundingClie.width;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    left = defaultBoundingClientRect.left;\n    height = defaultBoundingClientRect.height;\n    width = defaultBoundingClientRect.width;\n  }\n\n  var offsetTop = top - intersectionTop; // element's top relative to intersection\n  var offsetLeft = left - intersectionLeft; // element's left relative to intersection\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0 && offsetLeft - offsets[0] <= intersectionWidth && offsetLeft + width + offsets[1] >= 0;\n};\n\n/**\n * Check if `component` is visible in document\n * @param  {node} component React component\n * @return {bool}\n */\nvar checkNormalVisible = function checkNormalVisible(component) {\n  var node = component.ref;\n\n  // If this element is hidden by css rules somehow, it's definitely invisible\n  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;\n\n  var top = void 0;\n  var elementHeight = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie2 = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie2.top;\n    elementHeight = _node$getBoundingClie2.height;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    elementHeight = defaultBoundingClientRect.height;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;\n};\n\n/**\n * Detect if element is visible in viewport, if so, set `visible` state to true.\n * If `once` prop is provided true, remove component as listener after checkVisible\n *\n * @param  {React} component   React component that respond to scroll and resize\n */\nvar checkVisible = function checkVisible(component) {\n  var node = component.ref;\n  if (!(node instanceof HTMLElement)) {\n    return;\n  }\n\n  var parent = (0, _scrollParent2.default)(node);\n  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;\n  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);\n  if (visible) {\n    // Avoid extra render if previously is visible\n    if (!component.visible) {\n      if (component.props.once) {\n        pending.push(component);\n      }\n\n      component.visible = true;\n      component.forceUpdate();\n    }\n  } else if (!(component.props.once && component.visible)) {\n    component.visible = false;\n    if (component.props.unmountIfInvisible) {\n      component.forceUpdate();\n    }\n  }\n};\n\nvar purgePending = function purgePending() {\n  pending.forEach(function (component) {\n    var index = listeners.indexOf(component);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  });\n\n  pending = [];\n};\n\nvar lazyLoadHandler = function lazyLoadHandler() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    checkVisible(listener);\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n/**\n * Forces the component to display regardless of whether the element is visible in the viewport.\n */\nvar forceVisible = function forceVisible() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    listener.visible = true;\n    listener.forceUpdate();\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n// Depending on component's props\nvar delayType = void 0;\nvar finalLazyLoadHandler = null;\n\nvar isString = function isString(string) {\n  return typeof string === 'string';\n};\n\nvar LazyLoad = function (_Component) {\n  _inherits(LazyLoad, _Component);\n\n  function LazyLoad(props) {\n    _classCallCheck(this, LazyLoad);\n\n    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));\n\n    _this.visible = false;\n    _this.setRef = _this.setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyLoad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // It's unlikely to change delay type on the fly, this is mainly\n      // designed for tests\n      var scrollport = window;\n      var scrollContainer = this.props.scrollContainer;\n\n      if (scrollContainer) {\n        if (isString(scrollContainer)) {\n          scrollport = scrollport.document.querySelector(scrollContainer);\n        }\n      }\n      var needResetFinalLazyLoadHandler = this.props.debounce !== undefined && delayType === 'throttle' || delayType === 'debounce' && this.props.debounce === undefined;\n\n      if (needResetFinalLazyLoadHandler) {\n        (0, _event.off)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        finalLazyLoadHandler = null;\n      }\n\n      if (!finalLazyLoadHandler) {\n        if (this.props.debounce !== undefined) {\n          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);\n          delayType = 'debounce';\n        } else if (this.props.throttle !== undefined) {\n          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);\n          delayType = 'throttle';\n        } else {\n          finalLazyLoadHandler = lazyLoadHandler;\n        }\n      }\n\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);\n          if (listenerCount === 1) {\n            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n          }\n          parent.setAttribute(LISTEN_FLAG, listenerCount);\n        }\n      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {\n        var _props = this.props,\n            scroll = _props.scroll,\n            resize = _props.resize;\n\n\n        if (scroll) {\n          (0, _event.on)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        }\n\n        if (resize) {\n          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        }\n      }\n\n      listeners.push(this);\n      checkVisible(this);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return this.visible;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;\n          if (listenerCount === 0) {\n            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n            parent.removeAttribute(LISTEN_FLAG);\n          } else {\n            parent.setAttribute(LISTEN_FLAG, listenerCount);\n          }\n        }\n      }\n\n      var index = listeners.indexOf(this);\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n\n      if (listeners.length === 0 && typeof window !== 'undefined') {\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);\n      }\n    }\n  }, {\n    key: 'setRef',\n    value: function setRef(element) {\n      if (element) {\n        this.ref = element;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          height = _props2.height,\n          children = _props2.children,\n          placeholder = _props2.placeholder,\n          className = _props2.className,\n          classNamePrefix = _props2.classNamePrefix,\n          style = _props2.style;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: classNamePrefix + '-wrapper ' + className,\n          ref: this.setRef,\n          style: style\n        },\n        this.visible ? children : placeholder ? placeholder : _react2.default.createElement('div', {\n          style: { height: height },\n          className: classNamePrefix + '-placeholder'\n        })\n      );\n    }\n  }]);\n\n  return LazyLoad;\n}(_react.Component);\n\nLazyLoad.propTypes = {\n  className: _propTypes2.default.string,\n  classNamePrefix: _propTypes2.default.string,\n  once: _propTypes2.default.bool,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n  overflow: _propTypes2.default.bool,\n  resize: _propTypes2.default.bool,\n  scroll: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  placeholder: _propTypes2.default.node,\n  scrollContainer: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  unmountIfInvisible: _propTypes2.default.bool,\n  style: _propTypes2.default.object\n};\n\nLazyLoad.defaultProps = {\n  className: '',\n  classNamePrefix: 'lazyload',\n  once: false,\n  offset: 0,\n  overflow: false,\n  resize: false,\n  scroll: true,\n  unmountIfInvisible: false\n};\n\nvar getDisplayName = function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nvar decorator = function decorator() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function lazyload(WrappedComponent) {\n    return function (_Component2) {\n      _inherits(LazyLoadDecorated, _Component2);\n\n      function LazyLoadDecorated() {\n        _classCallCheck(this, LazyLoadDecorated);\n\n        var _this2 = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));\n\n        _this2.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);\n        return _this2;\n      }\n\n      _createClass(LazyLoadDecorated, [{\n        key: 'render',\n        value: function render() {\n          return _react2.default.createElement(\n            LazyLoad,\n            options,\n            _react2.default.createElement(WrappedComponent, this.props)\n          );\n        }\n      }]);\n\n      return LazyLoadDecorated;\n    }(_react.Component);\n  };\n};\n\nexports.lazyload = decorator;\nexports.default = LazyLoad;\nexports.forceCheck = lazyLoadHandler;\nexports.forceVisible = forceVisible;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0;\n  var args = void 0;\n  var context = void 0;\n  var timestamp = void 0;\n  var result = void 0;\n\n  var later = function later() {\n    var last = +new Date() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = null;\n          args = null;\n        }\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = +new Date();\n\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = null;\n      args = null;\n    }\n\n    return result;\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.on = on;\nexports.off = off;\nfunction on(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.addEventListener) {\n    el.addEventListener(eventName, callback, opts);\n  } else if (el.attachEvent) {\n    el.attachEvent(\"on\" + eventName, function (e) {\n      callback.call(el, e || window.event);\n    });\n  }\n}\n\nfunction off(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.removeEventListener) {\n    el.removeEventListener(eventName, callback, opts);\n  } else if (el.detachEvent) {\n    el.detachEvent(\"on\" + eventName, callback);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * @fileOverview Find scroll parent\n */\n\nexports.default = function (node) {\n  if (!(node instanceof HTMLElement)) {\n    return document.documentElement;\n  }\n\n  var excludeStaticParent = node.style.position === 'absolute';\n  var overflowRegex = /(scroll|auto|overlay)/;\n  var parent = node;\n\n  while (parent) {\n    if (!parent.parentNode) {\n      return node.ownerDocument || document.documentElement;\n    }\n\n    var style = window.getComputedStyle(parent);\n    var position = style.position;\n    var overflow = style.overflow;\n    var overflowX = style['overflow-x'];\n    var overflowY = style['overflow-y'];\n\n    if (position === 'static' && excludeStaticParent) {\n      parent = parent.parentNode;\n      continue;\n    }\n\n    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {\n      return parent;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return node.ownerDocument || node.documentElement || document.documentElement;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throttle;\n/*eslint-disable */\nfunction throttle(fn, threshhold, scope) {\n  threshhold || (threshhold = 250);\n  var last, deferTimer;\n  return function () {\n    var context = scope || this;\n\n    var now = +new Date(),\n        args = arguments;\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Purchasing = exports.Stake = exports.IDO = exports.Farming = exports.Swap = exports.SPLT = exports.Lamports = exports.utils = exports.schema = exports.keystore = exports.account = exports.RawWallet = void 0;\n__exportStar(require(\"./rawWallet\"), exports);\nvar rawWallet_1 = require(\"./rawWallet\");\nObject.defineProperty(exports, \"RawWallet\", { enumerable: true, get: function () { return rawWallet_1.default; } });\nvar account_1 = require(\"./account\");\nObject.defineProperty(exports, \"account\", { enumerable: true, get: function () { return account_1.default; } });\n__exportStar(require(\"./default\"), exports);\n__exportStar(require(\"./keystore\"), exports);\nvar keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"keystore\", { enumerable: true, get: function () { return keystore_1.default; } });\n__exportStar(require(\"./schema\"), exports);\nvar schema_1 = require(\"./schema\");\nObject.defineProperty(exports, \"schema\", { enumerable: true, get: function () { return schema_1.default; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"utils\", { enumerable: true, get: function () { return utils_1.default; } });\nvar lamports_1 = require(\"./lamports\");\nObject.defineProperty(exports, \"Lamports\", { enumerable: true, get: function () { return lamports_1.default; } });\n__exportStar(require(\"./splt\"), exports);\nvar splt_1 = require(\"./splt\");\nObject.defineProperty(exports, \"SPLT\", { enumerable: true, get: function () { return splt_1.default; } });\n__exportStar(require(\"./swap\"), exports);\nvar swap_1 = require(\"./swap\");\nObject.defineProperty(exports, \"Swap\", { enumerable: true, get: function () { return swap_1.default; } });\n__exportStar(require(\"./farming\"), exports);\nvar farming_1 = require(\"./farming\");\nObject.defineProperty(exports, \"Farming\", { enumerable: true, get: function () { return farming_1.default; } });\n__exportStar(require(\"./ido\"), exports);\nvar ido_1 = require(\"./ido\");\nObject.defineProperty(exports, \"IDO\", { enumerable: true, get: function () { return ido_1.default; } });\n__exportStar(require(\"./stake\"), exports);\nvar stake_1 = require(\"./stake\");\nObject.defineProperty(exports, \"Stake\", { enumerable: true, get: function () { return stake_1.default; } });\n__exportStar(require(\"./purchasing\"), exports);\nvar purchasing_1 = require(\"./purchasing\");\nObject.defineProperty(exports, \"Purchasing\", { enumerable: true, get: function () { return purchasing_1.default; } });\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkey: Uint8Array): boolean {\n    return is_on_curve(pubkey) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (\n  property: string = 'publicKey',\n): BufferLayout.Layout => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): BufferLayout.Layout => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string') => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer: any, offset: any) => {\n    const data = _decode(buffer, offset);\n    return data['chars'].toString('utf8');\n  };\n\n  rsl.encode = (str: any, buffer: any, offset: any) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  (rsl as any).alloc = (str: any) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rsl;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct(\n    [publicKey('staker'), publicKey('withdrawer')],\n    property,\n  );\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = bs58.decode(instruction.data);\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? 0 : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator'),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS: {\n  [type in SystemInstructionType]: InstructionType;\n} = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport fetch from 'cross-fetch';\nimport type {Response} from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: SimulatedTransactionAccountInfo[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          pick({\n            executable: boolean(),\n            owner: string(),\n            lamports: number(),\n            data: array(string()),\n            rentEpoch: optional(number()),\n          }),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger with signatures only\n */\nexport type ConfirmedBlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: (url: string, options: any) => Promise<Response>;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = (url: string, options: any) => {\n      return new Promise<Response>((resolve, reject) => {\n        fetchMiddleware(url, options, async (url: string, options: any) => {\n          try {\n            resolve(await fetch(url, options));\n          } catch (error) {\n            reject(error);\n          }\n        });\n      });\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlockSignatures\" message\n */\nconst GetConfirmedBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetParsedConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch infor for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: Function,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retring calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch a processed transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const result = await this.getBlock(slot, {commitment});\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const result = await this.getTransaction(signature, {commitment});\n    if (!result) return result;\n    const {message, signatures} = result.transaction;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          this._rpcWebSocket.close();\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","export function promiseTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n): Promise<T | null> {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  const timeoutPromise: Promise<null> = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then((result: T | null) => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        publicKeyOffset,\n        publicKeyInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  | 'AuthorizeWithSeed'\n  | 'Authorize'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Split'\n  | 'Withdraw'\n  | 'Merge';\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS: {\n  [type in StakeInstructionType]: InstructionType;\n} = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n      Layout.rustString('authoritySeed'),\n      Layout.publicKey('authorityOwner'),\n    ]),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n\n    return transaction.add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = {\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n};\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedVoterPubkey'),\n  Layout.publicKey('authorizedWithdrawerPubkey'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64('epoch'),\n  BufferLayout.nu64('credits'),\n  BufferLayout.nu64('lastEpochCredits'),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedVoterPubkey = args.authorizedVoterPubkey;\n    this.authorizedWithdrawerPubkey = args.authorizedWithdrawerPubkey;\n    this.commission = args.commission;\n    this.votes = args.votes;\n    this.rootSlot = args.rootSlot;\n    this.epoch = args.epoch;\n    this.credits = args.credits;\n    this.lastEpochCredits = args.lastEpochCredits;\n    this.epochCredits = args.epochCredits;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const va = VoteAccountLayout.decode(toBuffer(buffer), 0);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedVoterPubkey: new PublicKey(va.authorizedVoterPubkey),\n      authorizedWithdrawerPubkey: new PublicKey(va.authorizedWithdrawerPubkey),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      epoch: va.epoch,\n      credits: va.credits,\n      lastEpochCredits: va.lastEpochCredits,\n      epochCredits: va.epochCredits,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {Connection} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  function CopyToClipboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CopyToClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, [\"text\", \"onCopy\", \"options\", \"children\"]);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return _react[\"default\"].cloneElement(elem, _objectSpread({}, props, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["exports","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_propTypes2","_event","_scrollParent2","_debounce2","_throttle2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","defaultBoundingClientRect","LISTEN_FLAG","listeners","pending","passiveEventSupported","opts","get","window","addEventListener","e","passiveEvent","capture","passive","checkVisible","component","node","ref","HTMLElement","parent","visible","overflow","ownerDocument","document","documentElement","parentTop","parentLeft","parentHeight","parentWidth","_parent$getBoundingCl","getBoundingClientRect","top","left","height","width","windowInnerHeight","innerHeight","clientHeight","windowInnerWidth","innerWidth","clientWidth","intersectionTop","Math","max","intersectionLeft","intersectionHeight","min","intersectionWidth","_node$getBoundingClie","offsetTop","offsetLeft","offsets","Array","isArray","offset","checkOverflowVisible","offsetWidth","offsetHeight","getClientRects","elementHeight","_node$getBoundingClie2","checkNormalVisible","once","push","forceUpdate","unmountIfInvisible","purgePending","forEach","index","indexOf","splice","lazyLoadHandler","listener","delayType","finalLazyLoadHandler","LazyLoad","_Component","this","_this","getPrototypeOf","setRef","bind","scrollport","scrollContainer","querySelector","needResetFinalLazyLoadHandler","debounce","off","throttle","getAttribute","listenerCount","setAttribute","_props","scroll","resize","on","removeEventListener","removeAttribute","element","_props2","children","placeholder","className","classNamePrefix","style","createElement","Component","propTypes","string","bool","oneOfType","number","arrayOf","object","defaultProps","getDisplayName","WrappedComponent","displayName","name","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","setTimeout","apply","arguments","callNow","el","eventName","callback","attachEvent","event","detachEvent","excludeStaticParent","position","overflowRegex","parentNode","getComputedStyle","overflowX","overflowY","test","fn","threshhold","scope","deferTimer","now","clearTimeout","__createBinding","o","m","k","k2","__exportStar","p","hasOwnProperty","Purchasing","Stake","IDO","Farming","Swap","SPLT","Lamports","utils","schema","keystore","account","RawWallet","rawWallet_1","account_1","keystore_1","schema_1","utils_1","lamports_1","splt_1","swap_1","farming_1","ido_1","stake_1","purchasing_1","toBuffer","arr","Buffer","assert","val","msg","Error","equal","l","r","inherits_browserModule","ctor","superCtor","super_","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","word","zero8","enc","slice","res","replace","parseInt","c","toString","endian","start","end","len","b","a","d","buf","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","num","BlockHash","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","x","y","z","maj32","p32","s","common","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","f","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","Hash","inner","outer","_init","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","_logLevel","_globalLogger","_normalizeError","missing","form","normalize","join","String","fromCharCode","message","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","_log","logLevel","level","toLowerCase","throwArgumentError","console","log","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","Uint8Array","hex","JSON","stringify","reason","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","kind","MISSING_NEW","checkAbstract","censorship","permanent","globalLogger","logger","addSlice","array","isInteger","arrayify","options","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","v","isBytes","data","Struct","properties","encode","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","super","enum","Map","MAX_SEED_LENGTH","PublicKey","_bn","isPublicKeyData","decoded","bs58","byteLength","equals","publicKey","eq","toBase58","toBytes","toArrayLike","zeroPad","buffer","fromPublicKey","programId","seeds","seed","publicKeyBytes","is_on_curve","nonce","seedsWithNonce","address","createProgramAddress","err","pubkey","fields","naclLowLevel","nacl","chk","den","den2","den4","den6","neq25519","gf1","I","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","property","BufferLayout","rustString","rsl","_decode","_encode","str","chars","decodeLength","size","elem","encodeLength","rem_len","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","ix","set","isAccountSigner","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","filter","_","numKeys","keyCount","shortvec","map","instruction","programIdIndex","keyIndicesCount","accounts","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","Layout","transaction","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","byteArray","accountCount","dataSlice","messageArgs","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","TransactionInstruction","Transaction","signature","signatures","feePayer","nonceInfo","add","items","item","compileMessage","accountMetas","accountMeta","isSigner","isWritable","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","setSigners","signers","seen","sign","uniqueSigners","signer","partialSign","_partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","config","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","connection","status","sleep","ms","Promise","resolve","encodeData","type","allocLength","alloc","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","span","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SystemInstruction","typeIndex","instructionTypeLayout","ixType","layout","SYSTEM_INSTRUCTION_LAYOUTS","fromPubkey","newAccountPubkey","lamports","toPubkey","basePubkey","space","accountPubkey","authorized","noncePubkey","newAuthorizedPubkey","SystemProgram","expectedLength","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","base","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","balanceNeeded","programInfo","program","payer","dataLayout","chunkSize","transactions","REQUESTS_PER_SECOND","BPF_LOADER_PROGRAM_ID","BpfLoader","global","__self__","F","fetch","DOMException","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","iterator","next","shift","done","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","readArrayBufferAsText","formData","decode","json","parse","oldValue","thisArg","values","entries","methods","Request","input","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","split","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","ponyfill","ctx","module","trailingZeros","n","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","PublicKeyFromString","coerce","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","executable","owner","rentEpoch","unitsConsumed","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","root","SlotNotificationResult","SlotUpdateResult","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetConfirmedBlockRpcResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockSignaturesRpcResult","GetConfirmedTransactionRpcResult","GetParsedConfirmedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","lastFetch","transactionSignatures","simulatedSignatures","_accountChangeSubscriptionCounter","_accountChangeSubscriptions","_programAccountChangeSubscriptionCounter","_programAccountChangeSubscriptions","_rootSubscriptionCounter","_rootSubscriptions","_signatureSubscriptionCounter","_signatureSubscriptions","_slotSubscriptionCounter","_slotSubscriptions","_logsSubscriptionCounter","_logsSubscriptions","_slotUpdateSubscriptionCounter","_slotUpdateSubscriptions","URL","client","commitmentOrConfig","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","endpoint","useHttps","Number","makeWebsocketUrl","fetchWithMiddleware","too_many_requests_retries","waitTime","createRpcClient","requests","batch","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","_args","ownerAddress","arg","mintAddress","getAccountInfoAndContext","publicKeys","extra","configOrCommitment","encoding","decodedSignature","subscriptionCommitment","confirmPromise","subscriptionId","onSignature","timeoutMs","timeoutPromise","timeoutId","promiseTimeout","duration","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","addresses","epochSchedule","limit","getRecentBlockhashAndContext","_buildArgsAtLeastConfirmed","getBlock","endSlot","transactionDetails","getTransaction","methodName","firstAvailableBlock","block","getConfirmedBlockSignatures","highestConfirmedRoot","getSlot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","getNonceAndContext","to","disableCache","expired","startTime","getRecentBlockhash","MS_PER_SLOT","transactionOrMessage","_recentBlockhash","includes","encodedTransaction","traceIndent","logTrace","sendRawTransaction","sendEncodedTransaction","setInterval","clearInterval","sub","rpcMethod","unsubscribeId","_resetSubscriptions","_updateSubscriptions","programKeys","slotKeys","slotUpdateKeys","signatureKeys","rootKeys","logsKeys","filters","mentions","notification","onAccountChange","subInfo","_unsubscribe","accountId","onProgramAccountChange","onLogs","onSlotChange","onSlotUpdate","override","onSignatureWithOptions","onRootChange","Keypair","keypair","encoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","lockup","STAKE_INSTRUCTION_LAYOUTS","stakePubkey","stakeAuthorizationType","authorityOwner","authorityBase","authoritySeed","splitStakePubkey","sourceStakePubKey","StakeProgram","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","custodianPubkey","newAuthorized","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","ethAddress","rawAddress","ethAddressInstructionIndex","recoveryId","pkey","publicKeyCreate","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedVoterPubkey","authorizedWithdrawerPubkey","votes","credits","lastEpochCredits","va","sendAndConfirmRawTransaction","http","devnet","testnet","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","deselectCurrent","clipboardToIE11Formatting","reselectPrevious","range","selection","mark","success","createRange","getSelection","textContent","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","stopPropagation","format","preventDefault","clipboardData","clearData","setData","onCopy","appendChild","selectNodeContents","addRange","execCommand","copyKey","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","symbol","elementType","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","CopyToClipboard","_copyToClipboard","_typeof","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectWithoutProperties","source","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_defineProperties","_assertThisInitialized","_getPrototypeOf","_setPrototypeOf","_defineProperty","_React$PureComponent","_getPrototypeOf2","_len","_key","_this$props","Children","only","onClick","_this$props2","cloneElement","getOwnPropertyDescriptors","_objectSpread","PureComponent","hasElementType","Element","hasMap","hasSet","Set","hasArrayBuffer","it","RegExp","flags","valueOf","$$typeof","rangeCount","activeElement","ranges","getRangeAt","tagName","blur","focus","gf","Float64Array","randombytes","_0","_9","gf0","_121665","D2","X","Y","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","q","pack25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","reduce","crypto_sign","sm","smlen","crypto_sign_open","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","sig","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","crypto","msCrypto","getRandomValues"],"sourceRoot":""}